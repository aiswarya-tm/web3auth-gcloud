{"version":3,"file":"static/js/305.20b3a58a.chunk.js","mappings":"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","sources":["../node_modules/@ethereumjs/common/src/common.ts","../node_modules/@ethereumjs/common/src/eips/index.ts","../node_modules/@ethereumjs/common/src/enums.ts","../node_modules/@ethereumjs/common/src/hardforks/index.ts","../node_modules/@ethereumjs/common/src/index.ts","../node_modules/@ethereumjs/common/src/utils.ts","../node_modules/@ethereumjs/tx/src/baseTransaction.ts","../node_modules/@ethereumjs/tx/src/constants.ts","../node_modules/@ethereumjs/tx/src/eip1559Transaction.ts","../node_modules/@ethereumjs/tx/src/eip2930Transaction.ts","../node_modules/@ethereumjs/tx/src/eip4844Transaction.ts","../node_modules/@ethereumjs/tx/src/fromRpc.ts","../node_modules/@ethereumjs/tx/src/index.ts","../node_modules/@ethereumjs/tx/src/kzg/kzg.ts","../node_modules/@ethereumjs/tx/src/legacyTransaction.ts","../node_modules/@ethereumjs/tx/src/transactionFactory.ts","../node_modules/@ethereumjs/tx/src/types.ts","../node_modules/@ethereumjs/tx/src/util.ts","../node_modules/@ethereumjs/tx/src/utils/blobHelpers.ts","../node_modules/@ethereumjs/tx/node_modules/@ethereumjs/rlp/src/index.ts","../node_modules/@metamask/eth-sig-util/src/encryption.ts","../node_modules/@metamask/eth-sig-util/src/ethereumjs-abi-utils.ts","../node_modules/@metamask/eth-sig-util/src/index.ts","../node_modules/@metamask/eth-sig-util/src/personal-sign.ts","../node_modules/@metamask/eth-sig-util/src/sign-typed-data.ts","../node_modules/@metamask/eth-sig-util/src/utils.ts","../node_modules/@metamask/eth-sig-util/node_modules/bn.js/lib/bn.js","../node_modules/@web3auth/ethereum-provider/src/rpc/walletMidddleware.ts","../node_modules/@web3auth/ethereum-provider/src/rpc/ethRpcMiddlewares.ts","../node_modules/@web3auth/ethereum-provider/src/rpc/jrpcClient.ts","../node_modules/@web3auth/ethereum-provider/src/providers/injectedProviders/WalletConnectProvider.ts","../node_modules/@web3auth/ethereum-provider/src/providers/injectedProviders/walletConnectUtils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/converter.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/TransactionFormatter/utils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/ethPrivatekeyUtils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/utils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/TransactionFormatter/constants.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/TransactionFormatter/index.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/EthereumPrivateKeyProvider.ts","../node_modules/crc-32/crc32.js","../node_modules/ethereum-cryptography/sha256.js","../node_modules/ethjs-util/lib/index.js","../node_modules/is-hex-prefixed/src/index.js","../node_modules/jsonschema/lib/attribute.js","../node_modules/jsonschema/lib/helpers.js","../node_modules/jsonschema/lib/index.js","../node_modules/jsonschema/lib/scan.js","../node_modules/jsonschema/lib/validator.js","../node_modules/strip-hex-prefix/src/index.js","../node_modules/tweetnacl-util/nacl-util.js","../node_modules/tweetnacl/nacl-fast.js"],"sourcesContent":["import { TypeOutput, intToBuffer, toType } from '@ethereumjs/util'\nimport { buf as crc32Buffer } from 'crc-32'\nimport { EventEmitter } from 'events'\n\nimport * as goerli from './chains/goerli.json'\nimport * as mainnet from './chains/mainnet.json'\nimport * as rinkeby from './chains/rinkeby.json'\nimport * as ropsten from './chains/ropsten.json'\nimport * as sepolia from './chains/sepolia.json'\nimport { EIPs } from './eips'\nimport { Chain, CustomChain, Hardfork } from './enums'\nimport { hardforks as HARDFORK_SPECS } from './hardforks'\nimport { parseGethGenesis } from './utils'\n\nimport type { ConsensusAlgorithm, ConsensusType } from './enums'\nimport type {\n  BootstrapNodeConfig,\n  CasperConfig,\n  ChainConfig,\n  ChainName,\n  ChainsConfig,\n  CliqueConfig,\n  CommonOpts,\n  CustomCommonOpts,\n  EthashConfig,\n  GenesisBlockConfig,\n  GethConfigOpts,\n  HardforkConfig,\n} from './types'\nimport type { BigIntLike } from '@ethereumjs/util'\n\ntype HardforkSpecKeys = keyof typeof HARDFORK_SPECS\ntype HardforkSpecValues = typeof HARDFORK_SPECS[HardforkSpecKeys]\n/**\n * Common class to access chain and hardfork parameters and to provide\n * a unified and shared view on the network and hardfork state.\n *\n * Use the {@link Common.custom} static constructor for creating simple\n * custom chain {@link Common} objects (more complete custom chain setups\n * can be created via the main constructor and the {@link CommonOpts.customChains} parameter).\n */\nexport class Common extends EventEmitter {\n  readonly DEFAULT_HARDFORK: string | Hardfork\n\n  private _chainParams: ChainConfig\n  private _hardfork: string | Hardfork\n  private _eips: number[] = []\n  private _customChains: ChainConfig[]\n\n  private HARDFORK_CHANGES: [HardforkSpecKeys, HardforkSpecValues][]\n\n  /**\n   * Creates a {@link Common} object for a custom chain, based on a standard one.\n   *\n   * It uses all the {@link Chain} parameters from the {@link baseChain} option except the ones overridden\n   * in a provided {@link chainParamsOrName} dictionary. Some usage example:\n   *\n   * ```javascript\n   * Common.custom({chainId: 123})\n   * ```\n   *\n   * There are also selected supported custom chains which can be initialized by using one of the\n   * {@link CustomChains} for {@link chainParamsOrName}, e.g.:\n   *\n   * ```javascript\n   * Common.custom(CustomChains.MaticMumbai)\n   * ```\n   *\n   * Note that these supported custom chains only provide some base parameters (usually the chain and\n   * network ID and a name) and can only be used for selected use cases (e.g. sending a tx with\n   * the `@ethereumjs/tx` library to a Layer-2 chain).\n   *\n   * @param chainParamsOrName Custom parameter dict (`name` will default to `custom-chain`) or string with name of a supported custom chain\n   * @param opts Custom chain options to set the {@link CustomCommonOpts.baseChain}, selected {@link CustomCommonOpts.hardfork} and others\n   */\n  static custom(\n    chainParamsOrName: Partial<ChainConfig> | CustomChain,\n    opts: CustomCommonOpts = {}\n  ): Common {\n    const baseChain = opts.baseChain ?? 'mainnet'\n    const standardChainParams = { ...Common._getChainParams(baseChain) }\n    standardChainParams['name'] = 'custom-chain'\n\n    if (typeof chainParamsOrName !== 'string') {\n      return new Common({\n        chain: {\n          ...standardChainParams,\n          ...chainParamsOrName,\n        },\n        ...opts,\n      })\n    } else {\n      if (chainParamsOrName === CustomChain.PolygonMainnet) {\n        return Common.custom(\n          {\n            name: CustomChain.PolygonMainnet,\n            chainId: 137,\n            networkId: 137,\n          },\n          opts\n        )\n      }\n      if (chainParamsOrName === CustomChain.PolygonMumbai) {\n        return Common.custom(\n          {\n            name: CustomChain.PolygonMumbai,\n            chainId: 80001,\n            networkId: 80001,\n          },\n          opts\n        )\n      }\n      if (chainParamsOrName === CustomChain.ArbitrumRinkebyTestnet) {\n        return Common.custom(\n          {\n            name: CustomChain.ArbitrumRinkebyTestnet,\n            chainId: 421611,\n            networkId: 421611,\n          },\n          opts\n        )\n      }\n      if (chainParamsOrName === CustomChain.ArbitrumOne) {\n        return Common.custom(\n          {\n            name: CustomChain.ArbitrumOne,\n            chainId: 42161,\n            networkId: 42161,\n          },\n          opts\n        )\n      }\n      if (chainParamsOrName === CustomChain.xDaiChain) {\n        return Common.custom(\n          {\n            name: CustomChain.xDaiChain,\n            chainId: 100,\n            networkId: 100,\n          },\n          opts\n        )\n      }\n\n      if (chainParamsOrName === CustomChain.OptimisticKovan) {\n        return Common.custom(\n          {\n            name: CustomChain.OptimisticKovan,\n            chainId: 69,\n            networkId: 69,\n          },\n          // Optimism has not implemented the London hardfork yet (targeting Q1.22)\n          { hardfork: Hardfork.Berlin, ...opts }\n        )\n      }\n\n      if (chainParamsOrName === CustomChain.OptimisticEthereum) {\n        return Common.custom(\n          {\n            name: CustomChain.OptimisticEthereum,\n            chainId: 10,\n            networkId: 10,\n          },\n          // Optimism has not implemented the London hardfork yet (targeting Q1.22)\n          { hardfork: Hardfork.Berlin, ...opts }\n        )\n      }\n      throw new Error(`Custom chain ${chainParamsOrName} not supported`)\n    }\n  }\n\n  /**\n   * Static method to load and set common from a geth genesis json\n   * @param genesisJson json of geth configuration\n   * @param { chain, eips, genesisHash, hardfork, mergeForkIdPostMerge } to further configure the common instance\n   * @returns Common\n   */\n  static fromGethGenesis(\n    genesisJson: any,\n    { chain, eips, genesisHash, hardfork, mergeForkIdPostMerge }: GethConfigOpts\n  ): Common {\n    const genesisParams = parseGethGenesis(genesisJson, chain, mergeForkIdPostMerge)\n    const common = new Common({\n      chain: genesisParams.name ?? 'custom',\n      customChains: [genesisParams],\n      eips,\n      hardfork: hardfork ?? genesisParams.hardfork,\n    })\n    if (genesisHash !== undefined) {\n      common.setForkHashes(genesisHash)\n    }\n    return common\n  }\n\n  /**\n   * Static method to determine if a {@link chainId} is supported as a standard chain\n   * @param chainId bigint id (`1`) of a standard chain\n   * @returns boolean\n   */\n  static isSupportedChainId(chainId: bigint): boolean {\n    const initializedChains = this._getInitializedChains()\n    return Boolean((initializedChains['names'] as ChainName)[chainId.toString()])\n  }\n\n  private static _getChainParams(\n    chain: string | number | Chain | bigint,\n    customChains?: ChainConfig[]\n  ): ChainConfig {\n    const initializedChains = this._getInitializedChains(customChains)\n    if (typeof chain === 'number' || typeof chain === 'bigint') {\n      chain = chain.toString()\n\n      if ((initializedChains['names'] as ChainName)[chain]) {\n        const name: string = (initializedChains['names'] as ChainName)[chain]\n        return initializedChains[name] as ChainConfig\n      }\n\n      throw new Error(`Chain with ID ${chain} not supported`)\n    }\n\n    if (initializedChains[chain] !== undefined) {\n      return initializedChains[chain] as ChainConfig\n    }\n\n    throw new Error(`Chain with name ${chain} not supported`)\n  }\n\n  constructor(opts: CommonOpts) {\n    super()\n    this._customChains = opts.customChains ?? []\n    this._chainParams = this.setChain(opts.chain)\n    this.DEFAULT_HARDFORK = this._chainParams.defaultHardfork ?? Hardfork.Merge\n    // Assign hardfork changes in the sequence of the applied hardforks\n    this.HARDFORK_CHANGES = this.hardforks().map((hf) => [\n      hf.name as HardforkSpecKeys,\n      HARDFORK_SPECS[hf.name as HardforkSpecKeys],\n    ])\n    this._hardfork = this.DEFAULT_HARDFORK\n    if (opts.hardfork !== undefined) {\n      this.setHardfork(opts.hardfork)\n    }\n    if (opts.eips) {\n      this.setEIPs(opts.eips)\n    }\n  }\n\n  /**\n   * Sets the chain\n   * @param chain String ('mainnet') or Number (1) chain representation.\n   *              Or, a Dictionary of chain parameters for a private network.\n   * @returns The dictionary with parameters set as chain\n   */\n  setChain(chain: string | number | Chain | bigint | object): ChainConfig {\n    if (typeof chain === 'number' || typeof chain === 'bigint' || typeof chain === 'string') {\n      this._chainParams = Common._getChainParams(chain, this._customChains)\n    } else if (typeof chain === 'object') {\n      if (this._customChains.length > 0) {\n        throw new Error(\n          'Chain must be a string, number, or bigint when initialized with customChains passed in'\n        )\n      }\n      const required = ['networkId', 'genesis', 'hardforks', 'bootstrapNodes']\n      for (const param of required) {\n        if (!(param in chain)) {\n          throw new Error(`Missing required chain parameter: ${param}`)\n        }\n      }\n      this._chainParams = chain as ChainConfig\n    } else {\n      throw new Error('Wrong input format')\n    }\n    for (const hf of this.hardforks()) {\n      if (hf.block === undefined) {\n        throw new Error(`Hardfork cannot have undefined block number`)\n      }\n    }\n    return this._chainParams\n  }\n\n  /**\n   * Sets the hardfork to get params for\n   * @param hardfork String identifier (e.g. 'byzantium') or {@link Hardfork} enum\n   */\n  setHardfork(hardfork: string | Hardfork): void {\n    let existing = false\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      if (hfChanges[0] === hardfork) {\n        if (this._hardfork !== hardfork) {\n          this._hardfork = hardfork\n          this.emit('hardforkChanged', hardfork)\n        }\n        existing = true\n      }\n    }\n    if (!existing) {\n      throw new Error(`Hardfork with name ${hardfork} not supported`)\n    }\n  }\n\n  /**\n   * Returns the hardfork based on the block number or an optional\n   * total difficulty (Merge HF) provided.\n   *\n   * An optional TD takes precedence in case the corresponding HF block\n   * is set to `null` or otherwise needs to match (if not an error\n   * will be thrown).\n   *\n   * @param blockNumber\n   * @param td : total difficulty of the parent block (for block hf) OR of the chain latest (for chain hf)\n   * @param timestamp: timestamp in seconds at which block was/is to be minted\n   * @returns The name of the HF\n   */\n  getHardforkByBlockNumber(\n    blockNumber: BigIntLike,\n    td?: BigIntLike,\n    timestamp?: BigIntLike\n  ): string {\n    blockNumber = toType(blockNumber, TypeOutput.BigInt)\n    td = toType(td, TypeOutput.BigInt)\n    timestamp = toType(timestamp, TypeOutput.Number)\n\n    // Filter out hardforks with no block number, no ttd or no timestamp (i.e. unapplied hardforks)\n    const hfs = this.hardforks().filter(\n      (hf) =>\n        hf.block !== null || (hf.ttd !== null && hf.ttd !== undefined) || hf.timestamp !== undefined\n    )\n    const mergeIndex = hfs.findIndex((hf) => hf.ttd !== null && hf.ttd !== undefined)\n    const doubleTTDHF = hfs\n      .slice(mergeIndex + 1)\n      .findIndex((hf) => hf.ttd !== null && hf.ttd !== undefined)\n    if (doubleTTDHF >= 0) {\n      throw Error(`More than one merge hardforks found with ttd specified`)\n    }\n\n    // Find the first hardfork that has a block number greater than `blockNumber`\n    // (skips the merge hardfork since it cannot have a block number specified).\n    // If timestamp is not provided, it also skips timestamps hardforks to continue\n    // discovering/checking number hardforks.\n    let hfIndex = hfs.findIndex(\n      (hf) =>\n        (hf.block !== null && hf.block > blockNumber) ||\n        (timestamp !== undefined && Number(hf.timestamp) > timestamp)\n    )\n\n    if (hfIndex === -1) {\n      // all hardforks apply, set hfIndex to the last one as that's the candidate\n      hfIndex = hfs.length\n    } else if (hfIndex === 0) {\n      // cannot have a case where a block number is before all applied hardforks\n      // since the chain has to start with a hardfork\n      throw Error('Must have at least one hardfork at block 0')\n    }\n\n    // If timestamp is not provided, we need to rollback to the last hf with block or ttd\n    if (timestamp === undefined) {\n      const stepBack = hfs\n        .slice(0, hfIndex)\n        .reverse()\n        .findIndex((hf) => hf.block !== null || hf.ttd !== undefined)\n      hfIndex = hfIndex - stepBack\n    }\n    // Move hfIndex one back to arrive at candidate hardfork\n    hfIndex = hfIndex - 1\n\n    // If the timestamp was not provided, we could have skipped timestamp hardforks to look for number\n    // hardforks. so it will now be needed to rollback\n    if (hfs[hfIndex].block === null && hfs[hfIndex].timestamp === undefined) {\n      // We're on the merge hardfork.  Let's check the TTD\n      if (td === undefined || td === null || BigInt(hfs[hfIndex].ttd!) > td) {\n        // Merge ttd greater than current td so we're on hardfork before merge\n        hfIndex -= 1\n      }\n    } else {\n      if (mergeIndex >= 0 && td !== undefined && td !== null) {\n        if (hfIndex >= mergeIndex && BigInt(hfs[mergeIndex].ttd!) > td) {\n          throw Error('Maximum HF determined by total difficulty is lower than the block number HF')\n        } else if (hfIndex < mergeIndex && BigInt(hfs[mergeIndex].ttd!) <= td) {\n          throw Error('HF determined by block number is lower than the minimum total difficulty HF')\n        }\n      }\n    }\n\n    const hfStartIndex = hfIndex\n    // Move the hfIndex to the end of the hardforks that might be scheduled on the same block/timestamp\n    // This won't anyway be the case with Merge hfs\n    for (; hfIndex < hfs.length - 1; hfIndex++) {\n      // break out if hfIndex + 1 is not scheduled at hfIndex\n      if (\n        hfs[hfIndex].block !== hfs[hfIndex + 1].block ||\n        hfs[hfIndex].timestamp !== hfs[hfIndex + 1].timestamp\n      ) {\n        break\n      }\n    }\n\n    if (timestamp) {\n      const minTimeStamp = hfs\n        .slice(0, hfStartIndex)\n        .reduce((acc: number, hf: HardforkConfig) => Math.max(Number(hf.timestamp ?? '0'), acc), 0)\n      if (minTimeStamp > timestamp) {\n        throw Error(`Maximum HF determined by timestamp is lower than the block number/ttd HF`)\n      }\n\n      const maxTimeStamp = hfs\n        .slice(hfIndex + 1)\n        .reduce(\n          (acc: number, hf: HardforkConfig) => Math.min(Number(hf.timestamp ?? timestamp), acc),\n          timestamp\n        )\n      if (maxTimeStamp < timestamp) {\n        throw Error(`Maximum HF determined by block number/ttd is lower than timestamp HF`)\n      }\n    }\n    const hardfork = hfs[hfIndex]\n    return hardfork.name\n  }\n\n  /**\n   * Sets a new hardfork based on the block number or an optional\n   * total difficulty (Merge HF) provided.\n   *\n   * An optional TD takes precedence in case the corresponding HF block\n   * is set to `null` or otherwise needs to match (if not an error\n   * will be thrown).\n   *\n   * @param blockNumber\n   * @param td\n   * @param timestamp\n   * @returns The name of the HF set\n   */\n  setHardforkByBlockNumber(\n    blockNumber: BigIntLike,\n    td?: BigIntLike,\n    timestamp?: BigIntLike\n  ): string {\n    const hardfork = this.getHardforkByBlockNumber(blockNumber, td, timestamp)\n    this.setHardfork(hardfork)\n    return hardfork\n  }\n\n  /**\n   * Internal helper function, returns the params for the given hardfork for the chain set\n   * @param hardfork Hardfork name\n   * @returns Dictionary with hardfork params or null if hardfork not on chain\n   */\n  _getHardfork(hardfork: string | Hardfork): HardforkConfig | null {\n    const hfs = this.hardforks()\n    for (const hf of hfs) {\n      if (hf['name'] === hardfork) return hf\n    }\n    return null\n  }\n\n  /**\n   * Sets the active EIPs\n   * @param eips\n   */\n  setEIPs(eips: number[] = []) {\n    for (const eip of eips) {\n      if (!(eip in EIPs)) {\n        throw new Error(`${eip} not supported`)\n      }\n      const minHF = this.gteHardfork(EIPs[eip]['minimumHardfork'])\n      if (!minHF) {\n        throw new Error(\n          `${eip} cannot be activated on hardfork ${this.hardfork()}, minimumHardfork: ${minHF}`\n        )\n      }\n      if (EIPs[eip].requiredEIPs !== undefined) {\n        for (const elem of EIPs[eip].requiredEIPs) {\n          if (!(eips.includes(elem) || this.isActivatedEIP(elem))) {\n            throw new Error(`${eip} requires EIP ${elem}, but is not included in the EIP list`)\n          }\n        }\n      }\n    }\n    this._eips = eips\n  }\n\n  /**\n   * Returns a parameter for the current chain setup\n   *\n   * If the parameter is present in an EIP, the EIP always takes precedence.\n   * Otherwise the parameter if taken from the latest applied HF with\n   * a change on the respective parameter.\n   *\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @returns The value requested or `BigInt(0)` if not found\n   */\n  param(topic: string, name: string): bigint {\n    // TODO: consider the case that different active EIPs\n    // can change the same parameter\n    let value\n    for (const eip of this._eips) {\n      value = this.paramByEIP(topic, name, eip)\n      if (value !== undefined) return value\n    }\n    return this.paramByHardfork(topic, name, this._hardfork)\n  }\n\n  /**\n   * Returns the parameter corresponding to a hardfork\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @param hardfork Hardfork name\n   * @returns The value requested or `BigInt(0)` if not found\n   */\n  paramByHardfork(topic: string, name: string, hardfork: string | Hardfork): bigint {\n    let value = null\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      // EIP-referencing HF file (e.g. berlin.json)\n      if ('eips' in hfChanges[1]) {\n        const hfEIPs = hfChanges[1]['eips']\n        for (const eip of hfEIPs) {\n          const valueEIP = this.paramByEIP(topic, name, eip)\n          value = typeof valueEIP === 'bigint' ? valueEIP : value\n        }\n        // Parameter-inlining HF file (e.g. istanbul.json)\n      } else {\n        if (hfChanges[1][topic] === undefined) {\n          throw new Error(`Topic ${topic} not defined`)\n        }\n        if (hfChanges[1][topic][name] !== undefined) {\n          value = hfChanges[1][topic][name].v\n        }\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    return BigInt(value ?? 0)\n  }\n\n  /**\n   * Returns a parameter corresponding to an EIP\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @param eip Number of the EIP\n   * @returns The value requested or `undefined` if not found\n   */\n  paramByEIP(topic: string, name: string, eip: number): bigint | undefined {\n    if (!(eip in EIPs)) {\n      throw new Error(`${eip} not supported`)\n    }\n\n    const eipParams = EIPs[eip]\n    if (!(topic in eipParams)) {\n      throw new Error(`Topic ${topic} not defined`)\n    }\n    if (eipParams[topic][name] === undefined) {\n      return undefined\n    }\n    const value = eipParams[topic][name].v\n    return BigInt(value)\n  }\n\n  /**\n   * Returns a parameter for the hardfork active on block number or\n   * optional provided total difficulty (Merge HF)\n   * @param topic Parameter topic\n   * @param name Parameter name\n   * @param blockNumber Block number\n   * @param td Total difficulty\n   *    * @returns The value requested or `BigInt(0)` if not found\n   */\n  paramByBlock(\n    topic: string,\n    name: string,\n    blockNumber: BigIntLike,\n    td?: BigIntLike,\n    timestamp?: BigIntLike\n  ): bigint {\n    const hardfork = this.getHardforkByBlockNumber(blockNumber, td, timestamp)\n    return this.paramByHardfork(topic, name, hardfork)\n  }\n\n  /**\n   * Checks if an EIP is activated by either being included in the EIPs\n   * manually passed in with the {@link CommonOpts.eips} or in a\n   * hardfork currently being active\n   *\n   * Note: this method only works for EIPs being supported\n   * by the {@link CommonOpts.eips} constructor option\n   * @param eip\n   */\n  isActivatedEIP(eip: number): boolean {\n    if (this.eips().includes(eip)) {\n      return true\n    }\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      const hf = hfChanges[1]\n      if (this.gteHardfork(hf['name']) && 'eips' in hf) {\n        if ((hf['eips'] as number[]).includes(eip)) {\n          return true\n        }\n      }\n    }\n    return false\n  }\n\n  /**\n   * Checks if set or provided hardfork is active on block number\n   * @param hardfork Hardfork name or null (for HF set)\n   * @param blockNumber\n   * @returns True if HF is active on block number\n   */\n  hardforkIsActiveOnBlock(hardfork: string | Hardfork | null, blockNumber: BigIntLike): boolean {\n    blockNumber = toType(blockNumber, TypeOutput.BigInt)\n    hardfork = hardfork ?? this._hardfork\n    const hfBlock = this.hardforkBlock(hardfork)\n    if (typeof hfBlock === 'bigint' && hfBlock !== BigInt(0) && blockNumber >= hfBlock) {\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Alias to hardforkIsActiveOnBlock when hardfork is set\n   * @param blockNumber\n   * @returns True if HF is active on block number\n   */\n  activeOnBlock(blockNumber: BigIntLike): boolean {\n    return this.hardforkIsActiveOnBlock(null, blockNumber)\n  }\n\n  /**\n   * Sequence based check if given or set HF1 is greater than or equal HF2\n   * @param hardfork1 Hardfork name or null (if set)\n   * @param hardfork2 Hardfork name\n   * @param opts Hardfork options\n   * @returns True if HF1 gte HF2\n   */\n  hardforkGteHardfork(hardfork1: string | Hardfork | null, hardfork2: string | Hardfork): boolean {\n    hardfork1 = hardfork1 ?? this._hardfork\n    const hardforks = this.hardforks()\n\n    let posHf1 = -1,\n      posHf2 = -1\n    let index = 0\n    for (const hf of hardforks) {\n      if (hf['name'] === hardfork1) posHf1 = index\n      if (hf['name'] === hardfork2) posHf2 = index\n      index += 1\n    }\n    return posHf1 >= posHf2 && posHf2 !== -1\n  }\n\n  /**\n   * Alias to hardforkGteHardfork when hardfork is set\n   * @param hardfork Hardfork name\n   * @returns True if hardfork set is greater than hardfork provided\n   */\n  gteHardfork(hardfork: string | Hardfork): boolean {\n    return this.hardforkGteHardfork(null, hardfork)\n  }\n\n  /**\n   * Returns the hardfork change block for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if unscheduled\n   */\n  hardforkBlock(hardfork?: string | Hardfork): bigint | null {\n    hardfork = hardfork ?? this._hardfork\n    const block = this._getHardfork(hardfork)?.['block']\n    if (block === undefined || block === null) {\n      return null\n    }\n    return BigInt(block)\n  }\n\n  hardforkTimestamp(hardfork?: string | Hardfork): bigint | null {\n    hardfork = hardfork ?? this._hardfork\n    const timestamp = this._getHardfork(hardfork)?.['timestamp']\n    if (timestamp === undefined || timestamp === null) {\n      return null\n    }\n    return BigInt(timestamp)\n  }\n\n  /**\n   * Returns the hardfork change block for eip\n   * @param eip EIP number\n   * @returns Block number or null if unscheduled\n   */\n  eipBlock(eip: number): bigint | null {\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      const hf = hfChanges[1]\n      if ('eips' in hf) {\n        // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n        if (hf['eips'].includes(eip)) {\n          return this.hardforkBlock(hfChanges[0])\n        }\n      }\n    }\n    return null\n  }\n\n  /**\n   * Returns the hardfork change total difficulty (Merge HF) for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Total difficulty or null if no set\n   */\n  hardforkTTD(hardfork?: string | Hardfork): bigint | null {\n    hardfork = hardfork ?? this._hardfork\n    const ttd = this._getHardfork(hardfork)?.['ttd']\n    if (ttd === undefined || ttd === null) {\n      return null\n    }\n    return BigInt(ttd)\n  }\n\n  /**\n   * True if block number provided is the hardfork (given or set) change block\n   * @param blockNumber Number of the block to check\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns True if blockNumber is HF block\n   * @deprecated\n   */\n  isHardforkBlock(blockNumber: BigIntLike, hardfork?: string | Hardfork): boolean {\n    blockNumber = toType(blockNumber, TypeOutput.BigInt)\n    hardfork = hardfork ?? this._hardfork\n    const block = this.hardforkBlock(hardfork)\n    return typeof block === 'bigint' && block !== BigInt(0) ? block === blockNumber : false\n  }\n\n  /**\n   * Returns the change block for the next hardfork after the hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block timestamp, number or null if not available\n   */\n  nextHardforkBlockOrTimestamp(hardfork?: string | Hardfork): bigint | null {\n    hardfork = hardfork ?? this._hardfork\n    const hfs = this.hardforks()\n    let hfIndex = hfs.findIndex((hf) => hf.name === hardfork)\n    // If the current hardfork is merge, go one behind as merge hf is not part of these\n    // calcs even if the merge hf block is set\n    if (hardfork === Hardfork.Merge) {\n      hfIndex -= 1\n    }\n    // Hardfork not found\n    if (hfIndex < 0) {\n      return null\n    }\n\n    let currHfTimeOrBlock = hfs[hfIndex].timestamp ?? hfs[hfIndex].block\n    currHfTimeOrBlock =\n      currHfTimeOrBlock !== null && currHfTimeOrBlock !== undefined\n        ? Number(currHfTimeOrBlock)\n        : null\n\n    const nextHf = hfs.slice(hfIndex + 1).find((hf) => {\n      let hfTimeOrBlock = hf.timestamp ?? hf.block\n      hfTimeOrBlock =\n        hfTimeOrBlock !== null && hfTimeOrBlock !== undefined ? Number(hfTimeOrBlock) : null\n      return (\n        hf.name !== Hardfork.Merge &&\n        hfTimeOrBlock !== null &&\n        hfTimeOrBlock !== undefined &&\n        hfTimeOrBlock !== currHfTimeOrBlock\n      )\n    })\n    // If no next hf found with valid block or timestamp return null\n    if (nextHf === undefined) {\n      return null\n    }\n\n    const nextHfBlock = nextHf.timestamp ?? nextHf.block\n    if (nextHfBlock === null || nextHfBlock === undefined) {\n      return null\n    }\n\n    return BigInt(nextHfBlock)\n  }\n\n  /**\n   * Returns the change block for the next hardfork after the hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if not available\n   * @deprecated\n   */\n  nextHardforkBlock(hardfork?: string | Hardfork): bigint | null {\n    hardfork = hardfork ?? this._hardfork\n    let hfBlock = this.hardforkBlock(hardfork)\n    // If this is a merge hardfork with block not set, then we fallback to previous hardfork\n    // to find the nextHardforkBlock\n    if (hfBlock === null && hardfork === Hardfork.Merge) {\n      const hfs = this.hardforks()\n      const mergeIndex = hfs.findIndex((hf) => hf.ttd !== null && hf.ttd !== undefined)\n      if (mergeIndex < 0) {\n        throw Error(`Merge hardfork should have been found`)\n      }\n      hfBlock = this.hardforkBlock(hfs[mergeIndex - 1].name)\n    }\n    if (hfBlock === null) {\n      return null\n    }\n    // Next fork block number or null if none available\n    // Logic: if accumulator is still null and on the first occurrence of\n    // a block greater than the current hfBlock set the accumulator,\n    // pass on the accumulator as the final result from this time on\n    const nextHfBlock = this.hardforks().reduce((acc: bigint | null, hf: HardforkConfig) => {\n      // We need to ignore the merge block in our next hardfork calc\n      const block = BigInt(\n        hf.block === null || (hf.ttd !== undefined && hf.ttd !== null) ? 0 : hf.block\n      )\n      // Typescript can't seem to follow that the hfBlock is not null at this point\n      return block > hfBlock! && acc === null ? block : acc\n    }, null)\n    return nextHfBlock\n  }\n\n  /**\n   * True if block number provided is the hardfork change block following the hardfork given or set\n   * @param blockNumber Number of the block to check\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns True if blockNumber is HF block\n   * @deprecated\n   */\n  isNextHardforkBlock(blockNumber: BigIntLike, hardfork?: string | Hardfork): boolean {\n    blockNumber = toType(blockNumber, TypeOutput.BigInt)\n    hardfork = hardfork ?? this._hardfork\n    const nextHardforkBlock = this.nextHardforkBlock(hardfork)\n\n    return nextHardforkBlock === null ? false : nextHardforkBlock === blockNumber\n  }\n\n  /**\n   * Internal helper function to calculate a fork hash\n   * @param hardfork Hardfork name\n   * @param genesisHash Genesis block hash of the chain\n   * @returns Fork hash as hex string\n   */\n  _calcForkHash(hardfork: string | Hardfork, genesisHash: Buffer) {\n    let hfBuffer = Buffer.alloc(0)\n    let prevBlockOrTime = 0\n    for (const hf of this.hardforks()) {\n      const { block, timestamp, name } = hf\n      // Timestamp to be used for timestamp based hfs even if we may bundle\n      // block number with them retrospectively\n      let blockOrTime = timestamp ?? block\n      blockOrTime = blockOrTime !== null ? Number(blockOrTime) : null\n\n      // Skip for chainstart (0), not applied HFs (null) and\n      // when already applied on same blockOrTime HFs\n      // and on the merge since forkhash doesn't change on merge hf\n      if (\n        typeof blockOrTime === 'number' &&\n        blockOrTime !== 0 &&\n        blockOrTime !== prevBlockOrTime &&\n        name !== Hardfork.Merge\n      ) {\n        const hfBlockBuffer = Buffer.from(blockOrTime.toString(16).padStart(16, '0'), 'hex')\n        hfBuffer = Buffer.concat([hfBuffer, hfBlockBuffer])\n        prevBlockOrTime = blockOrTime\n      }\n\n      if (hf.name === hardfork) break\n    }\n    const inputBuffer = Buffer.concat([genesisHash, hfBuffer])\n\n    // CRC32 delivers result as signed (negative) 32-bit integer,\n    // convert to hex string\n    const forkhash = intToBuffer(crc32Buffer(inputBuffer) >>> 0).toString('hex')\n    return `0x${forkhash}`\n  }\n\n  /**\n   * Returns an eth/64 compliant fork hash (EIP-2124)\n   * @param hardfork Hardfork name, optional if HF set\n   * @param genesisHash Genesis block hash of the chain, optional if already defined and not needed to be calculated\n   */\n  forkHash(hardfork?: string | Hardfork, genesisHash?: Buffer): string {\n    hardfork = hardfork ?? this._hardfork\n    const data = this._getHardfork(hardfork)\n    if (\n      data === null ||\n      (data?.block === null && data?.timestamp === undefined && data?.ttd === undefined)\n    ) {\n      const msg = 'No fork hash calculation possible for future hardfork'\n      throw new Error(msg)\n    }\n    if (data?.forkHash !== null && data?.forkHash !== undefined) {\n      return data.forkHash\n    }\n    if (!genesisHash) throw new Error('genesisHash required for forkHash calculation')\n    return this._calcForkHash(hardfork, genesisHash)\n  }\n\n  /**\n   *\n   * @param forkHash Fork hash as a hex string\n   * @returns Array with hardfork data (name, block, forkHash)\n   */\n  hardforkForForkHash(forkHash: string): HardforkConfig | null {\n    const resArray = this.hardforks().filter((hf: HardforkConfig) => {\n      return hf.forkHash === forkHash\n    })\n    return resArray.length >= 1 ? resArray[resArray.length - 1] : null\n  }\n\n  /**\n   * Sets any missing forkHashes on the passed-in {@link Common} instance\n   * @param common The {@link Common} to set the forkHashes for\n   * @param genesisHash The genesis block hash\n   */\n  setForkHashes(genesisHash: Buffer) {\n    for (const hf of this.hardforks()) {\n      const blockOrTime = hf.timestamp ?? hf.block\n      if (\n        (hf.forkHash === null || hf.forkHash === undefined) &&\n        ((blockOrTime !== null && blockOrTime !== undefined) || typeof hf.ttd !== 'undefined')\n      ) {\n        hf.forkHash = this.forkHash(hf.name, genesisHash)\n      }\n    }\n  }\n\n  /**\n   * Returns the Genesis parameters of the current chain\n   * @returns Genesis dictionary\n   */\n  genesis(): GenesisBlockConfig {\n    return this._chainParams.genesis\n  }\n\n  /**\n   * Returns the hardforks for current chain\n   * @returns {Array} Array with arrays of hardforks\n   */\n  hardforks(): HardforkConfig[] {\n    return this._chainParams.hardforks\n  }\n\n  /**\n   * Returns bootstrap nodes for the current chain\n   * @returns {Dictionary} Dict with bootstrap nodes\n   */\n  bootstrapNodes(): BootstrapNodeConfig[] {\n    return this._chainParams.bootstrapNodes\n  }\n\n  /**\n   * Returns DNS networks for the current chain\n   * @returns {String[]} Array of DNS ENR urls\n   */\n  dnsNetworks(): string[] {\n    return this._chainParams.dnsNetworks!\n  }\n\n  /**\n   * Returns the hardfork set\n   * @returns Hardfork name\n   */\n  hardfork(): string | Hardfork {\n    return this._hardfork\n  }\n\n  /**\n   * Returns the Id of current chain\n   * @returns chain Id\n   */\n  chainId(): bigint {\n    return BigInt(this._chainParams.chainId)\n  }\n\n  /**\n   * Returns the name of current chain\n   * @returns chain name (lower case)\n   */\n  chainName(): string {\n    return this._chainParams.name\n  }\n\n  /**\n   * Returns the Id of current network\n   * @returns network Id\n   */\n  networkId(): bigint {\n    return BigInt(this._chainParams.networkId)\n  }\n\n  /**\n   * Returns the active EIPs\n   * @returns List of EIPs\n   */\n  eips(): number[] {\n    return this._eips\n  }\n\n  /**\n   * Returns the consensus type of the network\n   * Possible values: \"pow\"|\"poa\"|\"pos\"\n   *\n   * Note: This value can update along a Hardfork.\n   */\n  consensusType(): string | ConsensusType {\n    const hardfork = this.hardfork()\n\n    let value\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      if ('consensus' in hfChanges[1]) {\n        value = hfChanges[1]['consensus']['type']\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    return value ?? this._chainParams['consensus']['type']\n  }\n\n  /**\n   * Returns the concrete consensus implementation\n   * algorithm or protocol for the network\n   * e.g. \"ethash\" for \"pow\" consensus type,\n   * \"clique\" for \"poa\" consensus type or\n   * \"casper\" for \"pos\" consensus type.\n   *\n   * Note: This value can update along a Hardfork.\n   */\n  consensusAlgorithm(): string | ConsensusAlgorithm {\n    const hardfork = this.hardfork()\n\n    let value\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      if ('consensus' in hfChanges[1]) {\n        value = hfChanges[1]['consensus']['algorithm']\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    return value ?? (this._chainParams['consensus']['algorithm'] as ConsensusAlgorithm)\n  }\n\n  /**\n   * Returns a dictionary with consensus configuration\n   * parameters based on the consensus algorithm\n   *\n   * Expected returns (parameters must be present in\n   * the respective chain json files):\n   *\n   * ethash: empty object\n   * clique: period, epoch\n   * casper: empty object\n   *\n   * Note: This value can update along a Hardfork.\n   */\n  consensusConfig(): { [key: string]: CliqueConfig | EthashConfig | CasperConfig } {\n    const hardfork = this.hardfork()\n\n    let value\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      if ('consensus' in hfChanges[1]) {\n        // The config parameter is named after the respective consensus algorithm\n        value = hfChanges[1]['consensus'][hfChanges[1]['consensus']['algorithm']]\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    return (\n      value ?? this._chainParams['consensus'][this.consensusAlgorithm() as ConsensusAlgorithm] ?? {}\n    )\n  }\n\n  /**\n   * Returns a deep copy of this {@link Common} instance.\n   */\n  copy(): Common {\n    const copy = Object.assign(Object.create(Object.getPrototypeOf(this)), this)\n    copy.removeAllListeners()\n    return copy\n  }\n\n  static _getInitializedChains(customChains?: ChainConfig[]): ChainsConfig {\n    const names: ChainName = {}\n    for (const [name, id] of Object.entries(Chain)) {\n      names[id] = name.toLowerCase()\n    }\n    const chains = { mainnet, ropsten, rinkeby, goerli, sepolia } as ChainsConfig\n    if (customChains) {\n      for (const chain of customChains) {\n        const { name } = chain\n        names[chain.chainId.toString()] = name\n        chains[name] = chain\n      }\n    }\n    chains.names = names\n    return chains\n  }\n}\n","export const EIPs: { [key: number]: any } = {\n  1153: require('./1153.json'),\n  1559: require('./1559.json'),\n  2315: require('./2315.json'),\n  2537: require('./2537.json'),\n  2565: require('./2565.json'),\n  2718: require('./2718.json'),\n  2929: require('./2929.json'),\n  2930: require('./2930.json'),\n  3074: require('./3074.json'),\n  3198: require('./3198.json'),\n  3529: require('./3529.json'),\n  3540: require('./3540.json'),\n  3541: require('./3541.json'),\n  3554: require('./3554.json'),\n  3607: require('./3607.json'),\n  3651: require('./3651.json'),\n  3670: require('./3670.json'),\n  3675: require('./3675.json'),\n  3855: require('./3855.json'),\n  3860: require('./3860.json'),\n  4345: require('./4345.json'),\n  4399: require('./4399.json'),\n  4844: require('./4844.json'),\n  4895: require('./4895.json'),\n  5133: require('./5133.json'),\n}\n","export enum Chain {\n  Mainnet = 1,\n  Ropsten = 3,\n  Rinkeby = 4,\n  Goerli = 5,\n  Sepolia = 11155111,\n}\n\nexport enum Hardfork {\n  Chainstart = 'chainstart',\n  Homestead = 'homestead',\n  Dao = 'dao',\n  TangerineWhistle = 'tangerineWhistle',\n  SpuriousDragon = 'spuriousDragon',\n  Byzantium = 'byzantium',\n  Constantinople = 'constantinople',\n  Petersburg = 'petersburg',\n  Istanbul = 'istanbul',\n  MuirGlacier = 'muirGlacier',\n  Berlin = 'berlin',\n  London = 'london',\n  ArrowGlacier = 'arrowGlacier',\n  GrayGlacier = 'grayGlacier',\n  MergeForkIdTransition = 'mergeForkIdTransition',\n  Merge = 'merge',\n  Shanghai = 'shanghai',\n  ShardingForkDev = 'shardingFork',\n}\n\nexport enum ConsensusType {\n  ProofOfStake = 'pos',\n  ProofOfWork = 'pow',\n  ProofOfAuthority = 'poa',\n}\n\nexport enum ConsensusAlgorithm {\n  Ethash = 'ethash',\n  Clique = 'clique',\n  Casper = 'casper',\n}\n\nexport enum CustomChain {\n  /**\n   * Polygon (Matic) Mainnet\n   *\n   * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n   */\n  PolygonMainnet = 'polygon-mainnet',\n\n  /**\n   * Polygon (Matic) Mumbai Testnet\n   *\n   * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n   */\n  PolygonMumbai = 'polygon-mumbai',\n\n  /**\n   * Arbitrum Rinkeby Testnet\n   *\n   * - [Documentation](https://developer.offchainlabs.com/docs/public_testnet)\n   */\n  ArbitrumRinkebyTestnet = 'arbitrum-rinkeby-testnet',\n\n  /**\n   * Arbitrum One - mainnet for Arbitrum roll-up\n   *\n   * - [Documentation](https://developer.offchainlabs.com/public-chains)\n   */\n  ArbitrumOne = 'arbitrum-one',\n\n  /**\n   * xDai EVM sidechain with a native stable token\n   *\n   * - [Documentation](https://www.xdaichain.com/)\n   */\n  xDaiChain = 'x-dai-chain',\n\n  /**\n   * Optimistic Kovan - testnet for Optimism roll-up\n   *\n   * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n   */\n  OptimisticKovan = 'optimistic-kovan',\n\n  /**\n   * Optimistic Ethereum - mainnet for Optimism roll-up\n   *\n   * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n   */\n  OptimisticEthereum = 'optimistic-ethereum',\n}\n","export const hardforks = {\n  chainstart: require('./chainstart.json'),\n  homestead: require('./homestead.json'),\n  dao: require('./dao.json'),\n  tangerineWhistle: require('./tangerineWhistle.json'),\n  spuriousDragon: require('./spuriousDragon.json'),\n  byzantium: require('./byzantium.json'),\n  constantinople: require('./constantinople.json'),\n  petersburg: require('./petersburg.json'),\n  istanbul: require('./istanbul.json'),\n  muirGlacier: require('./muirGlacier.json'),\n  berlin: require('./berlin.json'),\n  london: require('./london.json'),\n  shanghai: require('./shanghai.json'),\n  arrowGlacier: require('./arrowGlacier.json'),\n  grayGlacier: require('./grayGlacier.json'),\n  mergeForkIdTransition: require('./mergeForkIdTransition.json'),\n  merge: require('./merge.json'),\n  shardingFork: require('./sharding.json'),\n}\n","export * from './common'\nexport * from './enums'\nexport * from './types'\nexport * from './utils'\n","import { intToHex, isHexPrefixed, stripHexPrefix } from '@ethereumjs/util'\n\nimport { Hardfork } from './enums'\n\ntype ConfigHardfork =\n  | { name: string; block: null; timestamp: number }\n  | { name: string; block: number; timestamp?: number }\n/**\n * Transforms Geth formatted nonce (i.e. hex string) to 8 byte 0x-prefixed string used internally\n * @param nonce string parsed from the Geth genesis file\n * @returns nonce as a 0x-prefixed 8 byte string\n */\nfunction formatNonce(nonce: string): string {\n  if (!nonce || nonce === '0x0') {\n    return '0x0000000000000000'\n  }\n  if (isHexPrefixed(nonce)) {\n    return '0x' + stripHexPrefix(nonce).padStart(16, '0')\n  }\n  return '0x' + nonce.padStart(16, '0')\n}\n\n/**\n * Converts Geth genesis parameters to an EthereumJS compatible `CommonOpts` object\n * @param json object representing the Geth genesis file\n * @param optional mergeForkIdPostMerge which clarifies the placement of MergeForkIdTransition\n * hardfork, which by default is post merge as with the merged eth networks but could also come\n * before merge like in kiln genesis\n * @returns genesis parameters in a `CommonOpts` compliant object\n */\nfunction parseGethParams(json: any, mergeForkIdPostMerge: boolean = true) {\n  const {\n    name,\n    config,\n    difficulty,\n    mixHash,\n    gasLimit,\n    coinbase,\n    baseFeePerGas,\n  }: {\n    name: string\n    config: any\n    difficulty: string\n    mixHash: string\n    gasLimit: string\n    coinbase: string\n    baseFeePerGas: string\n  } = json\n  let { extraData, timestamp, nonce }: { extraData: string; timestamp: string; nonce: string } =\n    json\n  const genesisTimestamp = Number(timestamp)\n  const { chainId }: { chainId: number } = config\n\n  // geth is not strictly putting empty fields with a 0x prefix\n  if (extraData === '') {\n    extraData = '0x'\n  }\n  // geth may use number for timestamp\n  if (!isHexPrefixed(timestamp)) {\n    timestamp = intToHex(parseInt(timestamp))\n  }\n  // geth may not give us a nonce strictly formatted to an 8 byte hex string\n  if (nonce.length !== 18) {\n    nonce = formatNonce(nonce)\n  }\n\n  // EIP155 and EIP158 are both part of Spurious Dragon hardfork and must occur at the same time\n  // but have different configuration parameters in geth genesis parameters\n  if (config.eip155Block !== config.eip158Block) {\n    throw new Error(\n      'EIP155 block number must equal EIP 158 block number since both are part of SpuriousDragon hardfork and the client only supports activating the full hardfork'\n    )\n  }\n\n  const params = {\n    name,\n    chainId,\n    networkId: chainId,\n    genesis: {\n      timestamp,\n      gasLimit: parseInt(gasLimit), // geth gasLimit and difficulty are hex strings while ours are `number`s\n      difficulty: parseInt(difficulty),\n      nonce,\n      extraData,\n      mixHash,\n      coinbase,\n      baseFeePerGas,\n    },\n    hardfork: undefined as string | undefined,\n    hardforks: [] as ConfigHardfork[],\n    bootstrapNodes: [],\n    consensus:\n      config.clique !== undefined\n        ? {\n            type: 'poa',\n            algorithm: 'clique',\n            clique: {\n              // The recent geth genesis seems to be using blockperiodseconds\n              // and epochlength for clique specification\n              // see: https://hackmd.io/PqZgMpnkSWCWv5joJoFymQ\n              period: config.clique.period ?? config.clique.blockperiodseconds,\n              epoch: config.clique.epoch ?? config.clique.epochlength,\n            },\n          }\n        : {\n            type: 'pow',\n            algorithm: 'ethash',\n            ethash: {},\n          },\n  }\n\n  const forkMap: { [key: string]: { name: string; postMerge?: boolean; isTimestamp?: boolean } } = {\n    [Hardfork.Homestead]: { name: 'homesteadBlock' },\n    [Hardfork.Dao]: { name: 'daoForkBlock' },\n    [Hardfork.TangerineWhistle]: { name: 'eip150Block' },\n    [Hardfork.SpuriousDragon]: { name: 'eip155Block' },\n    [Hardfork.Byzantium]: { name: 'byzantiumBlock' },\n    [Hardfork.Constantinople]: { name: 'constantinopleBlock' },\n    [Hardfork.Petersburg]: { name: 'petersburgBlock' },\n    [Hardfork.Istanbul]: { name: 'istanbulBlock' },\n    [Hardfork.MuirGlacier]: { name: 'muirGlacierBlock' },\n    [Hardfork.Berlin]: { name: 'berlinBlock' },\n    [Hardfork.London]: { name: 'londonBlock' },\n    [Hardfork.MergeForkIdTransition]: { name: 'mergeForkBlock', postMerge: mergeForkIdPostMerge },\n    [Hardfork.Shanghai]: { name: 'shanghaiTime', postMerge: true, isTimestamp: true },\n    [Hardfork.ShardingForkDev]: { name: 'shardingForkTime', postMerge: true, isTimestamp: true },\n  }\n\n  // forkMapRev is the map from config field name to Hardfork\n  const forkMapRev = Object.keys(forkMap).reduce((acc, elem) => {\n    acc[forkMap[elem].name] = elem\n    return acc\n  }, {} as { [key: string]: string })\n  const configHardforkNames = Object.keys(config).filter(\n    (key) => forkMapRev[key] !== undefined && config[key] !== undefined && config[key] !== null\n  )\n\n  params.hardforks = configHardforkNames\n    .map((nameBlock) => ({\n      name: forkMapRev[nameBlock],\n      block:\n        forkMap[forkMapRev[nameBlock]].isTimestamp === true || typeof config[nameBlock] !== 'number'\n          ? null\n          : config[nameBlock],\n      timestamp:\n        forkMap[forkMapRev[nameBlock]].isTimestamp === true && typeof config[nameBlock] === 'number'\n          ? config[nameBlock]\n          : undefined,\n    }))\n    .filter((fork) => fork.block !== null || fork.timestamp !== undefined) as ConfigHardfork[]\n\n  params.hardforks.sort(function (a: ConfigHardfork, b: ConfigHardfork) {\n    return (a.block ?? Infinity) - (b.block ?? Infinity)\n  })\n\n  params.hardforks.sort(function (a: ConfigHardfork, b: ConfigHardfork) {\n    return (a.timestamp ?? genesisTimestamp) - (b.timestamp ?? genesisTimestamp)\n  })\n\n  if (config.terminalTotalDifficulty !== undefined) {\n    // Following points need to be considered for placement of merge hf\n    // - Merge hardfork can't be placed at genesis\n    // - Place merge hf before any hardforks that require CL participation for e.g. withdrawals\n    // - Merge hardfork has to be placed just after genesis if any of the genesis hardforks make CL\n    //   necessary for e.g. withdrawals\n    const mergeConfig = {\n      name: Hardfork.Merge,\n      ttd: config.terminalTotalDifficulty,\n      block: null,\n    }\n\n    // Merge hardfork has to be placed before first hardfork that is dependent on merge\n    const postMergeIndex = params.hardforks.findIndex(\n      (hf: any) => forkMap[hf.name]?.postMerge === true\n    )\n    if (postMergeIndex !== -1) {\n      params.hardforks.splice(postMergeIndex, 0, mergeConfig as unknown as ConfigHardfork)\n    } else {\n      params.hardforks.push(mergeConfig as unknown as ConfigHardfork)\n    }\n  }\n\n  const latestHardfork = params.hardforks.length > 0 ? params.hardforks.slice(-1)[0] : undefined\n  params.hardfork = latestHardfork?.name\n  params.hardforks.unshift({ name: Hardfork.Chainstart, block: 0 })\n\n  return params\n}\n\n/**\n * Parses a genesis.json exported from Geth into parameters for Common instance\n * @param json representing the Geth genesis file\n * @param name optional chain name\n * @returns parsed params\n */\nexport function parseGethGenesis(json: any, name?: string, mergeForkIdPostMerge?: boolean) {\n  try {\n    if (['config', 'difficulty', 'gasLimit', 'alloc'].some((field) => !(field in json))) {\n      throw new Error('Invalid format, expected geth genesis fields missing')\n    }\n    if (name !== undefined) {\n      json.name = name\n    }\n    return parseGethParams(json, mergeForkIdPostMerge)\n  } catch (e: any) {\n    throw new Error(`Error parsing parameters file: ${e.message}`)\n  }\n}\n","import { Chain, Common, Hardfork } from '@ethereumjs/common'\nimport {\n  Address,\n  MAX_INTEGER,\n  MAX_UINT64,\n  SECP256K1_ORDER_DIV_2,\n  bufferToBigInt,\n  bufferToHex,\n  ecsign,\n  publicToAddress,\n  toBuffer,\n  unpadBuffer,\n} from '@ethereumjs/util'\n\nimport { Capability } from './types'\nimport { checkMaxInitCodeSize } from './util'\n\nimport type {\n  AccessListEIP2930TxData,\n  AccessListEIP2930ValuesArray,\n  FeeMarketEIP1559TxData,\n  FeeMarketEIP1559ValuesArray,\n  JsonTx,\n  TxData,\n  TxOptions,\n  TxValuesArray,\n} from './types'\nimport type { BigIntLike } from '@ethereumjs/util'\n\ninterface TransactionCache {\n  hash: Buffer | undefined\n  dataFee?: {\n    value: bigint\n    hardfork: string | Hardfork\n  }\n}\n\n/**\n * This base class will likely be subject to further\n * refactoring along the introduction of additional tx types\n * on the Ethereum network.\n *\n * It is therefore not recommended to use directly.\n */\nexport abstract class BaseTransaction<TransactionObject> {\n  private readonly _type: number\n\n  public readonly nonce: bigint\n  public readonly gasLimit: bigint\n  public readonly to?: Address\n  public readonly value: bigint\n  public readonly data: Buffer\n\n  public readonly v?: bigint\n  public readonly r?: bigint\n  public readonly s?: bigint\n\n  public readonly common!: Common\n\n  protected cache: TransactionCache = {\n    hash: undefined,\n    dataFee: undefined,\n  }\n\n  protected readonly txOptions: TxOptions\n\n  /**\n   * List of tx type defining EIPs,\n   * e.g. 1559 (fee market) and 2930 (access lists)\n   * for FeeMarketEIP1559Transaction objects\n   */\n  protected activeCapabilities: number[] = []\n\n  /**\n   * The default chain the tx falls back to if no Common\n   * is provided and if the chain can't be derived from\n   * a passed in chainId (only EIP-2718 typed txs) or\n   * EIP-155 signature (legacy txs).\n   *\n   * @hidden\n   */\n  protected DEFAULT_CHAIN = Chain.Mainnet\n\n  /**\n   * The default HF if the tx type is active on that HF\n   * or the first greater HF where the tx is active.\n   *\n   * @hidden\n   */\n  protected DEFAULT_HARDFORK: string | Hardfork = Hardfork.Merge\n\n  constructor(txData: TxData | AccessListEIP2930TxData | FeeMarketEIP1559TxData, opts: TxOptions) {\n    const { nonce, gasLimit, to, value, data, v, r, s, type } = txData\n    this._type = Number(bufferToBigInt(toBuffer(type)))\n\n    this.txOptions = opts\n\n    const toB = toBuffer(to === '' ? '0x' : to)\n    const vB = toBuffer(v === '' ? '0x' : v)\n    const rB = toBuffer(r === '' ? '0x' : r)\n    const sB = toBuffer(s === '' ? '0x' : s)\n\n    this.nonce = bufferToBigInt(toBuffer(nonce === '' ? '0x' : nonce))\n    this.gasLimit = bufferToBigInt(toBuffer(gasLimit === '' ? '0x' : gasLimit))\n    this.to = toB.length > 0 ? new Address(toB) : undefined\n    this.value = bufferToBigInt(toBuffer(value === '' ? '0x' : value))\n    this.data = toBuffer(data === '' ? '0x' : data)\n\n    this.v = vB.length > 0 ? bufferToBigInt(vB) : undefined\n    this.r = rB.length > 0 ? bufferToBigInt(rB) : undefined\n    this.s = sB.length > 0 ? bufferToBigInt(sB) : undefined\n\n    this._validateCannotExceedMaxInteger({ value: this.value, r: this.r, s: this.s })\n\n    // geth limits gasLimit to 2^64-1\n    this._validateCannotExceedMaxInteger({ gasLimit: this.gasLimit }, 64)\n\n    // EIP-2681 limits nonce to 2^64-1 (cannot equal 2^64-1)\n    this._validateCannotExceedMaxInteger({ nonce: this.nonce }, 64, true)\n\n    const createContract = this.to === undefined || this.to === null\n    const allowUnlimitedInitCodeSize = opts.allowUnlimitedInitCodeSize ?? false\n    const common = opts.common ?? this._getCommon()\n    if (createContract && common.isActivatedEIP(3860) && allowUnlimitedInitCodeSize === false) {\n      checkMaxInitCodeSize(common, this.data.length)\n    }\n  }\n\n  /**\n   * Returns the transaction type.\n   *\n   * Note: legacy txs will return tx type `0`.\n   */\n  get type() {\n    return this._type\n  }\n\n  /**\n   * Checks if a tx type defining capability is active\n   * on a tx, for example the EIP-1559 fee market mechanism\n   * or the EIP-2930 access list feature.\n   *\n   * Note that this is different from the tx type itself,\n   * so EIP-2930 access lists can very well be active\n   * on an EIP-1559 tx for example.\n   *\n   * This method can be useful for feature checks if the\n   * tx type is unknown (e.g. when instantiated with\n   * the tx factory).\n   *\n   * See `Capabilites` in the `types` module for a reference\n   * on all supported capabilities.\n   */\n  supports(capability: Capability) {\n    return this.activeCapabilities.includes(capability)\n  }\n\n  /**\n   * Checks if the transaction has the minimum amount of gas required\n   * (DataFee + TxFee + Creation Fee).\n   */\n  validate(): boolean\n  validate(stringError: false): boolean\n  validate(stringError: true): string[]\n  validate(stringError: boolean = false): boolean | string[] {\n    const errors = []\n\n    if (this.getBaseFee() > this.gasLimit) {\n      errors.push(`gasLimit is too low. given ${this.gasLimit}, need at least ${this.getBaseFee()}`)\n    }\n\n    if (this.isSigned() && !this.verifySignature()) {\n      errors.push('Invalid Signature')\n    }\n\n    return stringError ? errors : errors.length === 0\n  }\n\n  protected _validateYParity() {\n    const { v } = this\n    if (v !== undefined && v !== BigInt(0) && v !== BigInt(1)) {\n      const msg = this._errorMsg('The y-parity of the transaction should either be 0 or 1')\n      throw new Error(msg)\n    }\n  }\n\n  /**\n   * EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2are considered invalid.\n   * Reasoning: https://ethereum.stackexchange.com/a/55728\n   */\n  protected _validateHighS() {\n    const { s } = this\n    if (this.common.gteHardfork('homestead') && s !== undefined && s > SECP256K1_ORDER_DIV_2) {\n      const msg = this._errorMsg(\n        'Invalid Signature: s-values greater than secp256k1n/2 are considered invalid'\n      )\n      throw new Error(msg)\n    }\n  }\n\n  /**\n   * The minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n   */\n  getBaseFee(): bigint {\n    const txFee = this.common.param('gasPrices', 'tx')\n    let fee = this.getDataFee()\n    if (txFee) fee += txFee\n    if (this.common.gteHardfork('homestead') && this.toCreationAddress()) {\n      const txCreationFee = this.common.param('gasPrices', 'txCreation')\n      if (txCreationFee) fee += txCreationFee\n    }\n    return fee\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): bigint {\n    const txDataZero = this.common.param('gasPrices', 'txDataZero')\n    const txDataNonZero = this.common.param('gasPrices', 'txDataNonZero')\n\n    let cost = BigInt(0)\n    for (let i = 0; i < this.data.length; i++) {\n      this.data[i] === 0 ? (cost += txDataZero) : (cost += txDataNonZero)\n    }\n\n    if ((this.to === undefined || this.to === null) && this.common.isActivatedEIP(3860)) {\n      const dataLength = BigInt(Math.ceil(this.data.length / 32))\n      const initCodeCost = this.common.param('gasPrices', 'initCodeWordCost') * dataLength\n      cost += initCodeCost\n    }\n\n    return cost\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   */\n  abstract getUpfrontCost(): bigint\n\n  /**\n   * If the tx's `to` is to the creation address\n   */\n  toCreationAddress(): boolean {\n    return this.to === undefined || this.to.buf.length === 0\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of this transaction, in order.\n   *\n   * Use {@link BaseTransaction.serialize} to add a transaction to a block\n   * with {@link Block.fromValuesArray}.\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link BaseTransaction.getMessageToSign}.\n   */\n  abstract raw(): TxValuesArray | AccessListEIP2930ValuesArray | FeeMarketEIP1559ValuesArray\n\n  /**\n   * Returns the encoding of the transaction.\n   */\n  abstract serialize(): Buffer\n\n  // Returns the unsigned tx (hashed or raw), which is used to sign the transaction.\n  //\n  // Note: do not use code docs here since VS Studio is then not able to detect the\n  // comments from the inherited methods\n  abstract getMessageToSign(hashMessage: false): Buffer | Buffer[]\n  abstract getMessageToSign(hashMessage?: true): Buffer\n\n  abstract hash(): Buffer\n\n  abstract getMessageToVerifySignature(): Buffer\n\n  public isSigned(): boolean {\n    const { v, r, s } = this\n    if (v === undefined || r === undefined || s === undefined) {\n      return false\n    } else {\n      return true\n    }\n  }\n\n  /**\n   * Determines if the signature is valid\n   */\n  verifySignature(): boolean {\n    try {\n      // Main signature verification is done in `getSenderPublicKey()`\n      const publicKey = this.getSenderPublicKey()\n      return unpadBuffer(publicKey).length !== 0\n    } catch (e: any) {\n      return false\n    }\n  }\n\n  /**\n   * Returns the sender's address\n   */\n  getSenderAddress(): Address {\n    return new Address(publicToAddress(this.getSenderPublicKey()))\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  abstract getSenderPublicKey(): Buffer\n\n  /**\n   * Signs a transaction.\n   *\n   * Note that the signed tx is returned as a new object,\n   * use as follows:\n   * ```javascript\n   * const signedTx = tx.sign(privateKey)\n   * ```\n   */\n  sign(privateKey: Buffer): TransactionObject {\n    if (privateKey.length !== 32) {\n      const msg = this._errorMsg('Private key must be 32 bytes in length.')\n      throw new Error(msg)\n    }\n\n    // Hack for the constellation that we have got a legacy tx after spuriousDragon with a non-EIP155 conforming signature\n    // and want to recreate a signature (where EIP155 should be applied)\n    // Leaving this hack lets the legacy.spec.ts -> sign(), verifySignature() test fail\n    // 2021-06-23\n    let hackApplied = false\n    if (\n      this.type === 0 &&\n      this.common.gteHardfork('spuriousDragon') &&\n      !this.supports(Capability.EIP155ReplayProtection)\n    ) {\n      this.activeCapabilities.push(Capability.EIP155ReplayProtection)\n      hackApplied = true\n    }\n\n    const msgHash = this.getMessageToSign(true)\n    const { v, r, s } = ecsign(msgHash, privateKey)\n    const tx = this._processSignature(v, r, s)\n\n    // Hack part 2\n    if (hackApplied) {\n      const index = this.activeCapabilities.indexOf(Capability.EIP155ReplayProtection)\n      if (index > -1) {\n        this.activeCapabilities.splice(index, 1)\n      }\n    }\n\n    return tx\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction\n   */\n  abstract toJSON(): JsonTx\n\n  // Accept the v,r,s values from the `sign` method, and convert this into a TransactionObject\n  protected abstract _processSignature(v: bigint, r: Buffer, s: Buffer): TransactionObject\n\n  /**\n   * Does chain ID checks on common and returns a common\n   * to be used on instantiation\n   * @hidden\n   *\n   * @param common - {@link Common} instance from tx options\n   * @param chainId - Chain ID from tx options (typed txs) or signature (legacy tx)\n   */\n  protected _getCommon(common?: Common, chainId?: BigIntLike) {\n    // Chain ID provided\n    if (chainId !== undefined) {\n      const chainIdBigInt = bufferToBigInt(toBuffer(chainId))\n      if (common) {\n        if (common.chainId() !== chainIdBigInt) {\n          const msg = this._errorMsg('The chain ID does not match the chain ID of Common')\n          throw new Error(msg)\n        }\n        // Common provided, chain ID does match\n        // -> Return provided Common\n        return common.copy()\n      } else {\n        if (Common.isSupportedChainId(chainIdBigInt)) {\n          // No Common, chain ID supported by Common\n          // -> Instantiate Common with chain ID\n          return new Common({ chain: chainIdBigInt, hardfork: this.DEFAULT_HARDFORK })\n        } else {\n          // No Common, chain ID not supported by Common\n          // -> Instantiate custom Common derived from DEFAULT_CHAIN\n          return Common.custom(\n            {\n              name: 'custom-chain',\n              networkId: chainIdBigInt,\n              chainId: chainIdBigInt,\n            },\n            { baseChain: this.DEFAULT_CHAIN, hardfork: this.DEFAULT_HARDFORK }\n          )\n        }\n      }\n    } else {\n      // No chain ID provided\n      // -> return Common provided or create new default Common\n      return (\n        common?.copy() ?? new Common({ chain: this.DEFAULT_CHAIN, hardfork: this.DEFAULT_HARDFORK })\n      )\n    }\n  }\n\n  /**\n   * Validates that an object with BigInt values cannot exceed the specified bit limit.\n   * @param values Object containing string keys and BigInt values\n   * @param bits Number of bits to check (64 or 256)\n   * @param cannotEqual Pass true if the number also cannot equal one less the maximum value\n   */\n  protected _validateCannotExceedMaxInteger(\n    values: { [key: string]: bigint | undefined },\n    bits = 256,\n    cannotEqual = false\n  ) {\n    for (const [key, value] of Object.entries(values)) {\n      switch (bits) {\n        case 64:\n          if (cannotEqual) {\n            if (value !== undefined && value >= MAX_UINT64) {\n              const msg = this._errorMsg(\n                `${key} cannot equal or exceed MAX_UINT64 (2^64-1), given ${value}`\n              )\n              throw new Error(msg)\n            }\n          } else {\n            if (value !== undefined && value > MAX_UINT64) {\n              const msg = this._errorMsg(`${key} cannot exceed MAX_UINT64 (2^64-1), given ${value}`)\n              throw new Error(msg)\n            }\n          }\n          break\n        case 256:\n          if (cannotEqual) {\n            if (value !== undefined && value >= MAX_INTEGER) {\n              const msg = this._errorMsg(\n                `${key} cannot equal or exceed MAX_INTEGER (2^256-1), given ${value}`\n              )\n              throw new Error(msg)\n            }\n          } else {\n            if (value !== undefined && value > MAX_INTEGER) {\n              const msg = this._errorMsg(\n                `${key} cannot exceed MAX_INTEGER (2^256-1), given ${value}`\n              )\n              throw new Error(msg)\n            }\n          }\n          break\n        default: {\n          const msg = this._errorMsg('unimplemented bits value')\n          throw new Error(msg)\n        }\n      }\n    }\n  }\n\n  protected static _validateNotArray(values: { [key: string]: any }) {\n    const txDataKeys = [\n      'nonce',\n      'gasPrice',\n      'gasLimit',\n      'to',\n      'value',\n      'data',\n      'v',\n      'r',\n      's',\n      'type',\n      'baseFee',\n      'maxFeePerGas',\n      'chainId',\n    ]\n    for (const [key, value] of Object.entries(values)) {\n      if (txDataKeys.includes(key)) {\n        if (Array.isArray(value)) {\n          throw new Error(`${key} cannot be an array`)\n        }\n      }\n    }\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public abstract errorStr(): string\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected abstract _errorMsg(msg: string): string\n\n  /**\n   * Returns the shared error postfix part for _error() method\n   * tx type implementations.\n   */\n  protected _getSharedErrorPostfix() {\n    let hash = ''\n    try {\n      hash = this.isSigned() ? bufferToHex(this.hash()) : 'not available (unsigned)'\n    } catch (e: any) {\n      hash = 'error'\n    }\n    let isSigned = ''\n    try {\n      isSigned = this.isSigned().toString()\n    } catch (e: any) {\n      hash = 'error'\n    }\n    let hf = ''\n    try {\n      hf = this.common.hardfork()\n    } catch (e: any) {\n      hf = 'error'\n    }\n\n    let postfix = `tx type=${this.type} hash=${hash} nonce=${this.nonce} value=${this.value} `\n    postfix += `signed=${isSigned} hf=${hf}`\n\n    return postfix\n  }\n}\n","/** EIP4844 constants */\n\nexport const MAX_CALLDATA_SIZE = 16777216 // 2 ** 24\nexport const MAX_ACCESS_LIST_SIZE = 16777216 // 2 ** 24\nexport const MAX_VERSIONED_HASHES_LIST_SIZE = 16777216 // 2 ** 24\nexport const LIMIT_BLOBS_PER_TX = 16777216 // 2 ** 24\nexport const MAX_TX_WRAP_KZG_COMMITMENTS = 16777216 // 2 ** 24\nexport const FIELD_ELEMENTS_PER_BLOB = 4096 // This is also in the Common 4844 parameters but needed here since types can't access Common params\nexport const BYTES_PER_FIELD_ELEMENT = 32\n","import { RLP } from '@ethereumjs/rlp'\nimport {\n  MAX_INTEGER,\n  arrToBufArr,\n  bigIntToHex,\n  bigIntToUnpaddedBuffer,\n  bufArrToArr,\n  bufferToBigInt,\n  ecrecover,\n  toBuffer,\n  validateNoLeadingZeroes,\n} from '@ethereumjs/util'\nimport { keccak256 } from 'ethereum-cryptography/keccak'\n\nimport { BaseTransaction } from './baseTransaction'\nimport { AccessLists } from './util'\n\nimport type {\n  AccessList,\n  AccessListBuffer,\n  FeeMarketEIP1559TxData,\n  FeeMarketEIP1559ValuesArray,\n  JsonTx,\n  TxOptions,\n} from './types'\nimport type { Common } from '@ethereumjs/common'\n\nconst TRANSACTION_TYPE = 2\nconst TRANSACTION_TYPE_BUFFER = Buffer.from(TRANSACTION_TYPE.toString(16).padStart(2, '0'), 'hex')\n\n/**\n * Typed transaction with a new gas fee market mechanism\n *\n * - TransactionType: 2\n * - EIP: [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559)\n */\nexport class FeeMarketEIP1559Transaction extends BaseTransaction<FeeMarketEIP1559Transaction> {\n  public readonly chainId: bigint\n  public readonly accessList: AccessListBuffer\n  public readonly AccessListJSON: AccessList\n  public readonly maxPriorityFeePerGas: bigint\n  public readonly maxFeePerGas: bigint\n\n  public readonly common: Common\n\n  /**\n   * The default HF if the tx type is active on that HF\n   * or the first greater HF where the tx is active.\n   *\n   * @hidden\n   */\n  protected DEFAULT_HARDFORK = 'london'\n\n  /**\n   * Instantiate a transaction from a data dictionary.\n   *\n   * Format: { chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, v, r, s }\n   *\n   * Notes:\n   * - `chainId` will be set automatically if not provided\n   * - All parameters are optional and have some basic default values\n   */\n  public static fromTxData(txData: FeeMarketEIP1559TxData, opts: TxOptions = {}) {\n    return new FeeMarketEIP1559Transaction(txData, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   *\n   * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS])`\n   */\n  public static fromSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    if (!serialized.slice(0, 1).equals(TRANSACTION_TYPE_BUFFER)) {\n      throw new Error(\n        `Invalid serialized tx input: not an EIP-1559 transaction (wrong tx type, expected: ${TRANSACTION_TYPE}, received: ${serialized\n          .slice(0, 1)\n          .toString('hex')}`\n      )\n    }\n\n    const values = arrToBufArr(RLP.decode(serialized.slice(1)))\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized tx input: must be array')\n    }\n\n    return FeeMarketEIP1559Transaction.fromValuesArray(values as any, opts)\n  }\n\n  /**\n   * Create a transaction from a values array.\n   *\n   * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS]`\n   */\n  public static fromValuesArray(values: FeeMarketEIP1559ValuesArray, opts: TxOptions = {}) {\n    if (values.length !== 9 && values.length !== 12) {\n      throw new Error(\n        'Invalid EIP-1559 transaction. Only expecting 9 values (for unsigned tx) or 12 values (for signed tx).'\n      )\n    }\n\n    const [\n      chainId,\n      nonce,\n      maxPriorityFeePerGas,\n      maxFeePerGas,\n      gasLimit,\n      to,\n      value,\n      data,\n      accessList,\n      v,\n      r,\n      s,\n    ] = values\n\n    this._validateNotArray({ chainId, v })\n    validateNoLeadingZeroes({ nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, value, v, r, s })\n\n    return new FeeMarketEIP1559Transaction(\n      {\n        chainId: bufferToBigInt(chainId),\n        nonce,\n        maxPriorityFeePerGas,\n        maxFeePerGas,\n        gasLimit,\n        to,\n        value,\n        data,\n        accessList: accessList ?? [],\n        v: v !== undefined ? bufferToBigInt(v) : undefined, // EIP2930 supports v's with value 0 (empty Buffer)\n        r,\n        s,\n      },\n      opts\n    )\n  }\n\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  public constructor(txData: FeeMarketEIP1559TxData, opts: TxOptions = {}) {\n    super({ ...txData, type: TRANSACTION_TYPE }, opts)\n    const { chainId, accessList, maxFeePerGas, maxPriorityFeePerGas } = txData\n\n    this.common = this._getCommon(opts.common, chainId)\n    this.chainId = this.common.chainId()\n\n    if (this.common.isActivatedEIP(1559) === false) {\n      throw new Error('EIP-1559 not enabled on Common')\n    }\n    this.activeCapabilities = this.activeCapabilities.concat([1559, 2718, 2930])\n\n    // Populate the access list fields\n    const accessListData = AccessLists.getAccessListData(accessList ?? [])\n    this.accessList = accessListData.accessList\n    this.AccessListJSON = accessListData.AccessListJSON\n    // Verify the access list format.\n    AccessLists.verifyAccessList(this.accessList)\n\n    this.maxFeePerGas = bufferToBigInt(toBuffer(maxFeePerGas === '' ? '0x' : maxFeePerGas))\n    this.maxPriorityFeePerGas = bufferToBigInt(\n      toBuffer(maxPriorityFeePerGas === '' ? '0x' : maxPriorityFeePerGas)\n    )\n\n    this._validateCannotExceedMaxInteger({\n      maxFeePerGas: this.maxFeePerGas,\n      maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n    })\n\n    BaseTransaction._validateNotArray(txData)\n\n    if (this.gasLimit * this.maxFeePerGas > MAX_INTEGER) {\n      const msg = this._errorMsg('gasLimit * maxFeePerGas cannot exceed MAX_INTEGER (2^256-1)')\n      throw new Error(msg)\n    }\n\n    if (this.maxFeePerGas < this.maxPriorityFeePerGas) {\n      const msg = this._errorMsg(\n        'maxFeePerGas cannot be less than maxPriorityFeePerGas (The total must be the larger of the two)'\n      )\n      throw new Error(msg)\n    }\n\n    this._validateYParity()\n    this._validateHighS()\n\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(this)\n    }\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): bigint {\n    if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n      return this.cache.dataFee.value\n    }\n\n    let cost = super.getDataFee()\n    cost += BigInt(AccessLists.getDataFeeEIP2930(this.accessList, this.common))\n\n    if (Object.isFrozen(this)) {\n      this.cache.dataFee = {\n        value: cost,\n        hardfork: this.common.hardfork(),\n      }\n    }\n\n    return cost\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   * @param baseFee The base fee of the block (will be set to 0 if not provided)\n   */\n  getUpfrontCost(baseFee: bigint = BigInt(0)): bigint {\n    const prio = this.maxPriorityFeePerGas\n    const maxBase = this.maxFeePerGas - baseFee\n    const inclusionFeePerGas = prio < maxBase ? prio : maxBase\n    const gasPrice = inclusionFeePerGas + baseFee\n    return this.gasLimit * gasPrice + this.value\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of the EIP-1559 transaction, in order.\n   *\n   * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS]`\n   *\n   * Use {@link FeeMarketEIP1559Transaction.serialize} to add a transaction to a block\n   * with {@link Block.fromValuesArray}.\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link FeeMarketEIP1559Transaction.getMessageToSign}.\n   */\n  raw(): FeeMarketEIP1559ValuesArray {\n    return [\n      bigIntToUnpaddedBuffer(this.chainId),\n      bigIntToUnpaddedBuffer(this.nonce),\n      bigIntToUnpaddedBuffer(this.maxPriorityFeePerGas),\n      bigIntToUnpaddedBuffer(this.maxFeePerGas),\n      bigIntToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bigIntToUnpaddedBuffer(this.value),\n      this.data,\n      this.accessList,\n      this.v !== undefined ? bigIntToUnpaddedBuffer(this.v) : Buffer.from([]),\n      this.r !== undefined ? bigIntToUnpaddedBuffer(this.r) : Buffer.from([]),\n      this.s !== undefined ? bigIntToUnpaddedBuffer(this.s) : Buffer.from([]),\n    ]\n  }\n\n  /**\n   * Returns the serialized encoding of the EIP-1559 transaction.\n   *\n   * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS])`\n   *\n   * Note that in contrast to the legacy tx serialization format this is not\n   * valid RLP any more due to the raw tx type preceding and concatenated to\n   * the RLP encoding of the values.\n   */\n  serialize(): Buffer {\n    const base = this.raw()\n    return Buffer.concat([\n      TRANSACTION_TYPE_BUFFER,\n      Buffer.from(RLP.encode(bufArrToArr(base as Buffer[]))),\n    ])\n  }\n\n  /**\n   * Returns the serialized unsigned tx (hashed or raw), which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: in contrast to the legacy tx the raw message format is already\n   * serialized and doesn't need to be RLP encoded any more.\n   *\n   * ```javascript\n   * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n   * ```\n   *\n   * @param hashMessage - Return hashed message if set to true (default: true)\n   */\n  getMessageToSign(hashMessage = true): Buffer {\n    const base = this.raw().slice(0, 9)\n    const message = Buffer.concat([\n      TRANSACTION_TYPE_BUFFER,\n      Buffer.from(RLP.encode(bufArrToArr(base as Buffer[]))),\n    ])\n    if (hashMessage) {\n      return Buffer.from(keccak256(message))\n    } else {\n      return message\n    }\n  }\n\n  /**\n   * Computes a sha3-256 hash of the serialized tx.\n   *\n   * This method can only be used for signed txs (it throws otherwise).\n   * Use {@link FeeMarketEIP1559Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n   */\n  public hash(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call hash method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    if (Object.isFrozen(this)) {\n      if (!this.cache.hash) {\n        this.cache.hash = Buffer.from(keccak256(this.serialize()))\n      }\n      return this.cache.hash\n    }\n\n    return Buffer.from(keccak256(this.serialize()))\n  }\n\n  /**\n   * Computes a sha3-256 hash which can be used to verify the signature\n   */\n  public getMessageToVerifySignature(): Buffer {\n    return this.getMessageToSign()\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  public getSenderPublicKey(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call this method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    const msgHash = this.getMessageToVerifySignature()\n    const { v, r, s } = this\n\n    this._validateHighS()\n\n    try {\n      return ecrecover(\n        msgHash,\n        v! + BigInt(27), // Recover the 27 which was stripped from ecsign\n        bigIntToUnpaddedBuffer(r!),\n        bigIntToUnpaddedBuffer(s!)\n      )\n    } catch (e: any) {\n      const msg = this._errorMsg('Invalid Signature')\n      throw new Error(msg)\n    }\n  }\n\n  _processSignature(v: bigint, r: Buffer, s: Buffer) {\n    const opts = { ...this.txOptions, common: this.common }\n\n    return FeeMarketEIP1559Transaction.fromTxData(\n      {\n        chainId: this.chainId,\n        nonce: this.nonce,\n        maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n        maxFeePerGas: this.maxFeePerGas,\n        gasLimit: this.gasLimit,\n        to: this.to,\n        value: this.value,\n        data: this.data,\n        accessList: this.accessList,\n        v: v - BigInt(27), // This looks extremely hacky: @ethereumjs/util actually adds 27 to the value, the recovery bit is either 0 or 1.\n        r: bufferToBigInt(r),\n        s: bufferToBigInt(s),\n      },\n      opts\n    )\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction\n   */\n  toJSON(): JsonTx {\n    const accessListJSON = AccessLists.getAccessListJSON(this.accessList)\n\n    return {\n      chainId: bigIntToHex(this.chainId),\n      nonce: bigIntToHex(this.nonce),\n      maxPriorityFeePerGas: bigIntToHex(this.maxPriorityFeePerGas),\n      maxFeePerGas: bigIntToHex(this.maxFeePerGas),\n      gasLimit: bigIntToHex(this.gasLimit),\n      to: this.to !== undefined ? this.to.toString() : undefined,\n      value: bigIntToHex(this.value),\n      data: '0x' + this.data.toString('hex'),\n      accessList: accessListJSON,\n      v: this.v !== undefined ? bigIntToHex(this.v) : undefined,\n      r: this.r !== undefined ? bigIntToHex(this.r) : undefined,\n      s: this.s !== undefined ? bigIntToHex(this.s) : undefined,\n    }\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public errorStr() {\n    let errorStr = this._getSharedErrorPostfix()\n    errorStr += ` maxFeePerGas=${this.maxFeePerGas} maxPriorityFeePerGas=${this.maxPriorityFeePerGas}`\n    return errorStr\n  }\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected _errorMsg(msg: string) {\n    return `${msg} (${this.errorStr()})`\n  }\n}\n","import { RLP } from '@ethereumjs/rlp'\nimport {\n  MAX_INTEGER,\n  arrToBufArr,\n  bigIntToHex,\n  bigIntToUnpaddedBuffer,\n  bufArrToArr,\n  bufferToBigInt,\n  ecrecover,\n  toBuffer,\n  validateNoLeadingZeroes,\n} from '@ethereumjs/util'\nimport { keccak256 } from 'ethereum-cryptography/keccak'\n\nimport { BaseTransaction } from './baseTransaction'\nimport { AccessLists } from './util'\n\nimport type {\n  AccessList,\n  AccessListBuffer,\n  AccessListEIP2930TxData,\n  AccessListEIP2930ValuesArray,\n  JsonTx,\n  TxOptions,\n} from './types'\nimport type { Common } from '@ethereumjs/common'\n\nconst TRANSACTION_TYPE = 1\nconst TRANSACTION_TYPE_BUFFER = Buffer.from(TRANSACTION_TYPE.toString(16).padStart(2, '0'), 'hex')\n\n/**\n * Typed transaction with optional access lists\n *\n * - TransactionType: 1\n * - EIP: [EIP-2930](https://eips.ethereum.org/EIPS/eip-2930)\n */\nexport class AccessListEIP2930Transaction extends BaseTransaction<AccessListEIP2930Transaction> {\n  public readonly chainId: bigint\n  public readonly accessList: AccessListBuffer\n  public readonly AccessListJSON: AccessList\n  public readonly gasPrice: bigint\n\n  public readonly common: Common\n\n  /**\n   * The default HF if the tx type is active on that HF\n   * or the first greater HF where the tx is active.\n   *\n   * @hidden\n   */\n  protected DEFAULT_HARDFORK = 'berlin'\n\n  /**\n   * Instantiate a transaction from a data dictionary.\n   *\n   * Format: { chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * v, r, s }\n   *\n   * Notes:\n   * - `chainId` will be set automatically if not provided\n   * - All parameters are optional and have some basic default values\n   */\n  public static fromTxData(txData: AccessListEIP2930TxData, opts: TxOptions = {}) {\n    return new AccessListEIP2930Transaction(txData, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   *\n   * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)])`\n   */\n  public static fromSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    if (!serialized.slice(0, 1).equals(TRANSACTION_TYPE_BUFFER)) {\n      throw new Error(\n        `Invalid serialized tx input: not an EIP-2930 transaction (wrong tx type, expected: ${TRANSACTION_TYPE}, received: ${serialized\n          .slice(0, 1)\n          .toString('hex')}`\n      )\n    }\n\n    const values = arrToBufArr(RLP.decode(Uint8Array.from(serialized.slice(1))))\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized tx input: must be array')\n    }\n\n    return AccessListEIP2930Transaction.fromValuesArray(values as any, opts)\n  }\n\n  /**\n   * Create a transaction from a values array.\n   *\n   * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)]`\n   */\n  public static fromValuesArray(values: AccessListEIP2930ValuesArray, opts: TxOptions = {}) {\n    if (values.length !== 8 && values.length !== 11) {\n      throw new Error(\n        'Invalid EIP-2930 transaction. Only expecting 8 values (for unsigned tx) or 11 values (for signed tx).'\n      )\n    }\n\n    const [chainId, nonce, gasPrice, gasLimit, to, value, data, accessList, v, r, s] = values\n\n    this._validateNotArray({ chainId, v })\n    validateNoLeadingZeroes({ nonce, gasPrice, gasLimit, value, v, r, s })\n\n    const emptyAccessList: AccessList = []\n\n    return new AccessListEIP2930Transaction(\n      {\n        chainId: bufferToBigInt(chainId),\n        nonce,\n        gasPrice,\n        gasLimit,\n        to,\n        value,\n        data,\n        accessList: accessList ?? emptyAccessList,\n        v: v !== undefined ? bufferToBigInt(v) : undefined, // EIP2930 supports v's with value 0 (empty Buffer)\n        r,\n        s,\n      },\n      opts\n    )\n  }\n\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  public constructor(txData: AccessListEIP2930TxData, opts: TxOptions = {}) {\n    super({ ...txData, type: TRANSACTION_TYPE }, opts)\n    const { chainId, accessList, gasPrice } = txData\n\n    this.common = this._getCommon(opts.common, chainId)\n    this.chainId = this.common.chainId()\n\n    // EIP-2718 check is done in Common\n    if (!this.common.isActivatedEIP(2930)) {\n      throw new Error('EIP-2930 not enabled on Common')\n    }\n    this.activeCapabilities = this.activeCapabilities.concat([2718, 2930])\n\n    // Populate the access list fields\n    const accessListData = AccessLists.getAccessListData(accessList ?? [])\n    this.accessList = accessListData.accessList\n    this.AccessListJSON = accessListData.AccessListJSON\n    // Verify the access list format.\n    AccessLists.verifyAccessList(this.accessList)\n\n    this.gasPrice = bufferToBigInt(toBuffer(gasPrice === '' ? '0x' : gasPrice))\n\n    this._validateCannotExceedMaxInteger({\n      gasPrice: this.gasPrice,\n    })\n\n    BaseTransaction._validateNotArray(txData)\n\n    if (this.gasPrice * this.gasLimit > MAX_INTEGER) {\n      const msg = this._errorMsg('gasLimit * gasPrice cannot exceed MAX_INTEGER')\n      throw new Error(msg)\n    }\n\n    this._validateYParity()\n    this._validateHighS()\n\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(this)\n    }\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): bigint {\n    if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n      return this.cache.dataFee.value\n    }\n\n    let cost = super.getDataFee()\n    cost += BigInt(AccessLists.getDataFeeEIP2930(this.accessList, this.common))\n\n    if (Object.isFrozen(this)) {\n      this.cache.dataFee = {\n        value: cost,\n        hardfork: this.common.hardfork(),\n      }\n    }\n\n    return cost\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   */\n  getUpfrontCost(): bigint {\n    return this.gasLimit * this.gasPrice + this.value\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of the EIP-2930 transaction, in order.\n   *\n   * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)]`\n   *\n   * Use {@link AccessListEIP2930Transaction.serialize} to add a transaction to a block\n   * with {@link Block.fromValuesArray}.\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link AccessListEIP2930Transaction.getMessageToSign}.\n   */\n  raw(): AccessListEIP2930ValuesArray {\n    return [\n      bigIntToUnpaddedBuffer(this.chainId),\n      bigIntToUnpaddedBuffer(this.nonce),\n      bigIntToUnpaddedBuffer(this.gasPrice),\n      bigIntToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bigIntToUnpaddedBuffer(this.value),\n      this.data,\n      this.accessList,\n      this.v !== undefined ? bigIntToUnpaddedBuffer(this.v) : Buffer.from([]),\n      this.r !== undefined ? bigIntToUnpaddedBuffer(this.r) : Buffer.from([]),\n      this.s !== undefined ? bigIntToUnpaddedBuffer(this.s) : Buffer.from([]),\n    ]\n  }\n\n  /**\n   * Returns the serialized encoding of the EIP-2930 transaction.\n   *\n   * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)])`\n   *\n   * Note that in contrast to the legacy tx serialization format this is not\n   * valid RLP any more due to the raw tx type preceding and concatenated to\n   * the RLP encoding of the values.\n   */\n  serialize(): Buffer {\n    const base = this.raw()\n    return Buffer.concat([\n      TRANSACTION_TYPE_BUFFER,\n      Buffer.from(RLP.encode(bufArrToArr(base as Buffer[]))),\n    ])\n  }\n\n  /**\n   * Returns the serialized unsigned tx (hashed or raw), which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: in contrast to the legacy tx the raw message format is already\n   * serialized and doesn't need to be RLP encoded any more.\n   *\n   * ```javascript\n   * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n   * ```\n   *\n   * @param hashMessage - Return hashed message if set to true (default: true)\n   */\n  getMessageToSign(hashMessage = true): Buffer {\n    const base = this.raw().slice(0, 8)\n    const message = Buffer.concat([\n      TRANSACTION_TYPE_BUFFER,\n      Buffer.from(RLP.encode(bufArrToArr(base as Buffer[]))),\n    ])\n    if (hashMessage) {\n      return Buffer.from(keccak256(message))\n    } else {\n      return message\n    }\n  }\n\n  /**\n   * Computes a sha3-256 hash of the serialized tx.\n   *\n   * This method can only be used for signed txs (it throws otherwise).\n   * Use {@link AccessListEIP2930Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n   */\n  public hash(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call hash method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    if (Object.isFrozen(this)) {\n      if (!this.cache.hash) {\n        this.cache.hash = Buffer.from(keccak256(this.serialize()))\n      }\n      return this.cache.hash\n    }\n\n    return Buffer.from(keccak256(this.serialize()))\n  }\n\n  /**\n   * Computes a sha3-256 hash which can be used to verify the signature\n   */\n  public getMessageToVerifySignature(): Buffer {\n    return this.getMessageToSign()\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  public getSenderPublicKey(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call this method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    const msgHash = this.getMessageToVerifySignature()\n    const { v, r, s } = this\n\n    this._validateHighS()\n\n    try {\n      return ecrecover(\n        msgHash,\n        v! + BigInt(27), // Recover the 27 which was stripped from ecsign\n        bigIntToUnpaddedBuffer(r!),\n        bigIntToUnpaddedBuffer(s!)\n      )\n    } catch (e: any) {\n      const msg = this._errorMsg('Invalid Signature')\n      throw new Error(msg)\n    }\n  }\n\n  _processSignature(v: bigint, r: Buffer, s: Buffer) {\n    const opts = { ...this.txOptions, common: this.common }\n\n    return AccessListEIP2930Transaction.fromTxData(\n      {\n        chainId: this.chainId,\n        nonce: this.nonce,\n        gasPrice: this.gasPrice,\n        gasLimit: this.gasLimit,\n        to: this.to,\n        value: this.value,\n        data: this.data,\n        accessList: this.accessList,\n        v: v - BigInt(27), // This looks extremely hacky: @ethereumjs/util actually adds 27 to the value, the recovery bit is either 0 or 1.\n        r: bufferToBigInt(r),\n        s: bufferToBigInt(s),\n      },\n      opts\n    )\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction\n   */\n  toJSON(): JsonTx {\n    const accessListJSON = AccessLists.getAccessListJSON(this.accessList)\n\n    return {\n      chainId: bigIntToHex(this.chainId),\n      nonce: bigIntToHex(this.nonce),\n      gasPrice: bigIntToHex(this.gasPrice),\n      gasLimit: bigIntToHex(this.gasLimit),\n      to: this.to !== undefined ? this.to.toString() : undefined,\n      value: bigIntToHex(this.value),\n      data: '0x' + this.data.toString('hex'),\n      accessList: accessListJSON,\n      v: this.v !== undefined ? bigIntToHex(this.v) : undefined,\n      r: this.r !== undefined ? bigIntToHex(this.r) : undefined,\n      s: this.s !== undefined ? bigIntToHex(this.s) : undefined,\n    }\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public errorStr() {\n    let errorStr = this._getSharedErrorPostfix()\n    // Keep ? for this.accessList since this otherwise causes Hardhat E2E tests to fail\n    errorStr += ` gasPrice=${this.gasPrice} accessListCount=${this.accessList?.length ?? 0}`\n    return errorStr\n  }\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected _errorMsg(msg: string) {\n    return `${msg} (${this.errorStr()})`\n  }\n}\n","import { byteArrayEquals } from '@chainsafe/ssz'\nimport {\n  Address,\n  MAX_INTEGER,\n  bigIntToHex,\n  bigIntToUnpaddedBuffer,\n  bufferToBigInt,\n  bufferToHex,\n  ecrecover,\n  toBuffer,\n} from '@ethereumjs/util'\nimport { keccak256 } from 'ethereum-cryptography/keccak'\n\nimport { BaseTransaction } from './baseTransaction'\nimport { LIMIT_BLOBS_PER_TX } from './constants'\nimport { kzg } from './kzg/kzg'\nimport {\n  BlobNetworkTransactionWrapper,\n  BlobTransactionType,\n  SignedBlobTransactionType,\n} from './types'\nimport { AccessLists, blobTxToNetworkWrapperDataFormat } from './util'\nimport { computeVersionedHash } from './utils/blobHelpers'\n\nimport type {\n  AccessList,\n  AccessListBuffer,\n  AccessListBufferItem,\n  BlobEIP4844TxData,\n  JsonTx,\n  TxOptions,\n  TxValuesArray,\n} from './types'\nimport type { ValueOf } from '@chainsafe/ssz'\nimport type { Common } from '@ethereumjs/common'\n\nconst TRANSACTION_TYPE = 0x05\nconst TRANSACTION_TYPE_BUFFER = Buffer.from(TRANSACTION_TYPE.toString(16).padStart(2, '0'), 'hex')\n\nconst validateBlobTransactionNetworkWrapper = (\n  versionedHashes: Uint8Array[],\n  blobs: Uint8Array[],\n  commitments: Uint8Array[],\n  kzgProof: Uint8Array,\n  version: number\n) => {\n  if (!(versionedHashes.length === blobs.length && blobs.length === commitments.length)) {\n    throw new Error('Number of versionedHashes, blobs, and commitments not all equal')\n  }\n  try {\n    kzg.verifyAggregateKzgProof(blobs, commitments, kzgProof)\n  } catch (e) {\n    throw new Error('KZG proof cannot be verified from blobs/commitments')\n  }\n\n  for (let x = 0; x < versionedHashes.length; x++) {\n    const computedVersionedHash = computeVersionedHash(commitments[x], version)\n    if (!byteArrayEquals(computedVersionedHash, versionedHashes[x])) {\n      throw new Error(`commitment for blob at index ${x} does not match versionedHash`)\n    }\n  }\n}\n\n/**\n * Typed transaction with a new gas fee market mechanism for transactions that include \"blobs\" of data\n *\n * - TransactionType: 5\n * - EIP: [EIP-4844](https://eips.ethereum.org/EIPS/eip-4844)\n */\nexport class BlobEIP4844Transaction extends BaseTransaction<BlobEIP4844Transaction> {\n  public readonly chainId: bigint\n  public readonly accessList: AccessListBuffer\n  public readonly AccessListJSON: AccessList\n  public readonly maxPriorityFeePerGas: bigint\n  public readonly maxFeePerGas: bigint\n  public readonly maxFeePerDataGas: bigint\n\n  public readonly common: Common\n  public versionedHashes: Buffer[]\n  blobs?: Buffer[] // This property should only be populated when the transaction is in the \"Network Wrapper\" format\n  kzgCommitments?: Buffer[] // This property should only be populated when the transaction is in the \"Network Wrapper\" format\n  aggregateKzgProof?: Buffer // This property should only be populated when the transaction is in the \"Network Wrapper\" format\n\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static constructors or factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  constructor(txData: BlobEIP4844TxData, opts: TxOptions = {}) {\n    super({ ...txData, type: TRANSACTION_TYPE }, opts)\n    const { chainId, accessList, maxFeePerGas, maxPriorityFeePerGas, maxFeePerDataGas } = txData\n\n    this.common = this._getCommon(opts.common, chainId)\n    this.chainId = this.common.chainId()\n\n    if (this.common.isActivatedEIP(1559) === false) {\n      throw new Error('EIP-1559 not enabled on Common')\n    }\n\n    if (this.common.isActivatedEIP(4844) === false) {\n      throw new Error('EIP-4844 not enabled on Common')\n    }\n    this.activeCapabilities = this.activeCapabilities.concat([1559, 2718, 2930])\n\n    // Populate the access list fields\n    const accessListData = AccessLists.getAccessListData(accessList ?? [])\n    this.accessList = accessListData.accessList\n    this.AccessListJSON = accessListData.AccessListJSON\n    // Verify the access list format.\n    AccessLists.verifyAccessList(this.accessList)\n\n    this.maxFeePerGas = bufferToBigInt(toBuffer(maxFeePerGas === '' ? '0x' : maxFeePerGas))\n    this.maxPriorityFeePerGas = bufferToBigInt(\n      toBuffer(maxPriorityFeePerGas === '' ? '0x' : maxPriorityFeePerGas)\n    )\n\n    this._validateCannotExceedMaxInteger({\n      maxFeePerGas: this.maxFeePerGas,\n      maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n    })\n\n    BaseTransaction._validateNotArray(txData)\n\n    if (this.gasLimit * this.maxFeePerGas > MAX_INTEGER) {\n      const msg = this._errorMsg('gasLimit * maxFeePerGas cannot exceed MAX_INTEGER (2^256-1)')\n      throw new Error(msg)\n    }\n\n    if (this.maxFeePerGas < this.maxPriorityFeePerGas) {\n      const msg = this._errorMsg(\n        'maxFeePerGas cannot be less than maxPriorityFeePerGas (The total must be the larger of the two)'\n      )\n      throw new Error(msg)\n    }\n\n    this.maxFeePerDataGas = bufferToBigInt(\n      toBuffer((maxFeePerDataGas ?? '') === '' ? '0x' : maxFeePerDataGas)\n    )\n\n    this.versionedHashes = (txData.versionedHashes ?? []).map((vh) => toBuffer(vh))\n    this._validateYParity()\n    this._validateHighS()\n\n    for (const hash of this.versionedHashes) {\n      if (hash.length !== 32) {\n        const msg = this._errorMsg('versioned hash is invalid length')\n        throw new Error(msg)\n      }\n      if (\n        BigInt(hash[0]) !== this.common.paramByEIP('sharding', 'blobCommitmentVersionKzg', 4844)\n      ) {\n        const msg = this._errorMsg('versioned hash does not start with KZG commitment version')\n        throw new Error(msg)\n      }\n    }\n    if (this.versionedHashes.length > LIMIT_BLOBS_PER_TX) {\n      const msg = this._errorMsg(`tx can contain at most ${LIMIT_BLOBS_PER_TX} blobs`)\n      throw new Error(msg)\n    }\n\n    this.blobs = txData.blobs?.map((blob) => toBuffer(blob))\n    this.kzgCommitments = txData.kzgCommitments?.map((commitment) => toBuffer(commitment))\n    this.aggregateKzgProof = toBuffer(txData.kzgProof)\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(this)\n    }\n  }\n\n  public static fromTxData(txData: BlobEIP4844TxData, opts?: TxOptions) {\n    return new BlobEIP4844Transaction(txData, opts)\n  }\n\n  /**\n   * Creates the minimal representation of a blob transaction from the network wrapper version.\n   * The minimal representation is used when adding transactions to an execution payload/block\n   * @param txData a {@link BlobEIP4844Transaction} containing optional blobs/kzg commitments\n   * @param opts - dictionary of {@link TxOptions}\n   * @returns the \"minimal\" representation of a BlobEIP4844Transaction (i.e. transaction object minus blobs and kzg commitments)\n   */\n  public static minimalFromNetworkWrapper(txData: BlobEIP4844Transaction, opts?: TxOptions) {\n    const tx = BlobEIP4844Transaction.fromTxData(\n      {\n        ...txData,\n        ...{ blobs: undefined, kzgCommitments: undefined, kzgProof: undefined },\n      },\n      opts\n    )\n    return tx\n  }\n\n  /**\n   * Creates a transaction from the network encoding of a blob transaction (with blobs/commitments/proof)\n   * @param serialized a buffer representing a serialized BlobTransactionNetworkWrapper\n   * @param opts any TxOptions defined\n   * @returns a BlobEIP4844Transaction\n   * @throws if no KZG library is loaded -- using the `initKzg` helper method -- or if `opts.common` not provided\n   */\n  public static fromSerializedBlobTxNetworkWrapper(\n    serialized: Buffer,\n    opts?: TxOptions\n  ): BlobEIP4844Transaction {\n    if (!opts || !opts.common) {\n      throw new Error('common instance required to validate versioned hashes')\n    }\n    // Validate network wrapper\n    const wrapper = BlobNetworkTransactionWrapper.deserialize(serialized.slice(1))\n    const decodedTx = wrapper.tx.message\n    const version = Number(opts.common.paramByEIP('sharding', 'blobCommitmentVersionKzg', 4844))\n    validateBlobTransactionNetworkWrapper(\n      decodedTx.blobVersionedHashes,\n      wrapper.blobs,\n      wrapper.blobKzgs,\n      wrapper.kzgAggregatedProof,\n      version\n    )\n\n    const accessList: AccessListBuffer = []\n    for (const listItem of decodedTx.accessList) {\n      const address = Buffer.from(listItem.address)\n      const storageKeys = listItem.storageKeys.map((key) => Buffer.from(key))\n      const accessListItem: AccessListBufferItem = [address, storageKeys]\n      accessList.push(accessListItem)\n    }\n\n    const to =\n      decodedTx.to.value === null\n        ? undefined\n        : Address.fromString(bufferToHex(Buffer.from(decodedTx.to.value)))\n\n    const versionedHashes = decodedTx.blobVersionedHashes.map((el) => Buffer.from(el))\n    const commitments = wrapper.blobKzgs.map((el) => Buffer.from(el))\n    const blobs = wrapper.blobs.map((el) => Buffer.from(el))\n    const txData = {\n      ...decodedTx,\n      ...{\n        versionedHashes,\n        accessList,\n        to,\n        blobs,\n        kzgCommitments: commitments,\n        kzgProof: Buffer.from(wrapper.kzgAggregatedProof),\n        r: wrapper.tx.signature.r,\n        s: wrapper.tx.signature.s,\n        v: BigInt(wrapper.tx.signature.yParity),\n        gasLimit: decodedTx.gas,\n        maxFeePerGas: decodedTx.maxFeePerGas,\n        maxPriorityFeePerGas: decodedTx.maxPriorityFeePerGas,\n      },\n    } as BlobEIP4844TxData\n    return new BlobEIP4844Transaction(txData, opts)\n  }\n\n  /**\n   * Creates a transaction from the \"minimal\" encoding of a blob transaction (without blobs/commitments/kzg proof)\n   * @param serialized a buffer representing a serialized signed blob transaction\n   * @param opts any TxOptions defined\n   * @returns a BlobEIP4844Transaction\n   */\n  public static fromSerializedTx(serialized: Buffer, opts?: TxOptions) {\n    const decoded = SignedBlobTransactionType.deserialize(serialized.slice(1))\n    const tx = decoded.message\n    const accessList: AccessListBuffer = []\n    for (const listItem of tx.accessList) {\n      const address = Buffer.from(listItem.address)\n      const storageKeys = listItem.storageKeys.map((key) => Buffer.from(key))\n      const accessListItem: AccessListBufferItem = [address, storageKeys]\n      accessList.push(accessListItem)\n    }\n    const to =\n      tx.to.value === null ? undefined : Address.fromString(bufferToHex(Buffer.from(tx.to.value)))\n    const versionedHashes = tx.blobVersionedHashes.map((el) => Buffer.from(el))\n    const txData = {\n      ...tx,\n      ...{\n        versionedHashes,\n        to,\n        accessList,\n        r: decoded.signature.r,\n        s: decoded.signature.s,\n        v: BigInt(decoded.signature.yParity),\n        gasLimit: decoded.message.gas,\n      },\n    } as BlobEIP4844TxData\n    return new BlobEIP4844Transaction(txData, opts)\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   * @param baseFee The base fee of the block (will be set to 0 if not provided)\n   */\n  getUpfrontCost(baseFee: bigint = BigInt(0)): bigint {\n    const prio = this.maxPriorityFeePerGas\n    const maxBase = this.maxFeePerGas - baseFee\n    const inclusionFeePerGas = prio < maxBase ? prio : maxBase\n    const gasPrice = inclusionFeePerGas + baseFee\n    return this.gasLimit * gasPrice + this.value\n  }\n\n  /**\n   * This method is not implemented for blob transactions as the `raw` method is used exclusively with\n   * rlp encoding and these transactions use SSZ for serialization.\n   */\n  raw(): TxValuesArray {\n    throw new Error('Method not implemented.')\n  }\n\n  toValue(): ValueOf<typeof SignedBlobTransactionType> {\n    const to = {\n      selector: this.to !== undefined ? 1 : 0,\n      value: this.to?.toBuffer() ?? null,\n    }\n    return {\n      message: {\n        chainId: this.common.chainId(),\n        nonce: this.nonce,\n        maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n        maxFeePerGas: this.maxFeePerGas,\n        gas: this.gasLimit,\n        to,\n        value: this.value,\n        data: this.data,\n        accessList: this.accessList.map((listItem) => {\n          return { address: listItem[0], storageKeys: listItem[1] }\n        }),\n        blobVersionedHashes: this.versionedHashes,\n        maxFeePerDataGas: this.maxFeePerDataGas,\n      },\n      // TODO: Decide how to serialize an unsigned transaction\n      signature: {\n        r: this.r ?? BigInt(0),\n        s: this.s ?? BigInt(0),\n        yParity: this.v === BigInt(1) ? true : false,\n      },\n    }\n  }\n\n  /**\n   * Serialize a blob transaction to the execution payload variant\n   * @returns the minimum (execution payload) serialization of a signed transaction\n   */\n  serialize(): Buffer {\n    const sszEncodedTx = SignedBlobTransactionType.serialize(this.toValue())\n    return Buffer.concat([TRANSACTION_TYPE_BUFFER, sszEncodedTx])\n  }\n\n  /**\n   * @returns the serialized form of a blob transaction in the network wrapper format (used for gossipping mempool transactions over devp2p)\n   */\n  serializeNetworkWrapper(): Buffer {\n    if (\n      this.blobs === undefined ||\n      this.kzgCommitments === undefined ||\n      this.aggregateKzgProof === undefined\n    ) {\n      throw new Error(\n        'cannot serialize network wrapper without blobs, KZG commitments and aggregate KZG proof provided'\n      )\n    }\n    const to = {\n      selector: this.to !== undefined ? 1 : 0,\n      value: this.to?.toBuffer() ?? null,\n    }\n\n    const blobArrays = this.blobs?.map((blob) => Uint8Array.from(blob)) ?? []\n    const serializedTxWrapper = BlobNetworkTransactionWrapper.serialize({\n      blobs: blobArrays,\n      blobKzgs: this.kzgCommitments?.map((commitment) => Uint8Array.from(commitment)) ?? [],\n      tx: { ...blobTxToNetworkWrapperDataFormat(this), ...to },\n      kzgAggregatedProof: Uint8Array.from(this.aggregateKzgProof ?? []),\n    })\n    return Buffer.concat([Buffer.from([0x05]), serializedTxWrapper])\n  }\n\n  getMessageToSign(hashMessage: false): Buffer | Buffer[]\n  getMessageToSign(hashMessage?: true | undefined): Buffer\n  getMessageToSign(_hashMessage?: unknown): Buffer | Buffer[] {\n    return this.unsignedHash()\n  }\n\n  /**\n   * Returns the hash of a blob transaction\n   */\n  unsignedHash(): Buffer {\n    const serializedTx = BlobTransactionType.serialize(this.toValue().message)\n    return Buffer.from(keccak256(Buffer.concat([TRANSACTION_TYPE_BUFFER, serializedTx])))\n  }\n\n  hash(): Buffer {\n    return Buffer.from(keccak256(this.serialize()))\n  }\n\n  getMessageToVerifySignature(): Buffer {\n    return this.getMessageToSign()\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  public getSenderPublicKey(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call this method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    const msgHash = this.getMessageToVerifySignature()\n    const { v, r, s } = this\n\n    this._validateHighS()\n\n    try {\n      return ecrecover(\n        msgHash,\n        v! + BigInt(27), // Recover the 27 which was stripped from ecsign\n        bigIntToUnpaddedBuffer(r!),\n        bigIntToUnpaddedBuffer(s!)\n      )\n    } catch (e: any) {\n      const msg = this._errorMsg('Invalid Signature')\n      throw new Error(msg)\n    }\n  }\n\n  toJSON(): JsonTx {\n    const accessListJSON = AccessLists.getAccessListJSON(this.accessList)\n    return {\n      chainId: bigIntToHex(this.chainId),\n      nonce: bigIntToHex(this.nonce),\n      maxPriorityFeePerGas: bigIntToHex(this.maxPriorityFeePerGas),\n      maxFeePerGas: bigIntToHex(this.maxFeePerGas),\n      gasLimit: bigIntToHex(this.gasLimit),\n      to: this.to !== undefined ? this.to.toString() : undefined,\n      value: bigIntToHex(this.value),\n      data: '0x' + this.data.toString('hex'),\n      accessList: accessListJSON,\n      v: this.v !== undefined ? bigIntToHex(this.v) : undefined,\n      r: this.r !== undefined ? bigIntToHex(this.r) : undefined,\n      s: this.s !== undefined ? bigIntToHex(this.s) : undefined,\n      maxFeePerDataGas: bigIntToHex(this.maxFeePerDataGas),\n      versionedHashes: this.versionedHashes.map((hash) => bufferToHex(hash)),\n    }\n  }\n\n  _processSignature(v: bigint, r: Buffer, s: Buffer): BlobEIP4844Transaction {\n    const opts = { ...this.txOptions, common: this.common }\n\n    return BlobEIP4844Transaction.fromTxData(\n      {\n        chainId: this.chainId,\n        nonce: this.nonce,\n        maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n        maxFeePerGas: this.maxFeePerGas,\n        gasLimit: this.gasLimit,\n        to: this.to,\n        value: this.value,\n        data: this.data,\n        accessList: this.accessList,\n        v: v - BigInt(27), // This looks extremely hacky: @ethereumjs/util actually adds 27 to the value, the recovery bit is either 0 or 1.\n        r: bufferToBigInt(r),\n        s: bufferToBigInt(s),\n        maxFeePerDataGas: this.maxFeePerDataGas,\n        versionedHashes: this.versionedHashes,\n        blobs: this.blobs,\n        kzgCommitments: this.kzgCommitments,\n        kzgProof: this.aggregateKzgProof,\n      },\n      opts\n    )\n  }\n  /**\n   * Return a compact error string representation of the object\n   */\n  public errorStr() {\n    let errorStr = this._getSharedErrorPostfix()\n    errorStr += ` maxFeePerGas=${this.maxFeePerGas} maxPriorityFeePerGas=${this.maxPriorityFeePerGas}`\n    return errorStr\n  }\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected _errorMsg(msg: string) {\n    return `${msg} (${this.errorStr()})`\n  }\n\n  /**\n   * @returns the number of blobs included with this transaction\n   */\n  public numBlobs() {\n    return this.versionedHashes.length\n  }\n}\n","import { TypeOutput, setLengthLeft, toBuffer, toType } from '@ethereumjs/util'\n\nimport type { TxData } from './types'\n\nexport const normalizeTxParams = (_txParams: any): TxData => {\n  const txParams = Object.assign({}, _txParams)\n\n  txParams.gasLimit = toType(txParams.gasLimit ?? txParams.gas, TypeOutput.BigInt)\n  txParams.data = txParams.data === undefined ? txParams.input : txParams.data\n\n  // check and convert gasPrice and value params\n  txParams.gasPrice = txParams.gasPrice !== undefined ? BigInt(txParams.gasPrice) : undefined\n  txParams.value = txParams.value !== undefined ? BigInt(txParams.value) : undefined\n\n  // strict byte length checking\n  txParams.to =\n    txParams.to !== null && txParams.to !== undefined\n      ? setLengthLeft(toBuffer(txParams.to), 20)\n      : null\n\n  // Normalize the v/r/s values. If RPC returns '0x0', ensure v/r/s are set to `undefined` in the tx.\n  // If this is not done, then the transaction creation will throw, because `v` is `0`.\n  // Note: this still means that `isSigned` will return `false`.\n  // v/r/s values are `0x0` on networks like Optimism, where the tx is a system tx.\n  // For instance: https://optimistic.etherscan.io/tx/0xf4304cb09b3f58a8e5d20fec5f393c96ccffe0269aaf632cb2be7a8a0f0c91cc\n\n  txParams.v = txParams.v === '0x0' ? '0x' : txParams.v\n  txParams.r = txParams.r === '0x0' ? '0x' : txParams.r\n  txParams.s = txParams.s === '0x0' ? '0x' : txParams.s\n\n  if (txParams.v !== '0x') {\n    txParams.v = toType(txParams.v, TypeOutput.BigInt)\n  }\n\n  return txParams\n}\n","export { FeeMarketEIP1559Transaction } from './eip1559Transaction'\nexport { AccessListEIP2930Transaction } from './eip2930Transaction'\nexport { BlobEIP4844Transaction } from './eip4844Transaction'\nexport { initKZG, kzg } from './kzg/kzg'\nexport { Transaction } from './legacyTransaction'\nexport { TransactionFactory } from './transactionFactory'\nexport * from './types'\nexport { computeVersionedHash } from './utils/blobHelpers'\n","import type { Kzg } from '../depInterfaces'\n\nfunction kzgNotLoaded(): never {\n  throw Error('kzg library not loaded')\n}\n\n// eslint-disable-next-line import/no-mutable-exports\nexport let kzg: Kzg = {\n  freeTrustedSetup: kzgNotLoaded,\n  loadTrustedSetup: kzgNotLoaded,\n  blobToKzgCommitment: kzgNotLoaded,\n  computeAggregateKzgProof: kzgNotLoaded,\n  verifyKzgProof: kzgNotLoaded,\n  verifyAggregateKzgProof: kzgNotLoaded,\n}\n\n/**\n * @param kzgLib a KZG implementation (defaults to c-kzg)\n * @param trustedSetupPath the full path (e.g. \"/home/linux/devnet4.txt\") to a kzg trusted setup text file\n */\nexport function initKZG(kzgLib: Kzg, trustedSetupPath: string) {\n  kzg = kzgLib\n  kzg.loadTrustedSetup(trustedSetupPath)\n}\n","import { RLP } from '@ethereumjs/rlp'\nimport {\n  MAX_INTEGER,\n  arrToBufArr,\n  bigIntToHex,\n  bigIntToUnpaddedBuffer,\n  bufArrToArr,\n  bufferToBigInt,\n  ecrecover,\n  toBuffer,\n  unpadBuffer,\n  validateNoLeadingZeroes,\n} from '@ethereumjs/util'\nimport { keccak256 } from 'ethereum-cryptography/keccak'\n\nimport { BaseTransaction } from './baseTransaction'\nimport { Capability } from './types'\n\nimport type { JsonTx, TxData, TxOptions, TxValuesArray } from './types'\nimport type { Common } from '@ethereumjs/common'\n\nconst TRANSACTION_TYPE = 0\n\nfunction meetsEIP155(_v: bigint, chainId: bigint) {\n  const v = Number(_v)\n  const chainIdDoubled = Number(chainId) * 2\n  return v === chainIdDoubled + 35 || v === chainIdDoubled + 36\n}\n\n/**\n * An Ethereum non-typed (legacy) transaction\n */\nexport class Transaction extends BaseTransaction<Transaction> {\n  public readonly gasPrice: bigint\n\n  public readonly common: Common\n\n  /**\n   * Instantiate a transaction from a data dictionary.\n   *\n   * Format: { nonce, gasPrice, gasLimit, to, value, data, v, r, s }\n   *\n   * Notes:\n   * - All parameters are optional and have some basic default values\n   */\n  public static fromTxData(txData: TxData, opts: TxOptions = {}) {\n    return new Transaction(txData, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   *\n   * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n   */\n  public static fromSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    const values = arrToBufArr(RLP.decode(Uint8Array.from(serialized))) as Buffer[]\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized tx input. Must be array')\n    }\n\n    return this.fromValuesArray(values, opts)\n  }\n\n  /**\n   * Create a transaction from a values array.\n   *\n   * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n   */\n  public static fromValuesArray(values: TxValuesArray, opts: TxOptions = {}) {\n    // If length is not 6, it has length 9. If v/r/s are empty Buffers, it is still an unsigned transaction\n    // This happens if you get the RLP data from `raw()`\n    if (values.length !== 6 && values.length !== 9) {\n      throw new Error(\n        'Invalid transaction. Only expecting 6 values (for unsigned tx) or 9 values (for signed tx).'\n      )\n    }\n\n    const [nonce, gasPrice, gasLimit, to, value, data, v, r, s] = values\n\n    validateNoLeadingZeroes({ nonce, gasPrice, gasLimit, value, v, r, s })\n\n    return new Transaction(\n      {\n        nonce,\n        gasPrice,\n        gasLimit,\n        to,\n        value,\n        data,\n        v,\n        r,\n        s,\n      },\n      opts\n    )\n  }\n\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  public constructor(txData: TxData, opts: TxOptions = {}) {\n    super({ ...txData, type: TRANSACTION_TYPE }, opts)\n\n    this.common = this._validateTxV(this.v, opts.common)\n\n    this.gasPrice = bufferToBigInt(toBuffer(txData.gasPrice === '' ? '0x' : txData.gasPrice))\n\n    if (this.gasPrice * this.gasLimit > MAX_INTEGER) {\n      const msg = this._errorMsg('gas limit * gasPrice cannot exceed MAX_INTEGER (2^256-1)')\n      throw new Error(msg)\n    }\n    this._validateCannotExceedMaxInteger({ gasPrice: this.gasPrice })\n    BaseTransaction._validateNotArray(txData)\n\n    if (this.common.gteHardfork('spuriousDragon')) {\n      if (!this.isSigned()) {\n        this.activeCapabilities.push(Capability.EIP155ReplayProtection)\n      } else {\n        // EIP155 spec:\n        // If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36\n        // then when computing the hash of a transaction for purposes of signing or recovering\n        // instead of hashing only the first six elements (i.e. nonce, gasprice, startgas, to, value, data)\n        // hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0.\n        // v and chain ID meet EIP-155 conditions\n        if (meetsEIP155(this.v!, this.common.chainId())) {\n          this.activeCapabilities.push(Capability.EIP155ReplayProtection)\n        }\n      }\n    }\n\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(this)\n    }\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of the legacy transaction, in order.\n   *\n   * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n   *\n   * For legacy txs this is also the correct format to add transactions\n   * to a block with {@link Block.fromValuesArray} (use the `serialize()` method\n   * for typed txs).\n   *\n   * For an unsigned tx this method returns the empty Buffer values\n   * for the signature parameters `v`, `r` and `s`. For an EIP-155 compliant\n   * representation have a look at {@link Transaction.getMessageToSign}.\n   */\n  raw(): TxValuesArray {\n    return [\n      bigIntToUnpaddedBuffer(this.nonce),\n      bigIntToUnpaddedBuffer(this.gasPrice),\n      bigIntToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bigIntToUnpaddedBuffer(this.value),\n      this.data,\n      this.v !== undefined ? bigIntToUnpaddedBuffer(this.v) : Buffer.from([]),\n      this.r !== undefined ? bigIntToUnpaddedBuffer(this.r) : Buffer.from([]),\n      this.s !== undefined ? bigIntToUnpaddedBuffer(this.s) : Buffer.from([]),\n    ]\n  }\n\n  /**\n   * Returns the serialized encoding of the legacy transaction.\n   *\n   * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link Transaction.getMessageToSign}.\n   */\n  serialize(): Buffer {\n    return Buffer.from(RLP.encode(bufArrToArr(this.raw())))\n  }\n\n  private _getMessageToSign() {\n    const values = [\n      bigIntToUnpaddedBuffer(this.nonce),\n      bigIntToUnpaddedBuffer(this.gasPrice),\n      bigIntToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bigIntToUnpaddedBuffer(this.value),\n      this.data,\n    ]\n\n    if (this.supports(Capability.EIP155ReplayProtection)) {\n      values.push(toBuffer(this.common.chainId()))\n      values.push(unpadBuffer(toBuffer(0)))\n      values.push(unpadBuffer(toBuffer(0)))\n    }\n\n    return values\n  }\n\n  /**\n   * Returns the unsigned tx (hashed or raw), which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: the raw message message format for the legacy tx is not RLP encoded\n   * and you might need to do yourself with:\n   *\n   * ```javascript\n   * import { bufArrToArr } from '@ethereumjs/util'\n   * import { RLP } from '@ethereumjs/rlp'\n   * const message = tx.getMessageToSign(false)\n   * const serializedMessage = Buffer.from(RLP.encode(bufArrToArr(message))) // use this for the HW wallet input\n   * ```\n   *\n   * @param hashMessage - Return hashed message if set to true (default: true)\n   */\n  getMessageToSign(hashMessage: false): Buffer[]\n  getMessageToSign(hashMessage?: true): Buffer\n  getMessageToSign(hashMessage = true) {\n    const message = this._getMessageToSign()\n    if (hashMessage) {\n      return Buffer.from(keccak256(RLP.encode(bufArrToArr(message))))\n    } else {\n      return message\n    }\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): bigint {\n    if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n      return this.cache.dataFee.value\n    }\n\n    if (Object.isFrozen(this)) {\n      this.cache.dataFee = {\n        value: super.getDataFee(),\n        hardfork: this.common.hardfork(),\n      }\n    }\n\n    return super.getDataFee()\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   */\n  getUpfrontCost(): bigint {\n    return this.gasLimit * this.gasPrice + this.value\n  }\n\n  /**\n   * Computes a sha3-256 hash of the serialized tx.\n   *\n   * This method can only be used for signed txs (it throws otherwise).\n   * Use {@link Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n   */\n  hash(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call hash method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    if (Object.isFrozen(this)) {\n      if (!this.cache.hash) {\n        this.cache.hash = Buffer.from(keccak256(RLP.encode(bufArrToArr(this.raw()))))\n      }\n      return this.cache.hash\n    }\n\n    return Buffer.from(keccak256(RLP.encode(bufArrToArr(this.raw()))))\n  }\n\n  /**\n   * Computes a sha3-256 hash which can be used to verify the signature\n   */\n  getMessageToVerifySignature() {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('This transaction is not signed')\n      throw new Error(msg)\n    }\n    const message = this._getMessageToSign()\n    return Buffer.from(keccak256(RLP.encode(bufArrToArr(message))))\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  getSenderPublicKey(): Buffer {\n    const msgHash = this.getMessageToVerifySignature()\n\n    const { v, r, s } = this\n\n    this._validateHighS()\n\n    try {\n      return ecrecover(\n        msgHash,\n        v!,\n        bigIntToUnpaddedBuffer(r!),\n        bigIntToUnpaddedBuffer(s!),\n        this.supports(Capability.EIP155ReplayProtection) ? this.common.chainId() : undefined\n      )\n    } catch (e: any) {\n      const msg = this._errorMsg('Invalid Signature')\n      throw new Error(msg)\n    }\n  }\n\n  /**\n   * Process the v, r, s values from the `sign` method of the base transaction.\n   */\n  protected _processSignature(v: bigint, r: Buffer, s: Buffer) {\n    if (this.supports(Capability.EIP155ReplayProtection)) {\n      v += this.common.chainId() * BigInt(2) + BigInt(8)\n    }\n\n    const opts = { ...this.txOptions, common: this.common }\n\n    return Transaction.fromTxData(\n      {\n        nonce: this.nonce,\n        gasPrice: this.gasPrice,\n        gasLimit: this.gasLimit,\n        to: this.to,\n        value: this.value,\n        data: this.data,\n        v,\n        r: bufferToBigInt(r),\n        s: bufferToBigInt(s),\n      },\n      opts\n    )\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction.\n   */\n  toJSON(): JsonTx {\n    return {\n      nonce: bigIntToHex(this.nonce),\n      gasPrice: bigIntToHex(this.gasPrice),\n      gasLimit: bigIntToHex(this.gasLimit),\n      to: this.to !== undefined ? this.to.toString() : undefined,\n      value: bigIntToHex(this.value),\n      data: '0x' + this.data.toString('hex'),\n      v: this.v !== undefined ? bigIntToHex(this.v) : undefined,\n      r: this.r !== undefined ? bigIntToHex(this.r) : undefined,\n      s: this.s !== undefined ? bigIntToHex(this.s) : undefined,\n    }\n  }\n\n  /**\n   * Validates tx's `v` value\n   */\n  private _validateTxV(_v?: bigint, common?: Common): Common {\n    let chainIdBigInt\n    const v = _v !== undefined ? Number(_v) : undefined\n    // Check for valid v values in the scope of a signed legacy tx\n    if (v !== undefined) {\n      // v is 1. not matching the EIP-155 chainId included case and...\n      // v is 2. not matching the classic v=27 or v=28 case\n      if (v < 37 && v !== 27 && v !== 28) {\n        throw new Error(\n          `Legacy txs need either v = 27/28 or v >= 37 (EIP-155 replay protection), got v = ${v}`\n        )\n      }\n    }\n\n    // No unsigned tx and EIP-155 activated and chain ID included\n    if (\n      v !== undefined &&\n      v !== 0 &&\n      (!common || common.gteHardfork('spuriousDragon')) &&\n      v !== 27 &&\n      v !== 28\n    ) {\n      if (common) {\n        if (!meetsEIP155(BigInt(v), common.chainId())) {\n          throw new Error(\n            `Incompatible EIP155-based V ${v} and chain id ${common.chainId()}. See the Common parameter of the Transaction constructor to set the chain id.`\n          )\n        }\n      } else {\n        // Derive the original chain ID\n        let numSub\n        if ((v - 35) % 2 === 0) {\n          numSub = 35\n        } else {\n          numSub = 36\n        }\n        // Use derived chain ID to create a proper Common\n        chainIdBigInt = BigInt(v - numSub) / BigInt(2)\n      }\n    }\n    return this._getCommon(common, chainIdBigInt)\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public errorStr() {\n    let errorStr = this._getSharedErrorPostfix()\n    errorStr += ` gasPrice=${this.gasPrice}`\n    return errorStr\n  }\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected _errorMsg(msg: string) {\n    return `${msg} (${this.errorStr()})`\n  }\n}\n","import { bufferToBigInt, fetchFromProvider, getProvider, toBuffer } from '@ethereumjs/util'\n\nimport { FeeMarketEIP1559Transaction } from './eip1559Transaction'\nimport { AccessListEIP2930Transaction } from './eip2930Transaction'\nimport { BlobEIP4844Transaction } from './eip4844Transaction'\nimport { normalizeTxParams } from './fromRpc'\nimport { Transaction } from './legacyTransaction'\n\nimport type {\n  AccessListEIP2930TxData,\n  BlobEIP4844TxData,\n  FeeMarketEIP1559TxData,\n  TxData,\n  TxOptions,\n  TypedTransaction,\n} from './types'\n\nexport class TransactionFactory {\n  // It is not possible to instantiate a TransactionFactory object.\n  private constructor() {}\n\n  /**\n   * Create a transaction from a `txData` object\n   *\n   * @param txData - The transaction data. The `type` field will determine which transaction type is returned (if undefined, creates a legacy transaction)\n   * @param txOptions - Options to pass on to the constructor of the transaction\n   */\n  public static fromTxData(\n    txData: TxData | AccessListEIP2930TxData | FeeMarketEIP1559TxData | BlobEIP4844TxData,\n    txOptions: TxOptions = {}\n  ): TypedTransaction {\n    if (!('type' in txData) || txData.type === undefined) {\n      // Assume legacy transaction\n      return Transaction.fromTxData(<TxData>txData, txOptions)\n    } else {\n      const txType = Number(bufferToBigInt(toBuffer(txData.type)))\n      if (txType === 0) {\n        return Transaction.fromTxData(<TxData>txData, txOptions)\n      } else if (txType === 1) {\n        return AccessListEIP2930Transaction.fromTxData(<AccessListEIP2930TxData>txData, txOptions)\n      } else if (txType === 2) {\n        return FeeMarketEIP1559Transaction.fromTxData(<FeeMarketEIP1559TxData>txData, txOptions)\n      } else if (txType === 5) {\n        return BlobEIP4844Transaction.fromTxData(<BlobEIP4844TxData>txData, txOptions)\n      } else {\n        throw new Error(`Tx instantiation with type ${txType} not supported`)\n      }\n    }\n  }\n\n  /**\n   * This method tries to decode serialized data.\n   *\n   * @param data - The data Buffer\n   * @param txOptions - The transaction options\n   */\n  public static fromSerializedData(data: Buffer, txOptions: TxOptions = {}): TypedTransaction {\n    if (data[0] <= 0x7f) {\n      // Determine the type.\n      switch (data[0]) {\n        case 1:\n          return AccessListEIP2930Transaction.fromSerializedTx(data, txOptions)\n        case 2:\n          return FeeMarketEIP1559Transaction.fromSerializedTx(data, txOptions)\n        case 5:\n          return BlobEIP4844Transaction.fromSerializedTx(data, txOptions)\n        default:\n          throw new Error(`TypedTransaction with ID ${data[0]} unknown`)\n      }\n    } else {\n      return Transaction.fromSerializedTx(data, txOptions)\n    }\n  }\n\n  /**\n   * When decoding a BlockBody, in the transactions field, a field is either:\n   * A Buffer (a TypedTransaction - encoded as TransactionType || rlp(TransactionPayload))\n   * A Buffer[] (Legacy Transaction)\n   * This method returns the right transaction.\n   *\n   * @param data - A Buffer or Buffer[]\n   * @param txOptions - The transaction options\n   */\n  public static fromBlockBodyData(data: Buffer | Buffer[], txOptions: TxOptions = {}) {\n    if (Buffer.isBuffer(data)) {\n      return this.fromSerializedData(data, txOptions)\n    } else if (Array.isArray(data)) {\n      // It is a legacy transaction\n      return Transaction.fromValuesArray(data, txOptions)\n    } else {\n      throw new Error('Cannot decode transaction: unknown type input')\n    }\n  }\n\n  /**\n   *  Method to retrieve a transaction from the provider\n   * @param provider - An Ethers JsonRPCProvider\n   * @param txHash - Transaction hash\n   * @param txOptions - The transaction options\n   * @returns the transaction specified by `txHash`\n   */\n  public static async fromEthersProvider(\n    provider: string | any,\n    txHash: string,\n    txOptions?: TxOptions\n  ) {\n    const prov = getProvider(provider)\n    const txData = await fetchFromProvider(prov, {\n      method: 'eth_getTransactionByHash',\n      params: [txHash],\n    })\n    if (txData === null) {\n      throw new Error('No data returned from provider')\n    }\n    return TransactionFactory.fromRPCTx(txData, txOptions)\n  }\n\n  /**\n   * Method to decode data retrieved from RPC, such as `eth_getTransactionByHash`\n   * Note that this normalizes some of the parameters\n   * @param txData The RPC-encoded data\n   * @param txOptions The transaction options\n   * @returns\n   */\n  public static async fromRPCTx(\n    txData: TxData | AccessListEIP2930TxData | FeeMarketEIP1559TxData | BlobEIP4844TxData,\n    txOptions: TxOptions = {}\n  ) {\n    return TransactionFactory.fromTxData(normalizeTxParams(txData), txOptions)\n  }\n}\n","import {\n  BooleanType,\n  ByteListType,\n  ByteVectorType,\n  ContainerType,\n  ListCompositeType,\n  NoneType,\n  UintBigintType,\n  UnionType,\n} from '@chainsafe/ssz'\n\nimport {\n  BYTES_PER_FIELD_ELEMENT,\n  FIELD_ELEMENTS_PER_BLOB,\n  LIMIT_BLOBS_PER_TX,\n  MAX_ACCESS_LIST_SIZE,\n  MAX_CALLDATA_SIZE,\n  MAX_TX_WRAP_KZG_COMMITMENTS,\n  MAX_VERSIONED_HASHES_LIST_SIZE,\n} from './constants'\n\nimport type { FeeMarketEIP1559Transaction } from './eip1559Transaction'\nimport type { AccessListEIP2930Transaction } from './eip2930Transaction'\nimport type { BlobEIP4844Transaction } from './eip4844Transaction'\nimport type { Transaction } from './legacyTransaction'\nimport type { Common } from '@ethereumjs/common'\nimport type { AddressLike, BigIntLike, BufferLike, PrefixedHexString } from '@ethereumjs/util'\n\nconst Bytes20 = new ByteVectorType(20)\nconst Bytes32 = new ByteVectorType(32)\nconst Bytes48 = new ByteVectorType(48)\n\nconst Uint64 = new UintBigintType(8)\nconst Uint256 = new UintBigintType(32)\n\n/**\n * Can be used in conjunction with {@link Transaction.supports}\n * to query on tx capabilities\n */\nexport enum Capability {\n  /**\n   * Tx supports EIP-155 replay protection\n   * See: [155](https://eips.ethereum.org/EIPS/eip-155) Replay Attack Protection EIP\n   */\n  EIP155ReplayProtection = 155,\n\n  /**\n   * Tx supports EIP-1559 gas fee market mechanism\n   * See: [1559](https://eips.ethereum.org/EIPS/eip-1559) Fee Market EIP\n   */\n  EIP1559FeeMarket = 1559,\n\n  /**\n   * Tx is a typed transaction as defined in EIP-2718\n   * See: [2718](https://eips.ethereum.org/EIPS/eip-2718) Transaction Type EIP\n   */\n  EIP2718TypedTransaction = 2718,\n\n  /**\n   * Tx supports access list generation as defined in EIP-2930\n   * See: [2930](https://eips.ethereum.org/EIPS/eip-2930) Access Lists EIP\n   */\n  EIP2930AccessLists = 2930,\n}\n\n/**\n * The options for initializing a {@link Transaction}.\n */\nexport interface TxOptions {\n  /**\n   * A {@link Common} object defining the chain and hardfork for the transaction.\n   *\n   * Object will be internally copied so that tx behavior don't incidentally\n   * change on future HF changes.\n   *\n   * Default: {@link Common} object set to `mainnet` and the default hardfork as defined in the {@link Common} class.\n   *\n   * Current default hardfork: `istanbul`\n   */\n  common?: Common\n  /**\n   * A transaction object by default gets frozen along initialization. This gives you\n   * strong additional security guarantees on the consistency of the tx parameters.\n   * It also enables tx hash caching when the `hash()` method is called multiple times.\n   *\n   * If you need to deactivate the tx freeze - e.g. because you want to subclass tx and\n   * add additional properties - it is strongly encouraged that you do the freeze yourself\n   * within your code instead.\n   *\n   * Default: true\n   */\n  freeze?: boolean\n\n  /**\n   * Allows unlimited contract code-size init while debugging. This (partially) disables EIP-3860.\n   * Gas cost for initcode size analysis will still be charged. Use with caution.\n   */\n  allowUnlimitedInitCodeSize?: boolean\n}\n\n/*\n * Access List types\n */\n\nexport type AccessListItem = {\n  address: PrefixedHexString\n  storageKeys: PrefixedHexString[]\n}\n\n/*\n * An Access List as a tuple of [address: Buffer, storageKeys: Buffer[]]\n */\nexport type AccessListBufferItem = [Buffer, Buffer[]]\nexport type AccessListBuffer = AccessListBufferItem[]\nexport type AccessList = AccessListItem[]\n\nexport function isAccessListBuffer(\n  input: AccessListBuffer | AccessList\n): input is AccessListBuffer {\n  if (input.length === 0) {\n    return true\n  }\n  const firstItem = input[0]\n  if (Array.isArray(firstItem)) {\n    return true\n  }\n  return false\n}\n\nexport function isAccessList(input: AccessListBuffer | AccessList): input is AccessList {\n  return !isAccessListBuffer(input) // This is exactly the same method, except the output is negated.\n}\n\n/**\n * Encompassing type for all transaction types.\n *\n * Note that this also includes legacy txs which are\n * referenced as {@link Transaction} for compatibility reasons.\n */\nexport type TypedTransaction =\n  | Transaction\n  | AccessListEIP2930Transaction\n  | FeeMarketEIP1559Transaction\n  | BlobEIP4844Transaction\n\n/**\n * Legacy {@link Transaction} Data\n */\nexport type TxData = {\n  /**\n   * The transaction's nonce.\n   */\n  nonce?: BigIntLike\n\n  /**\n   * The transaction's gas price.\n   */\n  gasPrice?: BigIntLike | null\n\n  /**\n   * The transaction's gas limit.\n   */\n  gasLimit?: BigIntLike\n\n  /**\n   * The transaction's the address is sent to.\n   */\n  to?: AddressLike\n\n  /**\n   * The amount of Ether sent.\n   */\n  value?: BigIntLike\n\n  /**\n   * This will contain the data of the message or the init of a contract.\n   */\n  data?: BufferLike\n\n  /**\n   * EC recovery ID.\n   */\n  v?: BigIntLike\n\n  /**\n   * EC signature parameter.\n   */\n  r?: BigIntLike\n\n  /**\n   * EC signature parameter.\n   */\n  s?: BigIntLike\n\n  /**\n   * The transaction type\n   */\n\n  type?: BigIntLike\n}\n\n/**\n * {@link AccessListEIP2930Transaction} data.\n */\nexport interface AccessListEIP2930TxData extends TxData {\n  /**\n   * The transaction's chain ID\n   */\n  chainId?: BigIntLike\n\n  /**\n   * The access list which contains the addresses/storage slots which the transaction wishes to access\n   */\n  accessList?: AccessListBuffer | AccessList | null\n}\n\n/**\n * {@link FeeMarketEIP1559Transaction} data.\n */\nexport interface FeeMarketEIP1559TxData extends AccessListEIP2930TxData {\n  /**\n   * The transaction's gas price, inherited from {@link Transaction}.  This property is not used for EIP1559\n   * transactions and should always be undefined for this specific transaction type.\n   */\n  gasPrice?: never | null\n  /**\n   * The maximum inclusion fee per gas (this fee is given to the miner)\n   */\n  maxPriorityFeePerGas?: BigIntLike\n  /**\n   * The maximum total fee\n   */\n  maxFeePerGas?: BigIntLike\n}\n\n/**\n * {@link BlobEIP4844Transaction} data.\n */\nexport interface BlobEIP4844TxData extends FeeMarketEIP1559TxData {\n  /**\n   * The versioned hashes used to validate the blobs attached to a transaction\n   */\n  versionedHashes?: BufferLike[]\n  /**\n   * The maximum fee per data gas paid for the transaction\n   */\n  maxFeePerDataGas?: BigIntLike\n  /**\n   * The blobs associated with a transaction\n   */\n  blobs?: BufferLike[]\n  /**\n   * The KZG commitments corresponding to the versioned hashes for each blob\n   */\n  kzgCommitments?: BufferLike[]\n  /**\n   * The aggregate KZG proof associated with the transaction\n   */\n  kzgProof?: BufferLike\n}\n\n/**\n * Buffer values array for a legacy {@link Transaction}\n */\nexport type TxValuesArray = Buffer[]\n\n/**\n * Buffer values array for an {@link AccessListEIP2930Transaction}\n */\nexport type AccessListEIP2930ValuesArray = [\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  AccessListBuffer,\n  Buffer?,\n  Buffer?,\n  Buffer?\n]\n\n/**\n * Buffer values array for a {@link FeeMarketEIP1559Transaction}\n */\nexport type FeeMarketEIP1559ValuesArray = [\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  AccessListBuffer,\n  Buffer?,\n  Buffer?,\n  Buffer?\n]\n\ntype JsonAccessListItem = { address: string; storageKeys: string[] }\n\n/**\n * Generic interface for all tx types with a\n * JSON representation of a transaction.\n *\n * Note that all values are marked as optional\n * and not all the values are present on all tx types\n * (an EIP1559 tx e.g. lacks a `gasPrice`).\n */\nexport interface JsonTx {\n  nonce?: string\n  gasPrice?: string\n  gasLimit?: string\n  to?: string\n  data?: string\n  v?: string\n  r?: string\n  s?: string\n  value?: string\n  chainId?: string\n  accessList?: JsonAccessListItem[]\n  type?: string\n  maxPriorityFeePerGas?: string\n  maxFeePerGas?: string\n  maxFeePerDataGas?: string\n  versionedHashes?: string[]\n}\n\n/*\n * Based on https://ethereum.org/en/developers/docs/apis/json-rpc/\n */\nexport interface JsonRpcTx {\n  blockHash: string | null // DATA, 32 Bytes - hash of the block where this transaction was in. null when it's pending.\n  blockNumber: string | null // QUANTITY - block number where this transaction was in. null when it's pending.\n  from: string // DATA, 20 Bytes - address of the sender.\n  gas: string // QUANTITY - gas provided by the sender.\n  gasPrice: string // QUANTITY - gas price provided by the sender in wei. If EIP-1559 tx, defaults to maxFeePerGas.\n  maxFeePerGas?: string // QUANTITY - max total fee per gas provided by the sender in wei.\n  maxPriorityFeePerGas?: string // QUANTITY - max priority fee per gas provided by the sender in wei.\n  type: string // QUANTITY - EIP-2718 Typed Transaction type\n  accessList?: JsonTx['accessList'] // EIP-2930 access list\n  chainId?: string // Chain ID that this transaction is valid on.\n  hash: string // DATA, 32 Bytes - hash of the transaction.\n  input: string // DATA - the data send along with the transaction.\n  nonce: string // QUANTITY - the number of transactions made by the sender prior to this one.\n  to: string | null /// DATA, 20 Bytes - address of the receiver. null when it's a contract creation transaction.\n  transactionIndex: string | null // QUANTITY - integer of the transactions index position in the block. null when it's pending.\n  value: string // QUANTITY - value transferred in Wei.\n  v: string // QUANTITY - ECDSA recovery id\n  r: string // DATA, 32 Bytes - ECDSA signature r\n  s: string // DATA, 32 Bytes - ECDSA signature s\n  maxFeePerDataGas?: string // QUANTITY - max data fee for blob transactions\n  versionedHashes?: string[] // DATA - array of 32 byte versioned hashes for blob transactions\n}\n\n/** EIP4844 types */\nexport const AddressType = Bytes20 // SSZ encoded address\n\n// SSZ encoded container for address and storage keys\nexport const AccessTupleType = new ContainerType({\n  address: AddressType,\n  storageKeys: new ListCompositeType(Bytes32, MAX_VERSIONED_HASHES_LIST_SIZE),\n})\n\n// SSZ encoded blob transaction\nexport const BlobTransactionType = new ContainerType({\n  chainId: Uint256,\n  nonce: Uint64,\n  maxPriorityFeePerGas: Uint256,\n  maxFeePerGas: Uint256,\n  gas: Uint64,\n  to: new UnionType([new NoneType(), AddressType]),\n  value: Uint256,\n  data: new ByteListType(MAX_CALLDATA_SIZE),\n  accessList: new ListCompositeType(AccessTupleType, MAX_ACCESS_LIST_SIZE),\n  maxFeePerDataGas: Uint256,\n  blobVersionedHashes: new ListCompositeType(Bytes32, MAX_VERSIONED_HASHES_LIST_SIZE),\n})\n\n// SSZ encoded ECDSA Signature\nexport const ECDSASignatureType = new ContainerType({\n  yParity: new BooleanType(),\n  r: Uint256,\n  s: Uint256,\n})\n\n// SSZ encoded signed blob transaction\nexport const SignedBlobTransactionType = new ContainerType({\n  message: BlobTransactionType,\n  signature: ECDSASignatureType,\n})\n\n// SSZ encoded KZG Commitment/Proof (48 bytes)\nexport const KZGCommitmentType = Bytes48\nexport const KZGProofType = KZGCommitmentType\n\n// SSZ encoded blob network transaction wrapper\nexport const BlobNetworkTransactionWrapper = new ContainerType({\n  tx: SignedBlobTransactionType,\n  blobKzgs: new ListCompositeType(KZGCommitmentType, MAX_TX_WRAP_KZG_COMMITMENTS),\n  blobs: new ListCompositeType(\n    new ByteVectorType(FIELD_ELEMENTS_PER_BLOB * BYTES_PER_FIELD_ELEMENT),\n    LIMIT_BLOBS_PER_TX\n  ),\n  kzgAggregatedProof: KZGProofType,\n})\n","import { bufferToHex, setLengthLeft, toBuffer } from '@ethereumjs/util'\n\nimport { isAccessList } from './types'\n\nimport type { BlobEIP4844Transaction } from './eip4844Transaction'\nimport type { AccessList, AccessListBuffer, AccessListItem } from './types'\nimport type { Common } from '@ethereumjs/common'\n\nexport function checkMaxInitCodeSize(common: Common, length: number) {\n  const maxInitCodeSize = common.param('vm', 'maxInitCodeSize')\n  if (maxInitCodeSize && BigInt(length) > maxInitCodeSize) {\n    throw new Error(\n      `the initcode size of this transaction is too large: it is ${length} while the max is ${common.param(\n        'vm',\n        'maxInitCodeSize'\n      )}`\n    )\n  }\n}\n\nexport class AccessLists {\n  public static getAccessListData(accessList: AccessListBuffer | AccessList) {\n    let AccessListJSON\n    let bufferAccessList\n    if (isAccessList(accessList)) {\n      AccessListJSON = accessList\n      const newAccessList: AccessListBuffer = []\n\n      for (let i = 0; i < accessList.length; i++) {\n        const item: AccessListItem = accessList[i]\n        const addressBuffer = toBuffer(item.address)\n        const storageItems: Buffer[] = []\n        for (let index = 0; index < item.storageKeys.length; index++) {\n          storageItems.push(toBuffer(item.storageKeys[index]))\n        }\n        newAccessList.push([addressBuffer, storageItems])\n      }\n      bufferAccessList = newAccessList\n    } else {\n      bufferAccessList = accessList ?? []\n      // build the JSON\n      const json: AccessList = []\n      for (let i = 0; i < bufferAccessList.length; i++) {\n        const data = bufferAccessList[i]\n        const address = bufferToHex(data[0])\n        const storageKeys: string[] = []\n        for (let item = 0; item < data[1].length; item++) {\n          storageKeys.push(bufferToHex(data[1][item]))\n        }\n        const jsonItem: AccessListItem = {\n          address,\n          storageKeys,\n        }\n        json.push(jsonItem)\n      }\n      AccessListJSON = json\n    }\n\n    return {\n      AccessListJSON,\n      accessList: bufferAccessList,\n    }\n  }\n\n  public static verifyAccessList(accessList: AccessListBuffer) {\n    for (let key = 0; key < accessList.length; key++) {\n      const accessListItem = accessList[key]\n      const address = <Buffer>accessListItem[0]\n      const storageSlots = <Buffer[]>accessListItem[1]\n      if ((<any>accessListItem)[2] !== undefined) {\n        throw new Error(\n          'Access list item cannot have 3 elements. It can only have an address, and an array of storage slots.'\n        )\n      }\n      if (address.length !== 20) {\n        throw new Error('Invalid EIP-2930 transaction: address length should be 20 bytes')\n      }\n      for (let storageSlot = 0; storageSlot < storageSlots.length; storageSlot++) {\n        if (storageSlots[storageSlot].length !== 32) {\n          throw new Error('Invalid EIP-2930 transaction: storage slot length should be 32 bytes')\n        }\n      }\n    }\n  }\n\n  public static getAccessListJSON(accessList: AccessListBuffer) {\n    const accessListJSON = []\n    for (let index = 0; index < accessList.length; index++) {\n      const item: any = accessList[index]\n      const JSONItem: any = {\n        address: '0x' + setLengthLeft(<Buffer>item[0], 20).toString('hex'),\n        storageKeys: [],\n      }\n      const storageSlots: Buffer[] = item[1]\n      for (let slot = 0; slot < storageSlots.length; slot++) {\n        const storageSlot = storageSlots[slot]\n        JSONItem.storageKeys.push('0x' + setLengthLeft(storageSlot, 32).toString('hex'))\n      }\n      accessListJSON.push(JSONItem)\n    }\n    return accessListJSON\n  }\n\n  public static getDataFeeEIP2930(accessList: AccessListBuffer, common: Common): number {\n    const accessListStorageKeyCost = common.param('gasPrices', 'accessListStorageKeyCost')\n    const accessListAddressCost = common.param('gasPrices', 'accessListAddressCost')\n\n    let slots = 0\n    for (let index = 0; index < accessList.length; index++) {\n      const item = accessList[index]\n      const storageSlots = item[1]\n      slots += storageSlots.length\n    }\n\n    const addresses = accessList.length\n    return addresses * Number(accessListAddressCost) + slots * Number(accessListStorageKeyCost)\n  }\n}\n\nexport const blobTxToNetworkWrapperDataFormat = (tx: BlobEIP4844Transaction) => {\n  const to = {\n    selector: tx.to !== undefined ? 1 : 0,\n    value: tx.to?.toBuffer() ?? null,\n  }\n  return {\n    message: {\n      chainId: tx.common.chainId(),\n      nonce: tx.nonce,\n      maxPriorityFeePerGas: tx.maxPriorityFeePerGas,\n      maxFeePerGas: tx.maxFeePerGas,\n      gas: tx.gasLimit,\n      to,\n      value: tx.value,\n      data: tx.data,\n      accessList: tx.accessList.map((listItem) => {\n        return { address: listItem[0], storageKeys: listItem[1] }\n      }),\n      blobVersionedHashes: tx.versionedHashes,\n      maxFeePerDataGas: tx.maxFeePerDataGas,\n    },\n    // If transaction is unsigned, signature fields will be initialized to zeroes\n    signature: {\n      r: tx.r ?? BigInt(0),\n      s: tx.s ?? BigInt(0),\n      yParity: tx.v === BigInt(1) ? true : false,\n    },\n  }\n}\n","import { sha256 } from 'ethereum-cryptography/sha256'\n\nimport { kzg } from '../kzg/kzg'\n\n/**\n * These utilities for constructing blobs are borrowed from https://github.com/Inphi/eip4844-interop.git\n */\nconst BYTES_PER_FIELD_ELEMENT = 32\nconst FIELD_ELEMENTS_PER_BLOB = 4096\nconst USEFUL_BYTES_PER_BLOB = 32 * FIELD_ELEMENTS_PER_BLOB\nconst MAX_BLOBS_PER_TX = 2\nconst MAX_USEFUL_BYTES_PER_TX = USEFUL_BYTES_PER_BLOB * MAX_BLOBS_PER_TX - 1\nconst BLOB_SIZE = BYTES_PER_FIELD_ELEMENT * FIELD_ELEMENTS_PER_BLOB\n\nfunction get_padded(data: Buffer, blobs_len: number) {\n  const pdata = Buffer.alloc(blobs_len * USEFUL_BYTES_PER_BLOB)\n  const datalen = Buffer.byteLength(data)\n  pdata.fill(data, 0, datalen)\n  pdata[datalen] = 0x80\n  return pdata\n}\n\nfunction get_blob(data: Buffer) {\n  const blob = Buffer.alloc(BLOB_SIZE, 'binary')\n  for (let i = 0; i < FIELD_ELEMENTS_PER_BLOB; i++) {\n    const chunk = Buffer.alloc(32, 'binary')\n    chunk.fill(data.subarray(i * 31, (i + 1) * 31), 0, 31)\n    blob.fill(chunk, i * 32, (i + 1) * 32)\n  }\n\n  return blob\n}\n\nexport const getBlobs = (input: string) => {\n  const data = Buffer.from(input, 'binary')\n  const len = Buffer.byteLength(data)\n  if (len === 0) {\n    throw Error('invalid blob data')\n  }\n  if (len > MAX_USEFUL_BYTES_PER_TX) {\n    throw Error('blob data is too large')\n  }\n\n  const blobs_len = Math.ceil(len / USEFUL_BYTES_PER_BLOB)\n\n  const pdata = get_padded(data, blobs_len)\n\n  const blobs = []\n  for (let i = 0; i < blobs_len; i++) {\n    const chunk = pdata.subarray(i * USEFUL_BYTES_PER_BLOB, (i + 1) * USEFUL_BYTES_PER_BLOB)\n    const blob = get_blob(chunk)\n    blobs.push(blob)\n  }\n\n  return blobs\n}\n\nexport const blobsToCommitments = (blobs: Buffer[]) => {\n  const commitments = []\n  for (const blob of blobs) {\n    commitments.push(Buffer.from(kzg.blobToKzgCommitment(blob)))\n  }\n  return commitments\n}\n\n/**\n * Converts a vector commitment for a given data blob to its versioned hash.  For 4844, this version\n * number will be 0x01 for KZG vector commitments but could be different if future vector commitment\n * types are introduced\n * @param commitment a vector commitment to a blob\n * @param blobCommitmentVersion the version number corresponding to the type of vector commitment\n * @returns a versioned hash corresponding to a given blob vector commitment\n */\nexport const computeVersionedHash = (commitment: Uint8Array, blobCommitmentVersion: number) => {\n  const computedVersionedHash = new Uint8Array(32)\n  computedVersionedHash.set([blobCommitmentVersion], 0)\n  computedVersionedHash.set(sha256(commitment).slice(1), 1)\n  return computedVersionedHash\n}\n\n/**\n * Generate an array of versioned hashes from corresponding kzg commitments\n * @param commitments array of kzg commitments\n * @returns array of versioned hashes\n * Note: assumes KZG commitments (version 1 version hashes)\n */\nexport const commitmentsToVersionedHashes = (commitments: Buffer[]) => {\n  const hashes = []\n  for (const commitment of commitments) {\n    hashes.push(Buffer.from(computeVersionedHash(commitment, 0x01)))\n  }\n  return hashes\n}\n","export type Input = string | number | bigint | Uint8Array | Array<Input> | null | undefined\n\nexport type NestedUint8Array = Array<Uint8Array | NestedUint8Array>\n\nexport interface Decoded {\n  data: Uint8Array | NestedUint8Array\n  remainder: Uint8Array\n}\n\n/**\n * RLP Encoding based on https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp/\n * This function takes in data, converts it to Uint8Array if not,\n * and adds a length for recursion.\n * @param input Will be converted to Uint8Array\n * @returns Uint8Array of encoded data\n **/\nexport function encode(input: Input): Uint8Array {\n  if (Array.isArray(input)) {\n    const output: Uint8Array[] = []\n    let outputLength = 0\n    for (let i = 0; i < input.length; i++) {\n      const encoded = encode(input[i])\n      output.push(encoded)\n      outputLength += encoded.length\n    }\n    return concatBytes(encodeLength(outputLength, 192), ...output)\n  }\n  const inputBuf = toBytes(input)\n  if (inputBuf.length === 1 && inputBuf[0] < 128) {\n    return inputBuf\n  }\n  return concatBytes(encodeLength(inputBuf.length, 128), inputBuf)\n}\n\n/**\n * Slices a Uint8Array, throws if the slice goes out-of-bounds of the Uint8Array.\n * E.g. `safeSlice(hexToBytes('aa'), 1, 2)` will throw.\n * @param input\n * @param start\n * @param end\n */\nfunction safeSlice(input: Uint8Array, start: number, end: number) {\n  if (end > input.length) {\n    throw new Error('invalid RLP (safeSlice): end slice of Uint8Array out-of-bounds')\n  }\n  return input.slice(start, end)\n}\n\n/**\n * Parse integers. Check if there is no leading zeros\n * @param v The value to parse\n */\nfunction decodeLength(v: Uint8Array): number {\n  if (v[0] === 0) {\n    throw new Error('invalid RLP: extra zeros')\n  }\n  return parseHexByte(bytesToHex(v))\n}\n\nfunction encodeLength(len: number, offset: number): Uint8Array {\n  if (len < 56) {\n    return Uint8Array.from([len + offset])\n  }\n  const hexLength = numberToHex(len)\n  const lLength = hexLength.length / 2\n  const firstByte = numberToHex(offset + 55 + lLength)\n  return Uint8Array.from(hexToBytes(firstByte + hexLength))\n}\n\n/**\n * RLP Decoding based on https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp/\n * @param input Will be converted to Uint8Array\n * @param stream Is the input a stream (false by default)\n * @returns decoded Array of Uint8Arrays containing the original message\n **/\nexport function decode(input: Input, stream?: false): Uint8Array | NestedUint8Array\nexport function decode(input: Input, stream?: true): Decoded\nexport function decode(input: Input, stream = false): Uint8Array | NestedUint8Array | Decoded {\n  if (typeof input === 'undefined' || input === null || (input as any).length === 0) {\n    return Uint8Array.from([])\n  }\n\n  const inputBytes = toBytes(input)\n  const decoded = _decode(inputBytes)\n\n  if (stream) {\n    return decoded\n  }\n  if (decoded.remainder.length !== 0) {\n    throw new Error('invalid RLP: remainder must be zero')\n  }\n\n  return decoded.data\n}\n\n/** Decode an input with RLP */\nfunction _decode(input: Uint8Array): Decoded {\n  let length: number, llength: number, data: Uint8Array, innerRemainder: Uint8Array, d: Decoded\n  const decoded = []\n  const firstByte = input[0]\n\n  if (firstByte <= 0x7f) {\n    // a single byte whose value is in the [0x00, 0x7f] range, that byte is its own RLP encoding.\n    return {\n      data: input.slice(0, 1),\n      remainder: input.slice(1),\n    }\n  } else if (firstByte <= 0xb7) {\n    // string is 0-55 bytes long. A single byte with value 0x80 plus the length of the string followed by the string\n    // The range of the first byte is [0x80, 0xb7]\n    length = firstByte - 0x7f\n\n    // set 0x80 null to 0\n    if (firstByte === 0x80) {\n      data = Uint8Array.from([])\n    } else {\n      data = safeSlice(input, 1, length)\n    }\n\n    if (length === 2 && data[0] < 0x80) {\n      throw new Error('invalid RLP encoding: invalid prefix, single byte < 0x80 are not prefixed')\n    }\n\n    return {\n      data,\n      remainder: input.slice(length),\n    }\n  } else if (firstByte <= 0xbf) {\n    // string is greater than 55 bytes long. A single byte with the value (0xb7 plus the length of the length),\n    // followed by the length, followed by the string\n    llength = firstByte - 0xb6\n    if (input.length - 1 < llength) {\n      throw new Error('invalid RLP: not enough bytes for string length')\n    }\n    length = decodeLength(safeSlice(input, 1, llength))\n    if (length <= 55) {\n      throw new Error('invalid RLP: expected string length to be greater than 55')\n    }\n    data = safeSlice(input, llength, length + llength)\n\n    return {\n      data,\n      remainder: input.slice(length + llength),\n    }\n  } else if (firstByte <= 0xf7) {\n    // a list between 0-55 bytes long\n    length = firstByte - 0xbf\n    innerRemainder = safeSlice(input, 1, length)\n    while (innerRemainder.length) {\n      d = _decode(innerRemainder)\n      decoded.push(d.data)\n      innerRemainder = d.remainder\n    }\n\n    return {\n      data: decoded,\n      remainder: input.slice(length),\n    }\n  } else {\n    // a list over 55 bytes long\n    llength = firstByte - 0xf6\n    length = decodeLength(safeSlice(input, 1, llength))\n    if (length < 56) {\n      throw new Error('invalid RLP: encoded list too short')\n    }\n    const totalLength = llength + length\n    if (totalLength > input.length) {\n      throw new Error('invalid RLP: total length is larger than the data')\n    }\n\n    innerRemainder = safeSlice(input, llength, totalLength)\n\n    while (innerRemainder.length) {\n      d = _decode(innerRemainder)\n      decoded.push(d.data)\n      innerRemainder = d.remainder\n    }\n\n    return {\n      data: decoded,\n      remainder: input.slice(totalLength),\n    }\n  }\n}\n\nconst cachedHexes = Array.from({ length: 256 }, (_v, i) => i.toString(16).padStart(2, '0'))\nfunction bytesToHex(uint8a: Uint8Array): string {\n  // Pre-caching chars with `cachedHexes` speeds this up 6x\n  let hex = ''\n  for (let i = 0; i < uint8a.length; i++) {\n    hex += cachedHexes[uint8a[i]]\n  }\n  return hex\n}\n\nfunction parseHexByte(hexByte: string): number {\n  const byte = Number.parseInt(hexByte, 16)\n  if (Number.isNaN(byte)) throw new Error('Invalid byte sequence')\n  return byte\n}\n\n// Caching slows it down 2-3x\nfunction hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') {\n    throw new TypeError('hexToBytes: expected string, got ' + typeof hex)\n  }\n  if (hex.length % 2) throw new Error('hexToBytes: received invalid unpadded hex')\n  const array = new Uint8Array(hex.length / 2)\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2\n    array[i] = parseHexByte(hex.slice(j, j + 2))\n  }\n  return array\n}\n\n/** Concatenates two Uint8Arrays into one. */\nfunction concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  if (arrays.length === 1) return arrays[0]\n  const length = arrays.reduce((a, arr) => a + arr.length, 0)\n  const result = new Uint8Array(length)\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const arr = arrays[i]\n    result.set(arr, pad)\n    pad += arr.length\n  }\n  return result\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any\ndeclare const TextDecoder: any\n\nfunction utf8ToBytes(utf: string): Uint8Array {\n  return new TextEncoder().encode(utf)\n}\n\n/** Transform an integer into its hexadecimal value */\nfunction numberToHex(integer: number | bigint): string {\n  if (integer < 0) {\n    throw new Error('Invalid integer as argument, must be unsigned!')\n  }\n  const hex = integer.toString(16)\n  return hex.length % 2 ? `0${hex}` : hex\n}\n\n/** Pad a string to be even */\nfunction padToEven(a: string): string {\n  return a.length % 2 ? `0${a}` : a\n}\n\n/** Check if a string is prefixed by 0x */\nfunction isHexPrefixed(str: string): boolean {\n  return str.length >= 2 && str[0] === '0' && str[1] === 'x'\n}\n\n/** Removes 0x from a given String */\nfunction stripHexPrefix(str: string): string {\n  if (typeof str !== 'string') {\n    return str\n  }\n  return isHexPrefixed(str) ? str.slice(2) : str\n}\n\n/** Transform anything into a Uint8Array */\nfunction toBytes(v: Input): Uint8Array {\n  if (v instanceof Uint8Array) {\n    return v\n  }\n  if (typeof v === 'string') {\n    if (isHexPrefixed(v)) {\n      return hexToBytes(padToEven(stripHexPrefix(v)))\n    }\n    return utf8ToBytes(v)\n  }\n  if (typeof v === 'number' || typeof v === 'bigint') {\n    if (!v) {\n      return Uint8Array.from([])\n    }\n    return hexToBytes(numberToHex(v))\n  }\n  if (v === null || v === undefined) {\n    return Uint8Array.from([])\n  }\n  throw new Error('toBytes: received unsupported type ' + typeof v)\n}\n\nexport const utils = {\n  bytesToHex,\n  concatBytes,\n  hexToBytes,\n  utf8ToBytes,\n}\n\nexport const RLP = { encode, decode }\n","import * as nacl from 'tweetnacl';\nimport * as naclUtil from 'tweetnacl-util';\n\nimport { isNullish } from './utils';\n\nexport type EthEncryptedData = {\n  version: string;\n  nonce: string;\n  ephemPublicKey: string;\n  ciphertext: string;\n};\n\n/**\n * Encrypt a message.\n *\n * @param options - The encryption options.\n * @param options.publicKey - The public key of the message recipient.\n * @param options.data - The message data.\n * @param options.version - The type of encryption to use.\n * @returns The encrypted data.\n */\nexport function encrypt({\n  publicKey,\n  data,\n  version,\n}: {\n  publicKey: string;\n  data: unknown;\n  version: string;\n}): EthEncryptedData {\n  if (isNullish(publicKey)) {\n    throw new Error('Missing publicKey parameter');\n  } else if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(version)) {\n    throw new Error('Missing version parameter');\n  }\n\n  switch (version) {\n    case 'x25519-xsalsa20-poly1305': {\n      if (typeof data !== 'string') {\n        throw new Error('Message data must be given as a string');\n      }\n      // generate ephemeral keypair\n      const ephemeralKeyPair = nacl.box.keyPair();\n\n      // assemble encryption parameters - from string to UInt8\n      let pubKeyUInt8Array: Uint8Array;\n      try {\n        pubKeyUInt8Array = naclUtil.decodeBase64(publicKey);\n      } catch (err) {\n        throw new Error('Bad public key');\n      }\n\n      const msgParamsUInt8Array = naclUtil.decodeUTF8(data);\n      const nonce = nacl.randomBytes(nacl.box.nonceLength);\n\n      // encrypt\n      const encryptedMessage = nacl.box(\n        msgParamsUInt8Array,\n        nonce,\n        pubKeyUInt8Array,\n        ephemeralKeyPair.secretKey,\n      );\n\n      // handle encrypted data\n      const output = {\n        version: 'x25519-xsalsa20-poly1305',\n        nonce: naclUtil.encodeBase64(nonce),\n        ephemPublicKey: naclUtil.encodeBase64(ephemeralKeyPair.publicKey),\n        ciphertext: naclUtil.encodeBase64(encryptedMessage),\n      };\n      // return encrypted msg data\n      return output;\n    }\n\n    default:\n      throw new Error('Encryption type/version not supported');\n  }\n}\n\n/**\n * Encrypt a message in a way that obscures the message length.\n *\n * The message is padded to a multiple of 2048 before being encrypted so that the length of the\n * resulting encrypted message can't be used to guess the exact length of the original message.\n *\n * @param options - The encryption options.\n * @param options.publicKey - The public key of the message recipient.\n * @param options.data - The message data.\n * @param options.version - The type of encryption to use.\n * @returns The encrypted data.\n */\nexport function encryptSafely({\n  publicKey,\n  data,\n  version,\n}: {\n  publicKey: string;\n  data: unknown;\n  version: string;\n}): EthEncryptedData {\n  if (isNullish(publicKey)) {\n    throw new Error('Missing publicKey parameter');\n  } else if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(version)) {\n    throw new Error('Missing version parameter');\n  }\n\n  const DEFAULT_PADDING_LENGTH = 2 ** 11;\n  const NACL_EXTRA_BYTES = 16;\n\n  if (typeof data === 'object' && data && 'toJSON' in data) {\n    // remove toJSON attack vector\n    // TODO, check all possible children\n    throw new Error(\n      'Cannot encrypt with toJSON property.  Please remove toJSON property',\n    );\n  }\n\n  // add padding\n  const dataWithPadding = {\n    data,\n    padding: '',\n  };\n\n  // calculate padding\n  const dataLength = Buffer.byteLength(\n    JSON.stringify(dataWithPadding),\n    'utf-8',\n  );\n  const modVal = dataLength % DEFAULT_PADDING_LENGTH;\n  let padLength = 0;\n  // Only pad if necessary\n  if (modVal > 0) {\n    padLength = DEFAULT_PADDING_LENGTH - modVal - NACL_EXTRA_BYTES; // nacl extra bytes\n  }\n  dataWithPadding.padding = '0'.repeat(padLength);\n\n  const paddedMessage = JSON.stringify(dataWithPadding);\n  return encrypt({ publicKey, data: paddedMessage, version });\n}\n\n/**\n * Decrypt a message.\n *\n * @param options - The decryption options.\n * @param options.encryptedData - The encrypted data.\n * @param options.privateKey - The private key to decrypt with.\n * @returns The decrypted message.\n */\nexport function decrypt({\n  encryptedData,\n  privateKey,\n}: {\n  encryptedData: EthEncryptedData;\n  privateKey: string;\n}): string {\n  if (isNullish(encryptedData)) {\n    throw new Error('Missing encryptedData parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing privateKey parameter');\n  }\n\n  switch (encryptedData.version) {\n    case 'x25519-xsalsa20-poly1305': {\n      // string to buffer to UInt8Array\n      const receiverPrivateKeyUint8Array = naclDecodeHex(privateKey);\n      const receiverEncryptionPrivateKey = nacl.box.keyPair.fromSecretKey(\n        receiverPrivateKeyUint8Array,\n      ).secretKey;\n\n      // assemble decryption parameters\n      const nonce = naclUtil.decodeBase64(encryptedData.nonce);\n      const ciphertext = naclUtil.decodeBase64(encryptedData.ciphertext);\n      const ephemPublicKey = naclUtil.decodeBase64(\n        encryptedData.ephemPublicKey,\n      );\n\n      // decrypt\n      const decryptedMessage = nacl.box.open(\n        ciphertext,\n        nonce,\n        ephemPublicKey,\n        receiverEncryptionPrivateKey,\n      );\n\n      // return decrypted msg data\n      try {\n        if (!decryptedMessage) {\n          throw new Error();\n        }\n        const output = naclUtil.encodeUTF8(decryptedMessage);\n        // TODO: This is probably extraneous but was kept to minimize changes during refactor\n        if (!output) {\n          throw new Error();\n        }\n        return output;\n      } catch (err) {\n        if (err && typeof err.message === 'string' && err.message.length) {\n          throw new Error(`Decryption failed: ${err.message as string}`);\n        }\n        throw new Error(`Decryption failed.`);\n      }\n    }\n\n    default:\n      throw new Error('Encryption type/version not supported.');\n  }\n}\n\n/**\n * Decrypt a message that has been encrypted using `encryptSafely`.\n *\n * @param options - The decryption options.\n * @param options.encryptedData - The encrypted data.\n * @param options.privateKey - The private key to decrypt with.\n * @returns The decrypted message.\n */\nexport function decryptSafely({\n  encryptedData,\n  privateKey,\n}: {\n  encryptedData: EthEncryptedData;\n  privateKey: string;\n}): string {\n  if (isNullish(encryptedData)) {\n    throw new Error('Missing encryptedData parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing privateKey parameter');\n  }\n\n  const dataWithPadding = JSON.parse(decrypt({ encryptedData, privateKey }));\n  return dataWithPadding.data;\n}\n\n/**\n * Get the encryption public key for the given key.\n *\n * @param privateKey - The private key to generate the encryption public key with.\n * @returns The encryption public key.\n */\nexport function getEncryptionPublicKey(privateKey: string): string {\n  const privateKeyUint8Array = naclDecodeHex(privateKey);\n  const encryptionPublicKey =\n    nacl.box.keyPair.fromSecretKey(privateKeyUint8Array).publicKey;\n  return naclUtil.encodeBase64(encryptionPublicKey);\n}\n\n/**\n * Convert a hex string to the UInt8Array format used by nacl.\n *\n * @param msgHex - The string to convert.\n * @returns The converted string.\n */\nfunction naclDecodeHex(msgHex: string): Uint8Array {\n  const msgBase64 = Buffer.from(msgHex, 'hex').toString('base64');\n  return naclUtil.decodeBase64(msgBase64);\n}\n","/* eslint jsdoc/require-description: 0 */\n/* eslint jsdoc/require-returns: 0 */\n/* eslint jsdoc/match-description: 0 */\n/* eslint jsdoc/require-param-description: 0 */\n\nimport {\n  ToBufferInputTypes,\n  toBuffer,\n  setLengthRight,\n  setLengthLeft,\n  isHexPrefixed,\n  zeros,\n} from '@ethereumjs/util';\nimport BN from 'bn.js';\nimport { stripHexPrefix } from 'ethjs-util';\n\nimport { normalize } from './utils';\n\n//\n// Methods borrowed and somewhat adapted from ethereumjs-abi@0.6.8:\n// https://npmfs.com/package/ethereumjs-abi/0.6.8/lib/index.js\n//\n\n/**\n * Packs non-standard encoded values packed according to their respective type in types in a buffer.\n *\n * @param types - Array of types of each value to encode.\n * @param values - Array of values to encode.\n * @returns A buffer containing the packed values.\n */\nexport function solidityPack(types: string[], values: any[]): Buffer {\n  if (types.length !== values.length) {\n    throw new Error('Number of types are not matching the values');\n  }\n\n  const ret: Buffer[] = [];\n\n  for (let i = 0; i < types.length; i++) {\n    const type = elementaryName(types[i]);\n    const value = values[i];\n    ret.push(solidityHexValue(type, value, null));\n  }\n\n  return Buffer.concat(ret);\n}\n\n/**\n * Checks if a value is an array (represented as a string).\n *\n * @param type - The value to check whether it is an array.\n * @returns A boolean indicating whether the passed value is an array.\n */\nfunction isArray(type: string): boolean {\n  return type.endsWith(']');\n}\n\n/**\n * Parse array type for packing solidity values.\n *\n * @param type - A string that may be an array to parse.\n * @returns A parsed value from the array.\n */\nfunction parseTypeArray(type: string): 'dynamic' | number | null {\n  const tmp = type.match(/(.*)\\[(.*?)\\]$/u);\n  if (tmp) {\n    return tmp[2] === '' ? 'dynamic' : parseInt(tmp[2], 10);\n  }\n  return null;\n}\n\n/**\n * Parse N from type<N>.\n *\n * @param type - Value to parse.\n * @returns Parsed value.\n */\nfunction parseTypeN(type: string): number {\n  const match = /^\\D+(\\d+)$/u.exec(type);\n  if (match === null) {\n    throw new Error(`Invalid parseTypeN input \"${type}\".`);\n  }\n  return parseInt(match[1], 10);\n}\n\n/**\n * Parse a number for determining a solidity hexvalue.\n *\n * @param arg - Number to parse.\n * @returns Parsed value.\n */\nexport function parseNumber(arg: string | number | BN): BN {\n  const type = typeof arg;\n  if (type === 'string') {\n    if (isHexPrefixed(arg as string)) {\n      return new BN(stripHexPrefix(arg), 16);\n    }\n    return new BN(arg, 10);\n  } else if (type === 'number') {\n    return new BN(arg);\n  } else if (\n    (arg && Object.prototype.hasOwnProperty.call(arg, 'toArray')) ||\n    BN.isBN(arg)\n  ) {\n    return arg as BN;\n  }\n  throw new Error('Argument is not a number');\n}\n\n/**\n * Get solidity hex value from type, value and bitsize inputs for packing these values in a buffer.\n *\n * @param type - The type of the value to encode.\n * @param value - The value to encode.\n * @param bitsize - The bitsize of the value to encode.\n * @returns The encoded soldity hex value.\n */\nfunction solidityHexValue(\n  type: string,\n  value: ToBufferInputTypes,\n  bitsize: number | null,\n): Buffer {\n  // pass in bitsize = null if use default bitsize\n  if (isArray(type)) {\n    const subType = type.replace(/\\[.*?\\]/u, '');\n    if (!isArray(subType)) {\n      const arraySize = parseTypeArray(type);\n      if (\n        arraySize !== 'dynamic' &&\n        arraySize !== 0 &&\n        arraySize !== null &&\n        (value as any[]).length > arraySize\n      ) {\n        throw new Error(`Elements exceed array size: ${arraySize}`);\n      }\n    }\n    const arrayValues = (value as number[]).map((v) =>\n      solidityHexValue(subType, v, 256),\n    );\n    return Buffer.concat(arrayValues);\n  } else if (type === 'bytes') {\n    return value as Buffer;\n  } else if (type === 'string') {\n    return Buffer.from(value as string, 'utf8');\n  } else if (type === 'bool') {\n    // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n    bitsize = bitsize || 8;\n    const padding = Array(bitsize / 4).join('0');\n    return Buffer.from(value ? `${padding}1` : `${padding}0`, 'hex');\n  } else if (type === 'address') {\n    let bytesize = 20;\n    if (bitsize) {\n      bytesize = bitsize / 8;\n    }\n    return setLengthLeft(toBuffer(value), bytesize);\n  } else if (type.startsWith('bytes')) {\n    const size = parseTypeN(type);\n    if (size < 1 || size > 32) {\n      throw new Error(`Invalid bytes<N> width: ${size}`);\n    }\n\n    if (typeof value === 'number') {\n      value = normalize(value);\n    }\n    return setLengthRight(toBuffer(value), size);\n  } else if (type.startsWith('uint')) {\n    const size = parseTypeN(type);\n    if (size % 8 || size < 8 || size > 256) {\n      throw new Error(`Invalid uint<N> width: ${size}`);\n    }\n\n    const num = parseNumber(value as number);\n    if (num.bitLength() > size) {\n      throw new Error(\n        `Supplied uint exceeds width: ${size} vs ${num.bitLength()}`,\n      );\n    }\n\n    // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n    bitsize = bitsize || size;\n    return num.toArrayLike(Buffer, 'be', bitsize / 8);\n  } else if (type.startsWith('int')) {\n    const size = parseTypeN(type);\n    if (size % 8 || size < 8 || size > 256) {\n      throw new Error(`Invalid int<N> width: ${size}`);\n    }\n\n    const num = parseNumber(value as number);\n    if (num.bitLength() > size) {\n      throw new Error(\n        `Supplied int exceeds width: ${size} vs ${num.bitLength()}`,\n      );\n    }\n\n    // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n    bitsize = bitsize || size;\n    return num.toTwos(size).toArrayLike(Buffer, 'be', bitsize / 8);\n  }\n  // FIXME: support all other types\n  throw new Error(`Unsupported or invalid type: ${JSON.stringify(type)}`);\n}\n\n/**\n * Gets the correct solidity type name.\n *\n * @param name - The type name for which we want the corresponding solidity type name.\n * @returns The solidity type name for the input value.\n */\nfunction elementaryName(name: string): string {\n  if (name.startsWith('int[')) {\n    return `int256${name.slice(3)}`;\n  } else if (name === 'int') {\n    return 'int256';\n  } else if (name.startsWith('uint[')) {\n    return `uint256${name.slice(4)}`;\n  } else if (name === 'uint') {\n    return 'uint256';\n  } else if (name.startsWith('fixed[')) {\n    return `fixed128x128${name.slice(5)}`;\n  } else if (name === 'fixed') {\n    return 'fixed128x128';\n  } else if (name.startsWith('ufixed[')) {\n    return `ufixed128x128${name.slice(6)}`;\n  } else if (name === 'ufixed') {\n    return 'ufixed128x128';\n  }\n  return name;\n}\n\n/**\n * @param types\n * @param values\n */\nexport function rawEncode(\n  types: string[],\n  values: (BN | Buffer | string | number | string[] | number[])[],\n): Buffer {\n  const output: Buffer[] = [];\n  const data: Buffer[] = [];\n\n  let headLength = 0;\n\n  types.forEach((type) => {\n    if (isArray(type)) {\n      const size: number | 'dynamic' | null = parseTypeArray(type);\n      // eslint-disable-next-line no-negated-condition\n      if (size !== 'dynamic' && size !== null) {\n        headLength += 32 * size;\n      } else {\n        headLength += 32;\n      }\n    } else {\n      headLength += 32;\n    }\n  });\n\n  for (let i = 0; i < types.length; i++) {\n    const type = elementaryName(types[i]);\n    const value = values[i];\n    const cur = encodeSingle(type, value);\n\n    // Use the head/tail method for storing dynamic data\n    if (isDynamic(type)) {\n      output.push(encodeSingle('uint256', headLength));\n      data.push(cur);\n      headLength += cur.length;\n    } else {\n      output.push(cur);\n    }\n  }\n\n  return Buffer.concat(output.concat(data));\n}\n\n// Encodes a single item (can be dynamic array)\n// @returns: Buffer\n/**\n * @param type\n * @param arg\n */\nfunction encodeSingle(\n  type: string,\n  arg: BN | Buffer | string | number | string[] | number[],\n): Buffer {\n  if (type === 'address') {\n    return encodeSingle('uint160', parseNumber(arg as string));\n  } else if (type === 'bool') {\n    return encodeSingle('uint8', arg ? 1 : 0);\n  } else if (type === 'string') {\n    return encodeSingle('bytes', Buffer.from(arg as string, 'utf8'));\n  } else if (isArray(type)) {\n    // this part handles fixed-length ([2]) and variable length ([]) arrays\n    // NOTE: we catch here all calls to arrays, that simplifies the rest\n    if (typeof (arg as any).length === 'undefined') {\n      throw new Error('Not an array?');\n    }\n    const size = parseTypeArray(type);\n    if (\n      size !== 'dynamic' &&\n      size !== 0 &&\n      size !== null &&\n      (arg as any).length > size\n    ) {\n      throw new Error(`Elements exceed array size: ${size}`);\n    }\n    const ret: Buffer[] = [];\n    type = type.slice(0, type.lastIndexOf('['));\n    if (typeof arg === 'string') {\n      arg = JSON.parse(arg);\n    }\n\n    // TODO: if this is array, should do for-of\n    for (const i in arg as Record<string, any>) {\n      if (Object.prototype.hasOwnProperty.call(arg, i)) {\n        ret.push(encodeSingle(type, arg[i]));\n      }\n    }\n\n    if (size === 'dynamic') {\n      const length = encodeSingle('uint256', (arg as any).length);\n      ret.unshift(length);\n    }\n    return Buffer.concat(ret);\n  } else if (type === 'bytes') {\n    arg = Buffer.from(arg as Buffer);\n\n    let ret = Buffer.concat([encodeSingle('uint256', arg.length), arg]);\n\n    if (arg.length % 32 !== 0) {\n      ret = Buffer.concat([ret, zeros(32 - (arg.length % 32))]);\n    }\n\n    return ret;\n  } else if (type.startsWith('bytes')) {\n    const size = parseTypeN(type);\n    if (size < 1 || size > 32) {\n      throw new Error(`Invalid bytes<N> width: ${size}`);\n    }\n\n    // TODO: fix types here\n    const nArg = typeof arg === 'number' ? normalize(arg) : arg;\n    return setLengthRight(toBuffer(nArg as string), 32);\n  } else if (type.startsWith('uint')) {\n    const size = parseTypeN(type);\n    if (size % 8 || size < 8 || size > 256) {\n      throw new Error(`Invalid uint<N> width: ${size}`);\n    }\n\n    const num = parseNumber(arg as string);\n    if (num.bitLength() > size) {\n      throw new Error(\n        `Supplied uint exceeds width: ${size} vs ${num.bitLength()}`,\n      );\n    }\n\n    if (num.isNeg()) {\n      throw new Error('Supplied uint is negative');\n    }\n\n    return num.toArrayLike(Buffer, 'be', 32);\n  } else if (type.startsWith('int')) {\n    const size = parseTypeN(type);\n    if (size % 8 || size < 8 || size > 256) {\n      throw new Error(`Invalid int<N> width: ${size}`);\n    }\n\n    const num = parseNumber(arg as string);\n    if (num.bitLength() > size) {\n      throw new Error(\n        `Supplied int exceeds width: ${size} vs ${num.bitLength()}`,\n      );\n    }\n\n    return num.toTwos(256).toArrayLike(Buffer, 'be', 32);\n  } else if (type.startsWith('ufixed')) {\n    const size = parseTypeNxM(type);\n\n    const num = parseNumber(arg as string);\n\n    if (num.isNeg()) {\n      throw new Error('Supplied ufixed is negative');\n    }\n\n    return encodeSingle('uint256', num.mul(new BN(2).pow(new BN(size[1]))));\n  } else if (type.startsWith('fixed')) {\n    const size = parseTypeNxM(type);\n\n    return encodeSingle(\n      'int256',\n      parseNumber(arg as string).mul(new BN(2).pow(new BN(size[1]))),\n    );\n  }\n\n  throw new Error(`Unsupported or invalid type: ${JSON.stringify(type)}`);\n}\n\n// Is a type dynamic?\n/**\n * @param type\n */\nfunction isDynamic(type: string): boolean {\n  // FIXME: handle all types? I don't think anything is missing now\n  return (\n    type === 'string' || type === 'bytes' || parseTypeArray(type) === 'dynamic'\n  );\n}\n\n// Parse N,M from type<N>x<M>\n/**\n * @param type\n */\nfunction parseTypeNxM(type: string): [number, number] {\n  const match = /^\\D+(\\d+)x(\\d+)$/u.exec(type);\n  if (match === null || match.length < 1) {\n    throw new Error(`Invalid parseTypeNxM input \"${type}\".`);\n  }\n  return [parseInt(match[1], 10), parseInt(match[2], 10)];\n}\n","export * from './personal-sign';\nexport * from './sign-typed-data';\nexport * from './encryption';\nexport { concatSig, normalize } from './utils';\n","import {\n  bufferToHex,\n  ecsign,\n  hashPersonalMessage,\n  publicToAddress,\n  toBuffer,\n  ToBufferInputTypes,\n} from '@ethereumjs/util';\n\nimport {\n  concatSig,\n  isNullish,\n  legacyToBuffer,\n  recoverPublicKey,\n} from './utils';\n\n/**\n * Create an Ethereum-specific signature for a message.\n *\n * This function is equivalent to the `eth_sign` Ethereum JSON-RPC method as specified in EIP-1417,\n * as well as the MetaMask's `personal_sign` method.\n *\n * @param options - The personal sign options.\n * @param options.privateKey - The key to sign with.\n * @param options.data - The hex data to sign.\n * @returns The '0x'-prefixed hex encoded signature.\n */\nexport function personalSign({\n  privateKey,\n  data,\n}: {\n  privateKey: Buffer;\n  data: ToBufferInputTypes;\n}): string {\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing privateKey parameter');\n  }\n\n  const message = legacyToBuffer(data);\n  const msgHash = hashPersonalMessage(message);\n  const sig = ecsign(msgHash, privateKey);\n  const serialized = concatSig(toBuffer(sig.v), sig.r, sig.s);\n  return serialized;\n}\n\n/**\n * Recover the address of the account used to create the given Ethereum signature. The message\n * must have been signed using the `personalSign` function, or an equivalent function.\n *\n * @param options - The signature recovery options.\n * @param options.data - The hex data that was signed.\n * @param options.signature - The '0x'-prefixed hex encoded message signature.\n * @returns The '0x'-prefixed hex encoded address of the message signer.\n */\nexport function recoverPersonalSignature({\n  data,\n  signature,\n}: {\n  data: ToBufferInputTypes;\n  signature: string;\n}): string {\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(signature)) {\n    throw new Error('Missing signature parameter');\n  }\n\n  const publicKey = getPublicKeyFor(data, signature);\n  const sender = publicToAddress(publicKey);\n  const senderHex = bufferToHex(sender);\n  return senderHex;\n}\n\n/**\n * Recover the public key of the account used to create the given Ethereum signature. The message\n * must have been signed using the `personalSign` function, or an equivalent function.\n *\n * @param options - The public key recovery options.\n * @param options.data - The hex data that was signed.\n * @param options.signature - The '0x'-prefixed hex encoded message signature.\n * @returns The '0x'-prefixed hex encoded public key of the message signer.\n */\nexport function extractPublicKey({\n  data,\n  signature,\n}: {\n  data: ToBufferInputTypes;\n  signature: string;\n}): string {\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(signature)) {\n    throw new Error('Missing signature parameter');\n  }\n\n  const publicKey = getPublicKeyFor(data, signature);\n  return `0x${publicKey.toString('hex')}`;\n}\n\n/**\n * Get the public key for the given signature and message.\n *\n * @param message - The message that was signed.\n * @param signature - The '0x'-prefixed hex encoded message signature.\n * @returns The public key of the signer.\n */\nfunction getPublicKeyFor(\n  message: ToBufferInputTypes,\n  signature: string,\n): Buffer {\n  const messageHash = hashPersonalMessage(legacyToBuffer(message));\n  return recoverPublicKey(messageHash, signature);\n}\n","import {\n  arrToBufArr,\n  bufferToHex,\n  ecsign,\n  publicToAddress,\n  toBuffer,\n} from '@ethereumjs/util';\nimport { keccak256 } from 'ethereum-cryptography/keccak';\nimport { isHexString } from 'ethjs-util';\n\nimport { rawEncode, solidityPack } from './ethereumjs-abi-utils';\nimport {\n  concatSig,\n  isNullish,\n  legacyToBuffer,\n  recoverPublicKey,\n  numberToBuffer,\n} from './utils';\n\n/**\n * This is the message format used for `V1` of `signTypedData`.\n */\nexport type TypedDataV1 = TypedDataV1Field[];\n\n/**\n * This represents a single field in a `V1` `signTypedData` message.\n *\n * @property name - The name of the field.\n * @property type - The type of a field (must be a supported Solidity type).\n * @property value - The value of the field.\n */\nexport type TypedDataV1Field = {\n  name: string;\n  type: string;\n  value: any;\n};\n\n/**\n * Represents the version of `signTypedData` being used.\n *\n * V1 is based upon [an early version of EIP-712](https://github.com/ethereum/EIPs/pull/712/commits/21abe254fe0452d8583d5b132b1d7be87c0439ca)\n * that lacked some later security improvements, and should generally be neglected in favor of\n * later versions.\n *\n * V3 is based on EIP-712, except that arrays and recursive data structures are not supported.\n *\n * V4 is based on EIP-712, and includes full support of arrays and recursive data structures.\n */\nexport enum SignTypedDataVersion {\n  V1 = 'V1',\n  V3 = 'V3',\n  V4 = 'V4',\n}\n\nexport type MessageTypeProperty = {\n  name: string;\n  type: string;\n};\n\nexport type MessageTypes = {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  EIP712Domain: MessageTypeProperty[];\n  [additionalProperties: string]: MessageTypeProperty[];\n};\n\n/**\n * This is the message format used for `signTypeData`, for all versions\n * except `V1`.\n *\n * @template T - The custom types used by this message.\n * @property types - The custom types used by this message.\n * @property primaryType - The type of the message.\n * @property domain - Signing domain metadata. The signing domain is the intended context for the\n * signature (e.g. the dapp, protocol, etc. that it's intended for). This data is used to\n * construct the domain seperator of the message.\n * @property domain.name - The name of the signing domain.\n * @property domain.version - The current major version of the signing domain.\n * @property domain.chainId - The chain ID of the signing domain.\n * @property domain.verifyingContract - The address of the contract that can verify the signature.\n * @property domain.salt - A disambiguating salt for the protocol.\n * @property message - The message to be signed.\n */\nexport type TypedMessage<T extends MessageTypes> = {\n  types: T;\n  primaryType: keyof T;\n  domain: {\n    name?: string;\n    version?: string;\n    chainId?: number;\n    verifyingContract?: string;\n    salt?: ArrayBuffer;\n  };\n  message: Record<string, unknown>;\n};\n\nexport const TYPED_MESSAGE_SCHEMA = {\n  type: 'object',\n  properties: {\n    types: {\n      type: 'object',\n      additionalProperties: {\n        type: 'array',\n        items: {\n          type: 'object',\n          properties: {\n            name: { type: 'string' },\n            type: { type: 'string' },\n          },\n          required: ['name', 'type'],\n        },\n      },\n    },\n    primaryType: { type: 'string' },\n    domain: { type: 'object' },\n    message: { type: 'object' },\n  },\n  required: ['types', 'primaryType', 'domain', 'message'],\n};\n\n/**\n * Validate that the given value is a valid version string.\n *\n * @param version - The version value to validate.\n * @param allowedVersions - A list of allowed versions. If omitted, all versions are assumed to be\n * allowed.\n */\nfunction validateVersion(\n  version: SignTypedDataVersion,\n  allowedVersions?: SignTypedDataVersion[],\n) {\n  if (!Object.keys(SignTypedDataVersion).includes(version)) {\n    throw new Error(`Invalid version: '${version}'`);\n  } else if (allowedVersions && !allowedVersions.includes(version)) {\n    throw new Error(\n      `SignTypedDataVersion not allowed: '${version}'. Allowed versions are: ${allowedVersions.join(\n        ', ',\n      )}`,\n    );\n  }\n}\n\n/**\n * Encode a single field.\n *\n * @param types - All type definitions.\n * @param name - The name of the field to encode.\n * @param type - The type of the field being encoded.\n * @param value - The value to encode.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns Encoded representation of the field.\n */\nfunction encodeField(\n  types: Record<string, MessageTypeProperty[]>,\n  name: string,\n  type: string,\n  // TODO: constrain type on `value`\n  value: any,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): [type: string, value: Buffer | string] {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  if (types[type] !== undefined) {\n    return [\n      'bytes32',\n      // TODO: return Buffer, remove string from return type\n      version === SignTypedDataVersion.V4 && value == null // eslint-disable-line no-eq-null\n        ? '0x0000000000000000000000000000000000000000000000000000000000000000'\n        : arrToBufArr(keccak256(encodeData(type, value, types, version))),\n    ];\n  }\n\n  if (value === undefined) {\n    throw new Error(`missing value for field ${name} of type ${type}`);\n  }\n\n  if (type === 'bytes') {\n    if (typeof value === 'number') {\n      value = numberToBuffer(value);\n    } else if (isHexString(value)) {\n      const prepend = value.length % 2 ? '0' : '';\n      value = Buffer.from(prepend + (value as string).slice(2), 'hex');\n    } else {\n      value = Buffer.from(value, 'utf8');\n    }\n    return ['bytes32', arrToBufArr(keccak256(value))];\n  }\n\n  if (type === 'string') {\n    if (typeof value === 'number') {\n      value = numberToBuffer(value);\n    } else {\n      value = Buffer.from(value ?? '', 'utf8');\n    }\n    return ['bytes32', arrToBufArr(keccak256(value))];\n  }\n\n  if (type.endsWith(']')) {\n    if (version === SignTypedDataVersion.V3) {\n      throw new Error(\n        'Arrays are unimplemented in encodeData; use V4 extension',\n      );\n    }\n    const parsedType = type.slice(0, type.lastIndexOf('['));\n    const typeValuePairs = value.map((item) =>\n      encodeField(types, name, parsedType, item, version),\n    );\n    return [\n      'bytes32',\n      arrToBufArr(\n        keccak256(\n          rawEncode(\n            typeValuePairs.map(([t]) => t),\n            typeValuePairs.map(([, v]) => v),\n          ),\n        ),\n      ),\n    ];\n  }\n\n  return [type, value];\n}\n\n/**\n * Encodes an object by encoding and concatenating each of its members.\n *\n * @param primaryType - The root type.\n * @param data - The object to encode.\n * @param types - Type definitions for all types included in the message.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns An encoded representation of an object.\n */\nfunction encodeData(\n  primaryType: string,\n  data: Record<string, unknown>,\n  types: Record<string, MessageTypeProperty[]>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  const encodedTypes = ['bytes32'];\n  const encodedValues: (Buffer | string)[] = [hashType(primaryType, types)];\n\n  for (const field of types[primaryType]) {\n    if (version === SignTypedDataVersion.V3 && data[field.name] === undefined) {\n      continue;\n    }\n    const [type, value] = encodeField(\n      types,\n      field.name,\n      field.type,\n      data[field.name],\n      version,\n    );\n    encodedTypes.push(type);\n    encodedValues.push(value);\n  }\n\n  return rawEncode(encodedTypes, encodedValues);\n}\n\n/**\n * Encodes the type of an object by encoding a comma delimited list of its members.\n *\n * @param primaryType - The root type to encode.\n * @param types - Type definitions for all types included in the message.\n * @returns An encoded representation of the primary type.\n */\nfunction encodeType(\n  primaryType: string,\n  types: Record<string, MessageTypeProperty[]>,\n): string {\n  let result = '';\n  const unsortedDeps = findTypeDependencies(primaryType, types);\n  unsortedDeps.delete(primaryType);\n\n  const deps = [primaryType, ...Array.from(unsortedDeps).sort()];\n  for (const type of deps) {\n    const children = types[type];\n    if (!children) {\n      throw new Error(`No type definition specified: ${type}`);\n    }\n\n    result += `${type}(${types[type]\n      .map(({ name, type: t }) => `${t} ${name}`)\n      .join(',')})`;\n  }\n\n  return result;\n}\n\n/**\n * Finds all types within a type definition object.\n *\n * @param primaryType - The root type.\n * @param types - Type definitions for all types included in the message.\n * @param results - The current set of accumulated types.\n * @returns The set of all types found in the type definition.\n */\nfunction findTypeDependencies(\n  primaryType: string,\n  types: Record<string, MessageTypeProperty[]>,\n  results: Set<string> = new Set(),\n): Set<string> {\n  if (typeof primaryType !== 'string') {\n    throw new Error(\n      `Invalid findTypeDependencies input ${JSON.stringify(primaryType)}`,\n    );\n  }\n  const match = primaryType.match(/^\\w*/u) as RegExpMatchArray;\n  [primaryType] = match;\n  if (results.has(primaryType) || types[primaryType] === undefined) {\n    return results;\n  }\n\n  results.add(primaryType);\n\n  for (const field of types[primaryType]) {\n    findTypeDependencies(field.type, types, results);\n  }\n  return results;\n}\n\n/**\n * Hashes an object.\n *\n * @param primaryType - The root type.\n * @param data - The object to hash.\n * @param types - Type definitions for all types included in the message.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the object.\n */\nfunction hashStruct(\n  primaryType: string,\n  data: Record<string, unknown>,\n  types: Record<string, MessageTypeProperty[]>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  const encoded = encodeData(primaryType, data, types, version);\n  const hashed = keccak256(encoded);\n  const buf = arrToBufArr(hashed);\n  return buf;\n}\n\n/**\n * Hashes the type of an object.\n *\n * @param primaryType - The root type to hash.\n * @param types - Type definitions for all types included in the message.\n * @returns The hash of the object type.\n */\nfunction hashType(\n  primaryType: string,\n  types: Record<string, MessageTypeProperty[]>,\n): Buffer {\n  const encodedHashType = Buffer.from(encodeType(primaryType, types), 'utf-8');\n  return arrToBufArr(keccak256(encodedHashType));\n}\n\n/**\n * Removes properties from a message object that are not defined per EIP-712.\n *\n * @param data - The typed message object.\n * @returns The typed message object with only allowed fields.\n */\nfunction sanitizeData<T extends MessageTypes>(\n  data: TypedMessage<T>,\n): TypedMessage<T> {\n  const sanitizedData: Partial<TypedMessage<T>> = {};\n  for (const key in TYPED_MESSAGE_SCHEMA.properties) {\n    if (data[key]) {\n      sanitizedData[key] = data[key];\n    }\n  }\n\n  if ('types' in sanitizedData) {\n    // TODO: Fix types\n    sanitizedData.types = { EIP712Domain: [], ...sanitizedData.types } as any;\n  }\n  return sanitizedData as Required<TypedMessage<T>>;\n}\n\n/**\n * Create a EIP-712 Domain Hash.\n * This hash is used at the top of the EIP-712 encoding.\n *\n * @param typedData - The typed message to hash.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the domain object.\n */\nfunction eip712DomainHash<T extends MessageTypes>(\n  typedData: TypedMessage<T>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  const sanitizedData = sanitizeData(typedData);\n  const { domain } = sanitizedData;\n  const domainType = { EIP712Domain: sanitizedData.types.EIP712Domain };\n  return hashStruct('EIP712Domain', domain, domainType, version);\n}\n\n/**\n * Hash a typed message according to EIP-712. The returned message starts with the EIP-712 prefix,\n * which is \"1901\", followed by the hash of the domain separator, then the data (if any).\n * The result is hashed again and returned.\n *\n * This function does not sign the message. The resulting hash must still be signed to create an\n * EIP-712 signature.\n *\n * @param typedData - The typed message to hash.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the typed message.\n */\nfunction eip712Hash<T extends MessageTypes>(\n  typedData: TypedMessage<T>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  const sanitizedData = sanitizeData(typedData);\n  const parts = [Buffer.from('1901', 'hex')];\n  parts.push(eip712DomainHash(typedData, version));\n\n  if (sanitizedData.primaryType !== 'EIP712Domain') {\n    parts.push(\n      hashStruct(\n        // TODO: Validate that this is a string, so this type cast can be removed.\n        sanitizedData.primaryType as string,\n        sanitizedData.message,\n        sanitizedData.types,\n        version,\n      ),\n    );\n  }\n  return arrToBufArr(keccak256(Buffer.concat(parts)));\n}\n\n/**\n * A collection of utility functions used for signing typed data.\n */\nexport const TypedDataUtils = {\n  encodeData,\n  encodeType,\n  findTypeDependencies,\n  hashStruct,\n  hashType,\n  sanitizeData,\n  eip712Hash,\n  eip712DomainHash,\n};\n\n/**\n * Generate the \"V1\" hash for the provided typed message.\n *\n * The hash will be generated in accordance with an earlier version of the EIP-712\n * specification. This hash is used in `signTypedData_v1`.\n *\n * @param typedData - The typed message.\n * @returns The '0x'-prefixed hex encoded hash representing the type of the provided message.\n */\nexport function typedSignatureHash(typedData: TypedDataV1Field[]): string {\n  const hashBuffer = _typedSignatureHash(typedData);\n  return bufferToHex(hashBuffer);\n}\n\n/**\n * Generate the \"V1\" hash for the provided typed message.\n *\n * The hash will be generated in accordance with an earlier version of the EIP-712\n * specification. This hash is used in `signTypedData_v1`.\n *\n * @param typedData - The typed message.\n * @returns The hash representing the type of the provided message.\n */\nfunction _typedSignatureHash(typedData: TypedDataV1): Buffer {\n  const error = new Error('Expect argument to be non-empty array');\n  if (\n    typeof typedData !== 'object' ||\n    !('length' in typedData) ||\n    !typedData.length\n  ) {\n    throw error;\n  }\n\n  const data = typedData.map(function (e) {\n    if (e.type !== 'bytes') {\n      return e.value;\n    }\n\n    return legacyToBuffer(e.value);\n  });\n  const types = typedData.map(function (e) {\n    return e.type;\n  });\n  const schema = typedData.map(function (e) {\n    if (!e.name) {\n      throw error;\n    }\n    return `${e.type} ${e.name}`;\n  });\n\n  return arrToBufArr(\n    keccak256(\n      solidityPack(\n        ['bytes32', 'bytes32'],\n        [\n          keccak256(\n            solidityPack(new Array(typedData.length).fill('string'), schema),\n          ),\n          keccak256(solidityPack(types, data)),\n        ],\n      ),\n    ),\n  );\n}\n\n/**\n * Sign typed data according to EIP-712. The signing differs based upon the `version`.\n *\n * V1 is based upon [an early version of EIP-712](https://github.com/ethereum/EIPs/pull/712/commits/21abe254fe0452d8583d5b132b1d7be87c0439ca)\n * that lacked some later security improvements, and should generally be neglected in favor of\n * later versions.\n *\n * V3 is based on [EIP-712](https://eips.ethereum.org/EIPS/eip-712), except that arrays and\n * recursive data structures are not supported.\n *\n * V4 is based on [EIP-712](https://eips.ethereum.org/EIPS/eip-712), and includes full support of\n * arrays and recursive data structures.\n *\n * @param options - The signing options.\n * @param options.privateKey - The private key to sign with.\n * @param options.data - The typed data to sign.\n * @param options.version - The signing version to use.\n * @returns The '0x'-prefixed hex encoded signature.\n */\nexport function signTypedData<\n  V extends SignTypedDataVersion,\n  T extends MessageTypes,\n>({\n  privateKey,\n  data,\n  version,\n}: {\n  privateKey: Buffer;\n  data: V extends 'V1' ? TypedDataV1 : TypedMessage<T>;\n  version: V;\n}): string {\n  validateVersion(version);\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing private key parameter');\n  }\n\n  const messageHash =\n    version === SignTypedDataVersion.V1\n      ? _typedSignatureHash(data as TypedDataV1)\n      : TypedDataUtils.eip712Hash(data as TypedMessage<T>, version);\n  const sig = ecsign(messageHash, privateKey);\n  return concatSig(toBuffer(sig.v), sig.r, sig.s);\n}\n\n/**\n * Recover the address of the account that created the given EIP-712\n * signature. The version provided must match the version used to\n * create the signature.\n *\n * @param options - The signature recovery options.\n * @param options.data - The typed data that was signed.\n * @param options.signature - The '0x-prefixed hex encoded message signature.\n * @param options.version - The signing version to use.\n * @returns The '0x'-prefixed hex address of the signer.\n */\nexport function recoverTypedSignature<\n  V extends SignTypedDataVersion,\n  T extends MessageTypes,\n>({\n  data,\n  signature,\n  version,\n}: {\n  data: V extends 'V1' ? TypedDataV1 : TypedMessage<T>;\n  signature: string;\n  version: V;\n}): string {\n  validateVersion(version);\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(signature)) {\n    throw new Error('Missing signature parameter');\n  }\n\n  const messageHash =\n    version === SignTypedDataVersion.V1\n      ? _typedSignatureHash(data as TypedDataV1)\n      : TypedDataUtils.eip712Hash(data as TypedMessage<T>, version);\n  const publicKey = recoverPublicKey(messageHash, signature);\n  const sender = publicToAddress(publicKey);\n  return bufferToHex(sender);\n}\n","import {\n  addHexPrefix,\n  bufferToHex,\n  bufferToInt,\n  ecrecover,\n  fromRpcSig,\n  fromSigned,\n  toBuffer,\n  ToBufferInputTypes,\n  toUnsigned,\n} from '@ethereumjs/util';\nimport { intToHex, isHexString, stripHexPrefix } from 'ethjs-util';\n\n/**\n * Pads the front of the given hex string with zeroes until it reaches the\n * target length. If the input string is already longer than or equal to the\n * target length, it is returned unmodified.\n *\n * If the input string is \"0x\"-prefixed or not a hex string, an error will be\n * thrown.\n *\n * @param hexString - The hexadecimal string to pad with zeroes.\n * @param targetLength - The target length of the hexadecimal string.\n * @returns The input string front-padded with zeroes, or the original string\n * if it was already greater than or equal to to the target length.\n */\nexport function padWithZeroes(hexString: string, targetLength: number): string {\n  if (hexString !== '' && !/^[a-f0-9]+$/iu.test(hexString)) {\n    throw new Error(\n      `Expected an unprefixed hex string. Received: ${hexString}`,\n    );\n  }\n\n  if (targetLength < 0) {\n    throw new Error(\n      `Expected a non-negative integer target length. Received: ${targetLength}`,\n    );\n  }\n\n  return String.prototype.padStart.call(hexString, targetLength, '0');\n}\n\n/**\n * Returns `true` if the given value is nullish.\n *\n * @param value - The value being checked.\n * @returns Whether the value is nullish.\n */\nexport function isNullish(value) {\n  return value === null || value === undefined;\n}\n\n/**\n * Convert a value to a Buffer. This function should be equivalent to the `toBuffer` function in\n * `ethereumjs-util@5.2.1`.\n *\n * @param value - The value to convert to a Buffer.\n * @returns The given value as a Buffer.\n */\nexport function legacyToBuffer(value: ToBufferInputTypes) {\n  return typeof value === 'string' && !isHexString(value)\n    ? Buffer.from(value)\n    : toBuffer(value);\n}\n\n/**\n * Concatenate an extended ECDSA signature into a single '0x'-prefixed hex string.\n *\n * @param v - The 'v' portion of the signature.\n * @param r - The 'r' portion of the signature.\n * @param s - The 's' portion of the signature.\n * @returns The concatenated ECDSA signature as a '0x'-prefixed string.\n */\nexport function concatSig(v: Buffer, r: Buffer, s: Buffer): string {\n  const rSig = fromSigned(r);\n  const sSig = fromSigned(s);\n  const vSig = bufferToInt(v);\n  const rStr = padWithZeroes(toUnsigned(rSig).toString('hex'), 64);\n  const sStr = padWithZeroes(toUnsigned(sSig).toString('hex'), 64);\n  const vStr = stripHexPrefix(intToHex(vSig));\n  return addHexPrefix(rStr.concat(sStr, vStr));\n}\n\n/**\n * Recover the public key from the given signature and message hash.\n *\n * @param messageHash - The hash of the signed message.\n * @param signature - The signature.\n * @returns The public key of the signer.\n */\nexport function recoverPublicKey(\n  messageHash: Buffer,\n  signature: string,\n): Buffer {\n  const sigParams = fromRpcSig(signature);\n  return ecrecover(messageHash, sigParams.v, sigParams.r, sigParams.s);\n}\n\n/**\n * Normalize the input to a lower-cased '0x'-prefixed hex string.\n *\n * @param input - The value to normalize.\n * @returns The normalized value.\n */\nexport function normalize(input: number | string): string | undefined {\n  if (!input) {\n    return undefined;\n  }\n\n  if (typeof input === 'number') {\n    if (input < 0) {\n      return '0x';\n    }\n    const buffer = toBuffer(input);\n    input = bufferToHex(buffer);\n  }\n\n  if (typeof input !== 'string') {\n    let msg = 'eth-sig-util.normalize() requires hex string or integer input.';\n    msg += ` received ${typeof input}: ${input as any as string}`;\n    throw new Error(msg);\n  }\n\n  return addHexPrefix(input.toLowerCase());\n}\n\n/**\n * Node's Buffer.from() method does not seem to buffer numbers correctly out of the box.\n * This helper method formats the number correct for Buffer.from to return correct buffer.\n *\n * @param num - The number to convert to buffer.\n * @returns The number in buffer form.\n */\nexport function numberToBuffer(num: number) {\n  const hexVal = num.toString(16);\n  const prepend = hexVal.length % 2 ? '0' : '';\n  return Buffer.from(prepend + hexVal, 'hex');\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","import type { MessageTypes, TypedDataV1, TypedMessage } from \"@metamask/eth-sig-util\";\nimport { createAsyncMiddleware, createScaffoldMiddleware, JRPCMiddleware, JRPCRequest, JRPCResponse } from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport type { MessageParams, TransactionParams, TypedMessageParams, WalletMiddlewareOptions } from \"./interfaces\";\n\nfunction resemblesAddress(str: string): boolean {\n  // hex prefix 2 + 20 bytes\n  return str.length === 2 + 20 * 2;\n}\n\nexport function createWalletMiddleware({\n  getAccounts,\n  getPrivateKey,\n  processDecryptMessage,\n  processEncryptionPublicKey,\n  processEthSignMessage,\n  processPersonalMessage,\n  processTransaction,\n  processSignTransaction,\n  processTypedMessage,\n  processTypedMessageV3,\n  processTypedMessageV4,\n}: WalletMiddlewareOptions): JRPCMiddleware<string, unknown> {\n  if (!getAccounts) {\n    throw new Error(\"opts.getAccounts is required\");\n  }\n\n  //\n  // utility\n  //\n\n  /**\n   * Validates the keyholder address, and returns a normalized (i.e. lowercase)\n   * copy of it.\n   *\n   * an error\n   */\n  async function validateAndNormalizeKeyholder(address: string, req: JRPCRequest<unknown>): Promise<string> {\n    if (typeof address === \"string\" && address.length > 0) {\n      // ensure address is included in provided accounts\n      const accounts: string[] = await getAccounts(req);\n      const normalizedAccounts: string[] = accounts.map((_address) => _address.toLowerCase());\n      const normalizedAddress: string = address.toLowerCase();\n\n      if (normalizedAccounts.includes(normalizedAddress)) {\n        return normalizedAddress;\n      }\n    }\n    throw ethErrors.rpc.invalidParams({\n      message: `Invalid parameters: must provide an Ethereum address.`,\n    });\n  }\n\n  //\n  // account lookups\n  //\n\n  async function lookupAccounts(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    res.result = await getAccounts(req);\n  }\n\n  async function lookupDefaultAccount(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    const accounts = await getAccounts(req);\n    res.result = accounts[0] || null;\n  }\n\n  //\n  // transaction signatures\n  //\n\n  async function sendTransaction(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTransaction) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const txParams: TransactionParams = (req.params as TransactionParams[])[0] || {\n      from: \"\",\n    };\n    txParams.from = await validateAndNormalizeKeyholder(txParams.from as string, req);\n    res.result = await processTransaction(txParams, req);\n  }\n\n  async function signTransaction(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processSignTransaction) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const txParams: TransactionParams = (req.params as TransactionParams[])[0] || {\n      from: \"\",\n    };\n    txParams.from = await validateAndNormalizeKeyholder(txParams.from as string, req);\n    res.result = await processSignTransaction(txParams, req);\n  }\n\n  //\n  // message signatures\n  //\n\n  async function ethSign(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processEthSignMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[0], req);\n    const message: string = (req.params as string[])[1];\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n    const msgParams: MessageParams<string> = {\n      ...extraParams,\n      from: address,\n      data: message,\n    };\n\n    res.result = await processEthSignMessage(msgParams, req);\n  }\n\n  async function signTypedData(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTypedMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const message: TypedDataV1 = (req.params as TypedDataV1[])[0];\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[1], req);\n    const version = \"V1\";\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n    const msgParams: MessageParams<TypedDataV1> = {\n      ...extraParams,\n      from: address,\n      data: message,\n    };\n\n    res.result = await processTypedMessage(msgParams, req, version);\n  }\n\n  async function signTypedDataV3(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTypedMessageV3) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[0], req);\n    const message: TypedMessage<MessageTypes> = (req.params as TypedMessage<MessageTypes>[])[1];\n    const version = \"V3\";\n    const msgParams: TypedMessageParams<TypedMessage<MessageTypes>> = {\n      data: message,\n      from: address,\n      version,\n    };\n\n    res.result = await processTypedMessageV3(msgParams, req, version);\n  }\n\n  async function signTypedDataV4(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTypedMessageV4) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[0], req);\n    const message: TypedMessage<MessageTypes> = (req.params as TypedMessage<MessageTypes>[])[1];\n    const version = \"V4\";\n    const msgParams: TypedMessageParams<TypedMessage<MessageTypes>> = {\n      data: message,\n      from: address,\n      version,\n    };\n\n    res.result = await processTypedMessageV4(msgParams, req, version);\n  }\n\n  async function personalSign(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processPersonalMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    // process normally\n    const firstParam: string = (req.params as string[])[0];\n    const secondParam: string = (req.params as string[])[1];\n    // non-standard \"extraParams\" to be appended to our \"msgParams\" obj\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n\n    // We initially incorrectly ordered these parameters.\n    // To gracefully respect users who adopted this API early,\n    // we are currently gracefully recovering from the wrong param order\n    // when it is clearly identifiable.\n    //\n    // That means when the first param is definitely an address,\n    // and the second param is definitely not, but is hex.\n    let address: string, message: string;\n    if (resemblesAddress(firstParam) && !resemblesAddress(secondParam)) {\n      let warning = `The eth_personalSign method requires params ordered `;\n      warning += `[message, address]. This was previously handled incorrectly, `;\n      warning += `and has been corrected automatically. `;\n      warning += `Please switch this param order for smooth behavior in the future.`;\n      (res as any).warning = warning;\n\n      address = firstParam;\n      message = secondParam;\n    } else {\n      message = firstParam;\n      address = secondParam;\n    }\n    address = await validateAndNormalizeKeyholder(address, req);\n\n    const msgParams: MessageParams<string> = {\n      ...extraParams,\n      from: address,\n      data: message,\n    };\n\n    // eslint-disable-next-line require-atomic-updates\n    res.result = await processPersonalMessage(msgParams, req);\n  }\n\n  async function encryptionPublicKey(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processEncryptionPublicKey) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string)[0], req);\n\n    res.result = await processEncryptionPublicKey(address, req);\n  }\n\n  async function decryptMessage(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processDecryptMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const ciphertext: string = (req.params as string)[0];\n    const address: string = await validateAndNormalizeKeyholder((req.params as string)[1], req);\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n    const msgParams: MessageParams<string> = {\n      ...extraParams,\n      from: address,\n      data: ciphertext,\n    };\n\n    res.result = processDecryptMessage(msgParams, req);\n  }\n\n  async function fetchPrivateKey(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!getPrivateKey) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n    res.result = getPrivateKey(req);\n  }\n\n  return createScaffoldMiddleware({\n    // account lookups\n    eth_accounts: createAsyncMiddleware(lookupAccounts),\n    eth_private_key: createAsyncMiddleware(fetchPrivateKey),\n    private_key: createAsyncMiddleware(fetchPrivateKey),\n    eth_coinbase: createAsyncMiddleware(lookupDefaultAccount),\n    // tx signatures\n    eth_sendTransaction: createAsyncMiddleware(sendTransaction),\n    eth_signTransaction: createAsyncMiddleware(signTransaction),\n    // message signatures\n    eth_sign: createAsyncMiddleware(ethSign),\n    eth_signTypedData: createAsyncMiddleware(signTypedData),\n    eth_signTypedData_v3: createAsyncMiddleware(signTypedDataV3),\n    eth_signTypedData_v4: createAsyncMiddleware(signTypedDataV4),\n    personal_sign: createAsyncMiddleware(personalSign),\n    eth_getEncryptionPublicKey: createAsyncMiddleware(encryptionPublicKey),\n    eth_decrypt: createAsyncMiddleware(decryptMessage),\n  });\n}\n","import {\n  createAsyncMiddleware,\n  createScaffoldMiddleware,\n  JRPCMiddleware,\n  JRPCRequest,\n  JRPCResponse,\n  mergeMiddleware,\n} from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { AddEthereumChainParameter, IAccountHandlers, IChainSwitchHandlers, IProviderHandlers } from \"./interfaces\";\nimport { createWalletMiddleware } from \"./walletMidddleware\";\n\nexport function createEthMiddleware(providerHandlers: IProviderHandlers): JRPCMiddleware<unknown, unknown> {\n  const {\n    getAccounts,\n    getPrivateKey,\n    processTransaction,\n    processSignTransaction,\n    processEthSignMessage,\n    processTypedMessage,\n    processTypedMessageV3,\n    processTypedMessageV4,\n    processPersonalMessage,\n    processEncryptionPublicKey,\n    processDecryptMessage,\n  } = providerHandlers;\n  const ethMiddleware = mergeMiddleware([\n    createScaffoldMiddleware({\n      eth_syncing: false,\n    }),\n    createWalletMiddleware({\n      getAccounts,\n      getPrivateKey,\n      processTransaction,\n      processEthSignMessage,\n      processSignTransaction,\n      processTypedMessage,\n      processTypedMessageV3,\n      processTypedMessageV4,\n      processPersonalMessage,\n      processEncryptionPublicKey,\n      processDecryptMessage,\n    }),\n  ]);\n  return ethMiddleware;\n}\n\nexport function createChainSwitchMiddleware({ addChain, switchChain }: IChainSwitchHandlers): JRPCMiddleware<unknown, unknown> {\n  async function addNewChain(req: JRPCRequest<AddEthereumChainParameter[]>, res: JRPCResponse<unknown>): Promise<void> {\n    const chainParams = req.params?.length ? req.params[0] : undefined;\n    if (!chainParams) throw ethErrors.rpc.invalidParams(\"Missing chain params\");\n    if (!chainParams.chainId) throw ethErrors.rpc.invalidParams(\"Missing chainId in chainParams\");\n    if (!chainParams.rpcUrls || chainParams.rpcUrls.length === 0) throw ethErrors.rpc.invalidParams(\"Missing rpcUrls in chainParams\");\n    if (!chainParams.nativeCurrency) throw ethErrors.rpc.invalidParams(\"Missing nativeCurrency in chainParams\");\n\n    res.result = await addChain(chainParams);\n  }\n  async function updateChain(req: JRPCRequest<{ chainId: string }[]>, res: JRPCResponse<unknown>): Promise<void> {\n    const chainParams = req.params?.length ? req.params[0] : undefined;\n    if (!chainParams) throw ethErrors.rpc.invalidParams(\"Missing chainId\");\n    res.result = await switchChain(chainParams);\n  }\n\n  return createScaffoldMiddleware({\n    wallet_addEthereumChain: createAsyncMiddleware(addNewChain),\n    wallet_switchEthereumChain: createAsyncMiddleware(updateChain),\n  });\n}\n\n// #region account middlewares\nexport function createAccountMiddleware({ updatePrivatekey }: IAccountHandlers): JRPCMiddleware<unknown, unknown> {\n  async function updateAccount(req: JRPCRequest<{ privateKey: string }[]>, res: JRPCResponse<unknown>): Promise<void> {\n    const accountParams = req.params?.length ? req.params[0] : undefined;\n    if (!accountParams?.privateKey) throw ethErrors.rpc.invalidParams(\"Missing privateKey\");\n    res.result = await updatePrivatekey(accountParams);\n  }\n\n  return createScaffoldMiddleware({\n    wallet_updateAccount: createAsyncMiddleware(updateAccount),\n  });\n}\n\n// #endregion account middlewares\n","import { createFetchMiddleware } from \"@toruslabs/base-controllers\";\nimport { JRPCEngineEndCallback, JRPCEngineNextCallback, JRPCMiddleware, JRPCRequest, JRPCResponse, mergeMiddleware } from \"@toruslabs/openlogin-jrpc\";\nimport type { CustomChainConfig } from \"@web3auth/base\";\n\nexport function createChainIdMiddleware(chainId: string): JRPCMiddleware<unknown, unknown> {\n  return (req: JRPCRequest<unknown>, res: JRPCResponse<string>, next: JRPCEngineNextCallback, end: JRPCEngineEndCallback) => {\n    if (req.method === \"eth_chainId\") {\n      res.result = chainId;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createProviderConfigMiddleware(providerConfig: CustomChainConfig): JRPCMiddleware<unknown, unknown> {\n  return (req: JRPCRequest<unknown>, res: JRPCResponse<CustomChainConfig>, next: JRPCEngineNextCallback, end: JRPCEngineEndCallback) => {\n    if (req.method === \"eth_provider_config\") {\n      res.result = providerConfig;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createJsonRpcClient(providerConfig: CustomChainConfig): {\n  networkMiddleware: JRPCMiddleware<unknown, unknown>;\n  fetchMiddleware: JRPCMiddleware<unknown, unknown>;\n} {\n  const { chainId, rpcTarget } = providerConfig;\n  const fetchMiddleware = createFetchMiddleware({ rpcTarget });\n  const networkMiddleware = mergeMiddleware([createChainIdMiddleware(chainId), createProviderConfigMiddleware(providerConfig), fetchMiddleware]);\n  return { networkMiddleware, fetchMiddleware };\n}\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine } from \"@toruslabs/openlogin-jrpc\";\nimport type { IConnector } from \"@walletconnect/types\";\nimport { CHAIN_NAMESPACES, CustomChainConfig, getChainConfig, isHexStrict, log, WalletInitializationError, WalletLoginError } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { createEthMiddleware } from \"../../rpc/ethRpcMiddlewares\";\nimport { createJsonRpcClient } from \"../../rpc/jrpcClient\";\nimport { getProviderHandlers } from \"./walletConnectUtils\";\n\nexport interface WalletConnectProviderConfig extends BaseProviderConfig {\n  chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n}\n\nexport interface WalletConnectProviderState extends BaseProviderState {\n  accounts: string[];\n}\n\nexport class WalletConnectProvider extends BaseProvider<BaseProviderConfig, WalletConnectProviderState, IConnector> {\n  private connector: IConnector | null = null;\n\n  constructor({ config, state, connector }: { config: WalletConnectProviderConfig; state?: BaseProviderState; connector?: IConnector }) {\n    super({\n      config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.EIP155 }, skipLookupNetwork: !!config.skipLookupNetwork },\n      state: { ...(state || {}), chainId: \"loading\", accounts: [] },\n    });\n    this.connector = connector || null;\n  }\n\n  public static getProviderInstance = async (params: {\n    connector: IConnector;\n    chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n    skipLookupNetwork: boolean;\n  }): Promise<WalletConnectProvider> => {\n    const providerFactory = new WalletConnectProvider({ config: { chainConfig: params.chainConfig, skipLookupNetwork: params.skipLookupNetwork } });\n    await providerFactory.setupProvider(params.connector);\n    return providerFactory;\n  };\n\n  public async enable(): Promise<string[]> {\n    if (!this.connector)\n      throw ethErrors.provider.custom({ message: \"Connector is not initialized, pass wallet connect connector in constructor\", code: 4902 });\n    await this.setupProvider(this.connector);\n    return this._providerEngineProxy.request({ method: \"eth_accounts\" });\n  }\n\n  public async setupProvider(connector: IConnector): Promise<void> {\n    this.onConnectorStateUpdate(connector);\n    await this.setupEngine(connector);\n  }\n\n  public async switchChain({ chainId, addChain = true, lookup = true }: { chainId: string; addChain?: boolean; lookup?: boolean }): Promise<void> {\n    if (!this.connector)\n      throw ethErrors.provider.custom({ message: \"Connector is not initialized, pass wallet connect connector in constructor\", code: 4902 });\n    const currentChainConfig = this.getChainConfig(chainId);\n    this.update({\n      chainId: \"loading\",\n    });\n    const { rpcTarget, displayName } = currentChainConfig;\n    if (addChain) {\n      try {\n        await this.connector.sendCustomRequest({\n          method: \"wallet_addEthereumChain\",\n          params: [\n            {\n              chainId,\n              chainName: displayName,\n              rpcUrls: [rpcTarget],\n              blockExplorerUrls: [currentChainConfig.blockExplorer],\n              nativeCurrency: {\n                name: currentChainConfig.tickerName,\n                symbol: currentChainConfig.ticker,\n                decimals: currentChainConfig.decimals || 18,\n              },\n            },\n          ],\n        });\n      } catch (error) {\n        log.error(error);\n      }\n    }\n\n    try {\n      await this.connector.sendCustomRequest({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId }],\n      });\n    } catch (error) {\n      log.error(error);\n      // ignore this error because metamask & others return provider.result as null\n      // wallet connect thinks this is wrong\n      if (error.message !== \"JSON RPC response format is invalid\") {\n        throw error;\n      }\n    }\n\n    this.configure({ chainConfig: currentChainConfig });\n    if (lookup) await this.lookupNetwork(this.connector);\n  }\n\n  async addChain(chainConfig: CustomChainConfig): Promise<void> {\n    if (!this.connector) throw WalletInitializationError.notReady(\"Wallet adapter is not ready yet\");\n    const { rpcTarget, displayName } = chainConfig;\n\n    try {\n      await this.connector.sendCustomRequest({\n        method: \"wallet_addEthereumChain\",\n        params: [\n          {\n            chainId: chainConfig.chainId,\n            chainName: displayName,\n            rpcUrls: [rpcTarget],\n            blockExplorerUrls: [chainConfig.blockExplorer],\n            nativeCurrency: {\n              name: chainConfig.tickerName,\n              symbol: chainConfig.ticker,\n              decimals: chainConfig.decimals || 18,\n            },\n          },\n        ],\n      });\n      super.addChain(chainConfig);\n    } catch (error) {\n      log.error(error);\n      throw error;\n    }\n  }\n\n  protected async lookupNetwork(connector: IConnector): Promise<string> {\n    if (!connector.connected) throw WalletLoginError.notConnectedError(\"Wallet connect connector is not connected\");\n    if (!this.provider) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const { chainId } = this.config.chainConfig;\n    const connectedHexChainId = isHexStrict(connector.chainId.toString()) ? connector.chainId : `0x${connector.chainId.toString(16)}`;\n    if (chainId !== connectedHexChainId)\n      throw WalletInitializationError.rpcConnectionError(`Invalid network, net_version is: ${connectedHexChainId}, expected: ${chainId}`);\n\n    this.provider.emit(\"connect\", { chainId });\n    this.provider.emit(\"chainChanged\", this.state.chainId);\n    return connectedHexChainId;\n  }\n\n  private async setupEngine(connector: IConnector): Promise<void> {\n    const providerHandlers = getProviderHandlers({ connector });\n    this.update({\n      accounts: connector.accounts || [],\n    });\n    const ethMiddleware = createEthMiddleware(providerHandlers);\n    const engine = new JRPCEngine();\n    const { networkMiddleware } = createJsonRpcClient(this.config.chainConfig as CustomChainConfig);\n    engine.push(ethMiddleware);\n    engine.push(networkMiddleware);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    if (!this.config.skipLookupNetwork) await this.lookupNetwork(connector);\n  }\n\n  private async onConnectorStateUpdate(connector: IConnector) {\n    connector.on(\"session_update\", async (error: Error | null, payload) => {\n      if (!this.provider) throw WalletLoginError.notConnectedError(\"Wallet connect connector is not connected\");\n      if (error) {\n        this.provider.emit(\"error\", error);\n        return;\n      }\n      const { accounts, chainId: connectedChainId, rpcUrl }: { accounts?: string[]; chainId?: number; rpcUrl?: string } = payload.params[0];\n      // Check if accounts changed and trigger event\n      if (accounts?.length && this.state.accounts[0] !== accounts[0]) {\n        this.update({\n          accounts,\n        });\n        // await this.setupEngine(connector);\n        this.provider.emit(\"accountsChanged\", accounts);\n      }\n      const connectedHexChainId = `0x${connectedChainId.toString(16)}`;\n      // Check if chainId changed and trigger event\n      if (connectedChainId && this.state.chainId !== connectedHexChainId) {\n        const maybeConfig = getChainConfig(CHAIN_NAMESPACES.EIP155, connectedChainId) || {};\n        // Handle rpcUrl update\n        this.configure({\n          chainConfig: { ...maybeConfig, chainId: connectedHexChainId, rpcTarget: rpcUrl, chainNamespace: CHAIN_NAMESPACES.EIP155 },\n        });\n        await this.setupEngine(connector);\n      }\n    });\n  }\n}\n","import { MessageTypes, TypedDataV1, TypedMessage } from \"@metamask/eth-sig-util\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport type { IConnector, ITxData } from \"@walletconnect/types\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IProviderHandlers, MessageParams, TransactionParams, TypedMessageParams } from \"../../rpc/interfaces\";\n\nexport function getProviderHandlers({ connector }: { connector: IConnector }): IProviderHandlers {\n  return {\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getAccounts: async (_: JRPCRequest<unknown>) => {\n      const { accounts } = connector;\n      if (accounts && accounts.length) {\n        return accounts;\n      }\n      throw new Error(\"Failed to get accounts\");\n    },\n    processTransaction: async (txParams: TransactionParams, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.sendTransaction(txParams as ITxData);\n      return result;\n    },\n    processSignTransaction: async (txParams: TransactionParams, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.signTransaction(txParams as ITxData);\n      return result;\n    },\n    processEthSignMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.signMessage([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processPersonalMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.signPersonalMessage([msgParams.data, msgParams.from]);\n      return result;\n    },\n    processTypedMessage: async (msgParams: MessageParams<TypedDataV1>, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.signTypedData([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processTypedMessageV3: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>): Promise<string> => {\n      const result = await connector.signTypedData([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processTypedMessageV4: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>): Promise<string> => {\n      const result = await connector.signTypedData([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processEncryptionPublicKey: async (_: string): Promise<string> => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    processDecryptMessage: (_: MessageParams<string>): string => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n  };\n}\n","import { stripHexPrefix } from \"@ethereumjs/util\";\nimport BigNumber from \"bignumber.js\";\n\ntype DenominationType = \"WEI\" | \"GWEI\" | \"ETH\";\ntype NumericBaseType = \"hex\" | \"dec\";\n\ntype ConverterInput = {\n  value: string | BigNumber;\n  fromNumericBase: NumericBaseType;\n  fromDenomination?: DenominationType;\n  toNumericBase?: NumericBaseType;\n  toDenomination?: DenominationType;\n  numberOfDecimals?: number;\n};\n// Big Number Constants\nconst BIG_NUMBER_WEI_MULTIPLIER = new BigNumber(\"1e18\");\nconst BIG_NUMBER_GWEI_MULTIPLIER = new BigNumber(\"1e9\");\nconst BIG_NUMBER_ETH_MULTIPLIER = new BigNumber(\"1\");\n\n// Setter Maps\nconst toBigNumber: Record<NumericBaseType, (n: string | BigNumber) => BigNumber> = {\n  hex: (n: string | BigNumber) => (typeof n === \"string\" ? new BigNumber(stripHexPrefix(n), 16) : new BigNumber(n, 16)),\n  dec: (n: string | BigNumber) => new BigNumber(n, 10),\n};\nconst toNormalizedDenomination: Record<string, (n: BigNumber) => BigNumber> = {\n  WEI: (bigNumber) => bigNumber.div(BIG_NUMBER_WEI_MULTIPLIER),\n  GWEI: (bigNumber) => bigNumber.div(BIG_NUMBER_GWEI_MULTIPLIER),\n  ETH: (bigNumber) => bigNumber.div(BIG_NUMBER_ETH_MULTIPLIER),\n};\nconst toSpecifiedDenomination: Record<string, (n: BigNumber) => BigNumber> = {\n  WEI: (bigNumber) => bigNumber.times(BIG_NUMBER_WEI_MULTIPLIER).dp(0, BigNumber.ROUND_HALF_UP),\n  GWEI: (bigNumber) => bigNumber.times(BIG_NUMBER_GWEI_MULTIPLIER).dp(9, BigNumber.ROUND_HALF_UP),\n  ETH: (bigNumber) => bigNumber.times(BIG_NUMBER_ETH_MULTIPLIER).dp(9, BigNumber.ROUND_HALF_UP),\n};\nconst baseChange: Record<string, (n: BigNumber) => string> = {\n  hex: (n) => n.toString(16),\n  dec: (n) => new BigNumber(n).toString(10),\n};\n\nconst converter = (params: ConverterInput): string | BigNumber => {\n  const { value, fromNumericBase, fromDenomination, toNumericBase, toDenomination, numberOfDecimals } = params;\n  let convertedValue: string | BigNumber = toBigNumber[fromNumericBase](value);\n\n  if (fromDenomination) {\n    convertedValue = toNormalizedDenomination[fromDenomination](convertedValue as BigNumber);\n  }\n\n  if (toDenomination) {\n    convertedValue = toSpecifiedDenomination[toDenomination](convertedValue as BigNumber);\n  }\n\n  if (numberOfDecimals) {\n    convertedValue = (convertedValue as BigNumber).dp(numberOfDecimals, BigNumber.ROUND_HALF_DOWN);\n  }\n\n  if (toNumericBase) {\n    convertedValue = baseChange[toNumericBase](convertedValue);\n  }\n  return convertedValue;\n};\n\nconst conversionUtil = (\n  value: string | BigNumber,\n  { fromNumericBase = \"hex\", toNumericBase, fromDenomination, toDenomination, numberOfDecimals }: Partial<ConverterInput>\n): BigNumber | string => {\n  return converter({\n    fromNumericBase,\n    toNumericBase,\n    fromDenomination,\n    toDenomination,\n    numberOfDecimals,\n    value: value || \"0\",\n  });\n};\n\nfunction decGWEIToHexWEI(decGWEI: string | BigNumber): string {\n  return conversionUtil(decGWEI, {\n    fromNumericBase: \"dec\",\n    toNumericBase: \"hex\",\n    fromDenomination: \"GWEI\",\n    toDenomination: \"WEI\",\n  }) as string;\n}\n\nfunction hexWEIToDecGWEI(decGWEI: string | BigNumber): string {\n  return conversionUtil(decGWEI, {\n    fromNumericBase: \"hex\",\n    toNumericBase: \"dec\",\n    fromDenomination: \"WEI\",\n    toDenomination: \"GWEI\",\n  }) as string;\n}\n\nexport { conversionUtil, decGWEIToHexWEI, hexWEIToDecGWEI };\n","import { isValidAddress } from \"@ethereumjs/util\";\nimport { SignTypedDataVersion, TYPED_MESSAGE_SCHEMA, TypedDataV1Field, typedSignatureHash } from \"@metamask/eth-sig-util\";\nimport { get } from \"@toruslabs/http-helpers\";\nimport { isHexStrict } from \"@web3auth/base\";\nimport assert from \"assert\";\nimport { BigNumber } from \"bignumber.js\";\nimport { ethErrors } from \"eth-rpc-errors\";\nimport jsonschema from \"jsonschema\";\n\nimport { TypedMessageParams } from \"../../../rpc/interfaces\";\nimport { decGWEIToHexWEI, hexWEIToDecGWEI } from \"../../converter\";\nimport { EIP1159GasData, LegacyGasData } from \"./interfaces\";\n\nexport function normalizeGWEIDecimalNumbers(n: string | BigNumber): string {\n  const numberAsWEIHex = decGWEIToHexWEI(n);\n  const numberAsGWEI = hexWEIToDecGWEI(numberAsWEIHex);\n  return numberAsGWEI;\n}\n\nexport async function fetchEip1159GasEstimates(url: string): Promise<EIP1159GasData> {\n  const estimates = await get<EIP1159GasData>(url);\n  const normalizedEstimates = {\n    ...estimates,\n    estimatedBaseFee: normalizeGWEIDecimalNumbers(estimates.estimatedBaseFee),\n    low: {\n      ...estimates.low,\n      suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(estimates.low.suggestedMaxPriorityFeePerGas),\n      suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(estimates.low.suggestedMaxFeePerGas),\n    },\n    medium: {\n      ...estimates.medium,\n      suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(estimates.medium.suggestedMaxPriorityFeePerGas),\n      suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(estimates.medium.suggestedMaxFeePerGas),\n    },\n    high: {\n      ...estimates.high,\n      suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(estimates.high.suggestedMaxPriorityFeePerGas),\n      suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(estimates.high.suggestedMaxFeePerGas),\n    },\n  };\n  return normalizedEstimates;\n}\n\n/**\n * Hit the legacy MetaSwaps gasPrices estimate api and return the low, medium\n * high values from that API.\n */\nexport async function fetchLegacyGasPriceEstimates(url: string): Promise<LegacyGasData> {\n  const result = await get<{\n    SafeGasPrice: string;\n    ProposeGasPrice: string;\n    FastGasPrice: string;\n  }>(url, {\n    referrer: url,\n    referrerPolicy: \"no-referrer-when-downgrade\",\n    method: \"GET\",\n    mode: \"cors\",\n  });\n  return {\n    low: result.SafeGasPrice,\n    medium: result.ProposeGasPrice,\n    high: result.FastGasPrice,\n  };\n}\n\nexport const validateTypedMessageParams = (parameters: TypedMessageParams<unknown>, activeChainId: number) => {\n  try {\n    assert.ok(parameters && typeof parameters === \"object\", \"Params must be an object.\");\n    assert.ok(\"data\" in parameters, 'Params must include a \"data\" field.');\n    assert.ok(\"from\" in parameters, 'Params must include a \"from\" field.');\n    assert.ok(\n      typeof parameters.from === \"string\" && isValidAddress(parameters.from),\n      '\"from\" field must be a valid, lowercase, hexadecimal Ethereum address string.'\n    );\n    let data = null;\n    let chainId = null;\n    switch ((parameters as TypedMessageParams<unknown>).version) {\n      case SignTypedDataVersion.V1:\n        if (typeof parameters.data === \"string\") {\n          assert.doesNotThrow(() => {\n            data = JSON.parse(parameters.data as string);\n          }, '\"data\" must be a valid JSON string.');\n        } else {\n          // for backward compatiblity we validate for both string and object type.\n          data = parameters.data;\n        }\n        assert.ok(Array.isArray(data as unknown), \"params.data must be an array.\");\n        assert.doesNotThrow(() => {\n          typedSignatureHash(data as TypedDataV1Field[]);\n        }, \"Signing data must be valid EIP-712 typed data.\");\n        break;\n      case SignTypedDataVersion.V3:\n      case SignTypedDataVersion.V4:\n        if (typeof parameters.data === \"string\") {\n          assert.doesNotThrow(() => {\n            data = JSON.parse(parameters.data as string);\n          }, '\"data\" must be a valid JSON string.');\n        } else {\n          // for backward compatiblity we validate for both string and object type.\n          data = parameters.data;\n        }\n\n        assert.ok(data.primaryType in data.types, `Primary type of \"${data.primaryType}\" has no type definition.`);\n        const validation = jsonschema.validate(data, TYPED_MESSAGE_SCHEMA.properties);\n        assert.strictEqual(validation.errors.length, 0, \"Signing data must conform to EIP-712 schema. See https://git.io/fNtcx.\");\n        chainId = data.domain?.chainId;\n        if (chainId) {\n          assert.ok(!Number.isNaN(activeChainId), `Cannot sign messages for chainId \"${chainId}\", because Web3Auth is switching networks.`);\n          if (typeof chainId === \"string\") {\n            chainId = Number.parseInt(chainId, isHexStrict(chainId) ? 16 : 10);\n          }\n          assert.strictEqual(chainId, activeChainId, `Provided chainId \"${chainId}\" must match the active chainId \"${activeChainId}\"`);\n        }\n        break;\n      default:\n        assert.fail(`Unknown typed data version \"${(parameters as TypedMessageParams<unknown>).version}\"`);\n    }\n  } catch (error) {\n    throw ethErrors.rpc.invalidInput({\n      message: error?.message,\n    });\n  }\n};\n","import { TransactionFactory } from \"@ethereumjs/tx\";\nimport { privateToAddress, stripHexPrefix } from \"@ethereumjs/util\";\nimport {\n  decrypt,\n  EthEncryptedData,\n  getEncryptionPublicKey,\n  MessageTypes,\n  personalSign,\n  signTypedData,\n  SignTypedDataVersion,\n  TypedDataV1,\n  TypedMessage,\n} from \"@metamask/eth-sig-util\";\nimport { SafeEventEmitterProvider, signMessage } from \"@toruslabs/base-controllers\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { isHexStrict, log } from \"@web3auth/base\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IProviderHandlers, MessageParams, TransactionParams, TypedMessageParams } from \"../../rpc/interfaces\";\nimport { TransactionFormatter } from \"./TransactionFormatter\";\nimport { validateTypedMessageParams } from \"./TransactionFormatter/utils\";\n\nasync function signTx(txParams: TransactionParams & { gas?: string }, privKey: string, txFormatter: TransactionFormatter): Promise<Buffer> {\n  const finalTxParams = await txFormatter.formatTransaction(txParams);\n  const common = await txFormatter.getCommonConfiguration();\n  const unsignedEthTx = TransactionFactory.fromTxData(finalTxParams, {\n    common,\n  });\n  const signedTx = unsignedEthTx.sign(Buffer.from(privKey, \"hex\")).serialize();\n  return signedTx;\n}\n\nexport function getProviderHandlers({\n  txFormatter,\n  privKey,\n  getProviderEngineProxy,\n}: {\n  txFormatter: TransactionFormatter;\n  privKey: string;\n  getProviderEngineProxy: () => SafeEventEmitterProvider | null;\n}): IProviderHandlers {\n  return {\n    getAccounts: async (_: JRPCRequest<unknown>) => [`0x${privateToAddress(Buffer.from(privKey, \"hex\")).toString(\"hex\")}`],\n    getPrivateKey: async (_: JRPCRequest<unknown>) => privKey,\n    processTransaction: async (txParams: TransactionParams & { gas?: string }, _: JRPCRequest<unknown>): Promise<string> => {\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const signedTx = await signTx(txParams, privKey, txFormatter);\n      const txHash = await providerEngineProxy.request<string[], string>({\n        method: \"eth_sendRawTransaction\",\n        params: [\"0x\".concat(signedTx.toString(\"hex\"))],\n      });\n      return txHash;\n    },\n    processSignTransaction: async (txParams: TransactionParams & { gas?: string }, _: JRPCRequest<unknown>): Promise<string> => {\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const signedTx = await signTx(txParams, privKey, txFormatter);\n      return `0x${signedTx.toString(\"hex\")}`;\n    },\n    processEthSignMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const rawMessageSig = signMessage(privKey, msgParams.data);\n      return rawMessageSig;\n    },\n    processPersonalMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const sig = personalSign({ privateKey: privKeyBuffer, data: msgParams.data });\n      return sig;\n    },\n    processTypedMessage: async (msgParams: MessageParams<TypedDataV1>, _: JRPCRequest<unknown>): Promise<string> => {\n      log.debug(\"processTypedMessage\", msgParams);\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const chainId = await providerEngineProxy.request<unknown, string>({ method: \"eth_chainId\" });\n      const finalChainId = Number.parseInt(chainId, isHexStrict(chainId) ? 16 : 10);\n      const params = {\n        ...msgParams,\n        version: SignTypedDataVersion.V1,\n      };\n      validateTypedMessageParams(params, finalChainId);\n      const data = typeof params.data === \"string\" ? JSON.parse(params.data) : params.data;\n      const sig = signTypedData({ privateKey: privKeyBuffer, data, version: SignTypedDataVersion.V1 });\n      return sig;\n    },\n    processTypedMessageV3: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>, _: JRPCRequest<unknown>): Promise<string> => {\n      log.debug(\"processTypedMessageV3\", msgParams);\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const chainId = await providerEngineProxy.request<unknown, string>({ method: \"eth_chainId\" });\n      const finalChainId = Number.parseInt(chainId, isHexStrict(chainId) ? 16 : 10);\n      validateTypedMessageParams(msgParams, finalChainId);\n      const data = typeof msgParams.data === \"string\" ? JSON.parse(msgParams.data) : msgParams.data;\n      const sig = signTypedData({ privateKey: privKeyBuffer, data, version: SignTypedDataVersion.V3 });\n      return sig;\n    },\n    processTypedMessageV4: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>, _: JRPCRequest<unknown>): Promise<string> => {\n      log.debug(\"processTypedMessageV4\", msgParams);\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const chainId = await providerEngineProxy.request<unknown, string>({ method: \"eth_chainId\" });\n      const finalChainId = Number.parseInt(chainId, isHexStrict(chainId) ? 16 : 10);\n      validateTypedMessageParams(msgParams, finalChainId);\n      const data = typeof msgParams.data === \"string\" ? JSON.parse(msgParams.data) : msgParams.data;\n      const sig = signTypedData({ privateKey: privKeyBuffer, data, version: SignTypedDataVersion.V4 });\n      return sig;\n    },\n    processEncryptionPublicKey: async (address: string, _: JRPCRequest<unknown>): Promise<string> => {\n      log.info(\"processEncryptionPublicKey\", address);\n      return getEncryptionPublicKey(privKey);\n    },\n    processDecryptMessage: (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): string => {\n      log.info(\"processDecryptMessage\", msgParams);\n      const stripped = stripHexPrefix(msgParams.data);\n      const buff = Buffer.from(stripped, \"hex\");\n      const decrypted = decrypt({ encryptedData: JSON.parse(buff.toString(\"utf8\")) as EthEncryptedData, privateKey: privKey });\n      return decrypted;\n    },\n  };\n}\n","import { addHexPrefix, stripHexPrefix } from \"@ethereumjs/util\";\nimport { BigNumber } from \"bignumber.js\";\nimport BN from \"bn.js\";\n\nexport function bnLessThan(a, b) {\n  if (a === null || a === undefined || b === null || b === undefined) {\n    return null;\n  }\n  return new BigNumber(a, 10).lt(b, 10);\n}\n\nexport function bnToHex(inputBn: BN) {\n  return addHexPrefix(inputBn.toString(16));\n}\n\nexport function hexToBn(inputHex: string): BN {\n  if (BN.isBN(inputHex)) return inputHex;\n  return new BN(stripHexPrefix(inputHex), 16);\n}\n\nexport function BnMultiplyByFraction(targetBN: BN, numerator: number | string, denominator: number | string): BN {\n  const numberBN = new BN(numerator);\n  const denomBN = new BN(denominator);\n  return targetBN.mul(numberBN).div(denomBN);\n}\n","export const LegacyGasAPIEndpoint = \"https://gas-api.metaswap.codefi.network/networks/<chain_id>/gasPrices\";\nexport const EIP1559APIEndpoint = \"https://gas-api.metaswap.codefi.network/networks/<chain_id>/suggestedGasFees\";\nexport const TRANSACTION_ENVELOPE_TYPES = {\n  LEGACY: \"0x0\",\n  ACCESS_LIST: \"0x1\",\n  FEE_MARKET: \"0x2\",\n};\n\nexport const TRANSACTION_TYPES = {\n  SENT_ETHER: \"sentEther\",\n  CONTRACT_INTERACTION: \"contractInteraction\",\n  DEPLOY_CONTRACT: \"contractDeployment\",\n  STANDARD_TRANSACTION: \"transaction\",\n};\n\nexport const GAS_ESTIMATE_TYPES = {\n  FEE_MARKET: \"fee-market\",\n  LEGACY: \"legacy\",\n  ETH_GASPRICE: \"eth_gasPrice\",\n  NONE: \"none\",\n};\n","import { Common, Hardfork } from \"@ethereumjs/common\";\nimport { addHexPrefix, stripHexPrefix } from \"@ethereumjs/util\";\nimport { Block } from \"@toruslabs/base-controllers\";\nimport { CustomChainConfig, log, SafeEventEmitterProvider } from \"@web3auth/base\";\n\nimport { TransactionParams } from \"../../../rpc/interfaces\";\nimport { decGWEIToHexWEI, hexWEIToDecGWEI } from \"../../converter\";\nimport { bnLessThan, BnMultiplyByFraction, bnToHex, hexToBn } from \"../../utils\";\nimport { EIP1559APIEndpoint, GAS_ESTIMATE_TYPES, LegacyGasAPIEndpoint, TRANSACTION_ENVELOPE_TYPES, TRANSACTION_TYPES } from \"./constants\";\nimport { EIP1159GasData, FallbackGasData, GasData, LegacyGasData, TxType } from \"./interfaces\";\nimport { fetchEip1159GasEstimates, fetchLegacyGasPriceEstimates } from \"./utils\";\n\nexport class TransactionFormatter {\n  private chainConfig: CustomChainConfig | null = null;\n\n  private getProviderEngineProxy: () => SafeEventEmitterProvider;\n\n  private isEIP1559Compatible = false;\n\n  constructor({ getProviderEngineProxy }: { getProviderEngineProxy: () => SafeEventEmitterProvider }) {\n    this.getProviderEngineProxy = getProviderEngineProxy;\n  }\n\n  get providerProxy() {\n    return this.getProviderEngineProxy();\n  }\n\n  async init(): Promise<void> {\n    this.chainConfig = (await this.providerProxy.request<CustomChainConfig>({ method: \"eth_provider_config\", params: [] })) as CustomChainConfig;\n    this.isEIP1559Compatible = await this.getEIP1559Compatibility();\n  }\n\n  async getCommonConfiguration(): Promise<Common> {\n    if (!this.chainConfig) throw new Error(\"Chain config not initialized\");\n    const { displayName: name, chainId } = this.chainConfig;\n    const hardfork = this.isEIP1559Compatible ? Hardfork.London : Hardfork.Berlin;\n    const customChainParams = {\n      name,\n      chainId: chainId === \"loading\" ? 0 : Number.parseInt(chainId, 16),\n      networkId: chainId === \"loading\" ? 0 : Number.parseInt(chainId, 16),\n      defaultHardfork: hardfork,\n    };\n    return Common.custom(customChainParams);\n  }\n\n  async formatTransaction(txParams: TransactionParams & { gas?: string }): Promise<TransactionParams & { gas?: string }> {\n    if (!this.chainConfig) throw new Error(\"Chain config not initialized\");\n\n    const clonedTxParams = {\n      ...txParams,\n    };\n\n    if (clonedTxParams.nonce === undefined)\n      clonedTxParams.nonce = (await this.providerProxy.request<number>({\n        method: \"eth_getTransactionCount\",\n        params: [txParams.from, \"latest\"],\n      })) as number;\n\n    if (!this.isEIP1559Compatible && clonedTxParams.gasPrice) {\n      if (clonedTxParams.maxFeePerGas) delete clonedTxParams.maxFeePerGas;\n      if (clonedTxParams.maxPriorityFeePerGas) delete clonedTxParams.maxPriorityFeePerGas;\n      // if gas is not provided explicitly, estimate it.\n      if (!clonedTxParams.gas) {\n        const defaultGasLimit = await this.getDefaultGasLimit(clonedTxParams);\n        if (defaultGasLimit) {\n          clonedTxParams.gasLimit = defaultGasLimit;\n        }\n      } else {\n        clonedTxParams.gasLimit = clonedTxParams.gas;\n      }\n      return clonedTxParams;\n    }\n\n    if (!clonedTxParams.gas) {\n      const defaultGasLimit = await this.getDefaultGasLimit(clonedTxParams);\n      if (defaultGasLimit) {\n        clonedTxParams.gasLimit = defaultGasLimit;\n      }\n    } else {\n      clonedTxParams.gasLimit = clonedTxParams.gas;\n    }\n\n    const {\n      gasPrice: defaultGasPrice,\n      maxFeePerGas: defaultMaxFeePerGas,\n      maxPriorityFeePerGas: defaultMaxPriorityFeePerGas,\n    } = await this.getDefaultGasFees(clonedTxParams);\n\n    if (this.isEIP1559Compatible) {\n      // If the dapp has suggested a gas price, but no maxFeePerGas or maxPriorityFeePerGas\n      //  then we set maxFeePerGas and maxPriorityFeePerGas to the suggested gasPrice.\n      if (clonedTxParams.gasPrice && !clonedTxParams.maxFeePerGas && !clonedTxParams.maxPriorityFeePerGas) {\n        clonedTxParams.maxFeePerGas = clonedTxParams.gasPrice;\n\n        clonedTxParams.maxPriorityFeePerGas = bnLessThan(\n          typeof defaultMaxPriorityFeePerGas === \"string\" ? stripHexPrefix(defaultMaxPriorityFeePerGas) : defaultMaxPriorityFeePerGas,\n          typeof clonedTxParams.gasPrice === \"string\" ? stripHexPrefix(clonedTxParams.gasPrice) : clonedTxParams.gasPrice\n        )\n          ? defaultMaxPriorityFeePerGas\n          : clonedTxParams.gasPrice;\n      } else {\n        if (defaultMaxFeePerGas && !clonedTxParams.maxFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxFeePerGas, then we set maxFeePerGas\n          // with the one returned by the gasFeeController, if that is available.\n          clonedTxParams.maxFeePerGas = defaultMaxFeePerGas;\n        }\n\n        if (defaultMaxPriorityFeePerGas && !clonedTxParams.maxPriorityFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxPriorityFeePerGas, then we set maxPriorityFeePerGas\n          // with the one returned by the gasFeeController, if that is available.\n          clonedTxParams.maxPriorityFeePerGas = defaultMaxPriorityFeePerGas;\n        }\n\n        if (defaultGasPrice && !clonedTxParams.maxFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxFeePerGas, and no maxFeePerGas is available\n          // then we set maxFeePerGas to the defaultGasPrice, assuming it is\n          // available.\n          clonedTxParams.maxFeePerGas = defaultGasPrice;\n        }\n\n        if (clonedTxParams.maxFeePerGas && !clonedTxParams.maxPriorityFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxPriorityFeePerGas, and no maxPriorityFeePerGas is\n          // available  then we set maxPriorityFeePerGas to\n          // clonedTxParams.maxFeePerGas, which will either be the gasPrice from the controller, the maxFeePerGas\n          // set by the dapp, or the maxFeePerGas from the controller.\n          clonedTxParams.maxPriorityFeePerGas = clonedTxParams.maxFeePerGas;\n        }\n      }\n\n      // We remove the gasPrice param entirely when on an eip1559 compatible network\n\n      delete clonedTxParams.gasPrice;\n    } else {\n      // We ensure that maxFeePerGas and maxPriorityFeePerGas are not in the transaction params\n      // when not on a EIP1559 compatible network\n\n      delete clonedTxParams.maxPriorityFeePerGas;\n      delete clonedTxParams.maxFeePerGas;\n    }\n\n    // If we have gotten to this point, and none of gasPrice, maxPriorityFeePerGas or maxFeePerGas are\n    // set on txParams, it means that either we are on a non-EIP1559 network and the dapp didn't suggest\n    // a gas price, or we are on an EIP1559 network, and none of gasPrice, maxPriorityFeePerGas or maxFeePerGas\n    // were available from either the dapp or the network.\n    if (defaultGasPrice && !clonedTxParams.gasPrice && !clonedTxParams.maxPriorityFeePerGas && !clonedTxParams.maxFeePerGas) {\n      clonedTxParams.gasPrice = defaultGasPrice as never;\n    }\n\n    clonedTxParams.type = this.isEIP1559Compatible ? TRANSACTION_ENVELOPE_TYPES.FEE_MARKET : TRANSACTION_ENVELOPE_TYPES.LEGACY;\n    clonedTxParams.chainId = this.chainConfig.chainId;\n    return clonedTxParams;\n  }\n\n  private async fetchEthGasPriceEstimate(): Promise<{ gasPrice: string }> {\n    const gasPrice = (await this.providerProxy.request<string>({ method: \"eth_gasPrice\", params: [] })) as string;\n    return {\n      gasPrice: hexWEIToDecGWEI(gasPrice).toString(),\n    };\n  }\n\n  private async getEIP1559Compatibility(): Promise<boolean> {\n    const latestBlock = await this.providerProxy.request<Block>({ method: \"eth_getBlockByNumber\", params: [\"latest\", false] });\n    const supportsEIP1559 = latestBlock && latestBlock.baseFeePerGas !== undefined;\n\n    return !!supportsEIP1559;\n  }\n\n  private async fetchGasFeeEstimateData(): Promise<GasData> {\n    if (!this.chainConfig) throw new Error(\"Chain config not initialized\");\n    const isLegacyGasAPICompatible = this.chainConfig.chainId === \"0x1\";\n\n    const chainId = Number.parseInt(this.chainConfig.chainId, 16);\n\n    let gasData: GasData;\n\n    try {\n      if (this.isEIP1559Compatible) {\n        // TODO: kovan is not working due to a bug in metamask api\n        const estimates = await fetchEip1159GasEstimates(EIP1559APIEndpoint.replace(\"<chain_id>\", `${chainId}`));\n        gasData = {\n          gasFeeEstimates: estimates,\n          gasEstimateType: GAS_ESTIMATE_TYPES.FEE_MARKET,\n        };\n      } else if (isLegacyGasAPICompatible) {\n        const estimates = await fetchLegacyGasPriceEstimates(LegacyGasAPIEndpoint.replace(\"<chain_id>\", `${chainId}`));\n        gasData = {\n          gasFeeEstimates: estimates,\n          gasEstimateType: GAS_ESTIMATE_TYPES.LEGACY,\n        };\n      } else {\n        throw new Error(\"Main gas fee/price estimation failed. Use fallback\");\n      }\n    } catch (e: unknown) {\n      try {\n        const estimates = await this.fetchEthGasPriceEstimate();\n        gasData = {\n          gasFeeEstimates: estimates,\n          gasEstimateType: GAS_ESTIMATE_TYPES.ETH_GASPRICE,\n        };\n      } catch (error: unknown) {\n        throw new Error(`Gas fee/price estimation failed. Message: ${(error as Error).message}`);\n      }\n    }\n    return gasData;\n  }\n\n  private async getDefaultGasFees(\n    txParams: TransactionParams & { gas?: string }\n  ): Promise<{ gasPrice?: string; maxFeePerGas?: string; maxPriorityFeePerGas?: string }> {\n    if ((!this.isEIP1559Compatible && txParams.gasPrice) || (this.isEIP1559Compatible && txParams.maxFeePerGas && txParams.maxPriorityFeePerGas)) {\n      return {};\n    }\n\n    try {\n      const { gasFeeEstimates, gasEstimateType } = await this.fetchGasFeeEstimateData();\n      if (this.isEIP1559Compatible && gasEstimateType === GAS_ESTIMATE_TYPES.FEE_MARKET) {\n        const { medium: { suggestedMaxPriorityFeePerGas, suggestedMaxFeePerGas } = {} } = gasFeeEstimates as EIP1159GasData;\n\n        if (suggestedMaxPriorityFeePerGas && suggestedMaxFeePerGas) {\n          return {\n            maxFeePerGas: addHexPrefix(decGWEIToHexWEI(suggestedMaxFeePerGas)),\n            maxPriorityFeePerGas: addHexPrefix(decGWEIToHexWEI(suggestedMaxPriorityFeePerGas)),\n          };\n        }\n      } else if (gasEstimateType === GAS_ESTIMATE_TYPES.LEGACY) {\n        // The LEGACY type includes low, medium and high estimates of\n        // gas price values.\n        return {\n          gasPrice: addHexPrefix(decGWEIToHexWEI((gasFeeEstimates as LegacyGasData).medium)),\n        };\n      } else if (gasEstimateType === GAS_ESTIMATE_TYPES.ETH_GASPRICE) {\n        // The ETH_GASPRICE type just includes a single gas price property,\n        // which we can assume was retrieved from eth_gasPrice\n        return {\n          gasPrice: addHexPrefix(decGWEIToHexWEI((gasFeeEstimates as FallbackGasData).gasPrice)),\n        };\n      }\n    } catch (error) {\n      log.error(error);\n    }\n\n    const { gasPrice } = await this.fetchEthGasPriceEstimate();\n\n    return { gasPrice: addHexPrefix(decGWEIToHexWEI(gasPrice)) };\n  }\n\n  private async estimateTxGas(txMeta: TransactionParams): Promise<string> {\n    const txParams = { ...txMeta };\n\n    // `eth_estimateGas` can fail if the user has insufficient balance for the\n    // value being sent, or for the gas cost. We don't want to check their\n    // balance here, we just want the gas estimate. The gas price is removed\n    // to skip those balance checks. We check balance elsewhere. We also delete\n    // maxFeePerGas and maxPriorityFeePerGas to support EIP-1559 txs.\n    delete txParams.gasPrice;\n    delete txParams.maxFeePerGas;\n    delete txParams.maxPriorityFeePerGas;\n    const gas = (await this.providerProxy.request<string>({ method: \"eth_estimateGas\", params: [txParams] })) as string;\n    return gas;\n  }\n\n  private async analyzeGasUsage(txMeta: TransactionParams): Promise<{\n    blockGasLimit: string;\n    estimatedGasHex: string;\n  }> {\n    const block = (await this.providerProxy.request<Block>({ method: \"eth_getBlockByNumber\", params: [\"latest\", false] })) as Block;\n    // fallback to block gasLimit\n    const blockGasLimitBN = hexToBn(block.gasLimit as string);\n    const saferGasLimitBN = BnMultiplyByFraction(blockGasLimitBN, 19, 20);\n    let estimatedGasHex = bnToHex(saferGasLimitBN);\n\n    try {\n      estimatedGasHex = await this.estimateTxGas(txMeta);\n    } catch (error: unknown) {\n      log.warn(error);\n    }\n    return { blockGasLimit: block.gasLimit as string, estimatedGasHex };\n  }\n\n  private addGasBuffer(initialGasLimitHex: string, blockGasLimitHex: string, multiplier = 1.5): string {\n    const initialGasLimitBn = hexToBn(initialGasLimitHex);\n    const blockGasLimitBn = hexToBn(blockGasLimitHex);\n    const upperGasLimitBn = blockGasLimitBn.muln(0.9);\n    const bufferedGasLimitBn = initialGasLimitBn.muln(multiplier);\n\n    // if initialGasLimit is above blockGasLimit, dont modify it\n    if (initialGasLimitBn.gt(upperGasLimitBn)) return bnToHex(initialGasLimitBn);\n    // if bufferedGasLimit is below blockGasLimit, use bufferedGasLimit\n    if (bufferedGasLimitBn.lt(upperGasLimitBn)) return bnToHex(bufferedGasLimitBn);\n    // otherwise use blockGasLimit\n    return bnToHex(upperGasLimitBn);\n  }\n\n  private async determineTransactionCategory(txParameters: TransactionParams & { gas?: string }): Promise<{\n    transactionCategory: TxType | null;\n    code?: string;\n  }> {\n    const { data, to } = txParameters;\n    let code = \"\";\n\n    let txCategory: TxType | null;\n\n    if (data && !to) {\n      txCategory = TRANSACTION_TYPES.DEPLOY_CONTRACT;\n    } else {\n      try {\n        code = (await this.providerProxy.request<string>({ method: \"eth_getCode\", params: [to, \"latest\"] })) as string;\n      } catch (error) {\n        log.warn(error);\n      }\n      const codeIsEmpty = !code || code === \"0x\" || code === \"0x0\";\n\n      txCategory = codeIsEmpty ? TRANSACTION_TYPES.SENT_ETHER : TRANSACTION_TYPES.CONTRACT_INTERACTION;\n    }\n\n    return { transactionCategory: txCategory, code };\n  }\n\n  private async getDefaultGasLimit(txParams: TransactionParams & { gas?: string }): Promise<string> {\n    const { transactionCategory } = await this.determineTransactionCategory({ ...txParams });\n\n    if (txParams.gas) {\n      return txParams.gas;\n    }\n\n    if (txParams.to && transactionCategory === TRANSACTION_TYPES.SENT_ETHER) {\n      // if there's data in the params, but there's no contract code, it's not a valid transaction\n      if (txParams.data) {\n        throw Error(\"TxGasUtil - Trying to call a function on a non-contract address\");\n      }\n\n      const TWENTY_ONE_THOUSAND = 21_000;\n\n      // This is a standard ether simple send, gas requirement is exactly 21k\n      return addHexPrefix(TWENTY_ONE_THOUSAND.toString(16));\n    }\n\n    const { blockGasLimit, estimatedGasHex } = await this.analyzeGasUsage(txParams);\n\n    // add additional gas buffer to our estimation for safety\n    const gasLimit = this.addGasBuffer(addHexPrefix(estimatedGasHex), blockGasLimit as string);\n    return gasLimit;\n  }\n}\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine, JRPCMiddleware } from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, CustomChainConfig } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { createAccountMiddleware, createChainSwitchMiddleware, createEthMiddleware } from \"../../rpc/ethRpcMiddlewares\";\nimport { AddEthereumChainParameter, IAccountHandlers, IChainSwitchHandlers } from \"../../rpc/interfaces\";\nimport { createJsonRpcClient } from \"../../rpc/jrpcClient\";\nimport { getProviderHandlers } from \"./ethPrivatekeyUtils\";\nimport { TransactionFormatter } from \"./TransactionFormatter\";\n\nexport interface EthereumPrivKeyProviderConfig extends BaseProviderConfig {\n  chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n}\n\nexport interface EthereumPrivKeyProviderState extends BaseProviderState {\n  privateKey?: string;\n}\nexport class EthereumPrivateKeyProvider extends BaseProvider<BaseProviderConfig, EthereumPrivKeyProviderState, string> {\n  constructor({ config, state }: { config: EthereumPrivKeyProviderConfig; state?: EthereumPrivKeyProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.EIP155 } }, state });\n  }\n\n  public static getProviderInstance = async (params: {\n    privKey: string;\n    chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n  }): Promise<EthereumPrivateKeyProvider> => {\n    const providerFactory = new EthereumPrivateKeyProvider({ config: { chainConfig: params.chainConfig } });\n    await providerFactory.setupProvider(params.privKey);\n    return providerFactory;\n  };\n\n  public async enable(): Promise<string[]> {\n    if (!this.state.privateKey)\n      throw ethErrors.provider.custom({ message: \"Private key is not found in state, plz pass it in constructor state param\", code: 4902 });\n    await this.setupProvider(this.state.privateKey);\n    return this._providerEngineProxy.request({ method: \"eth_accounts\" });\n  }\n\n  public async setupProvider(privKey: string): Promise<void> {\n    const txFormatter = new TransactionFormatter({\n      getProviderEngineProxy: this.getProviderEngineProxy.bind(this),\n    });\n    const providerHandlers = getProviderHandlers({\n      txFormatter,\n      privKey,\n      getProviderEngineProxy: this.getProviderEngineProxy.bind(this),\n    });\n    const ethMiddleware = createEthMiddleware(providerHandlers);\n    const chainSwitchMiddleware = this.getChainSwitchMiddleware();\n    const engine = new JRPCEngine();\n    // Not a partial anymore because of checks in ctor\n    const { networkMiddleware } = createJsonRpcClient(this.config.chainConfig as CustomChainConfig);\n    engine.push(ethMiddleware);\n    engine.push(chainSwitchMiddleware);\n    engine.push(this.getAccountMiddleware());\n    engine.push(networkMiddleware);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await txFormatter.init();\n    await this.lookupNetwork();\n  }\n\n  public async updateAccount(params: { privateKey: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const existingKey = await this._providerEngineProxy.request<unknown, string>({ method: \"eth_private_key\" });\n    if (existingKey !== params.privateKey) {\n      await this.setupProvider(params.privateKey);\n      this._providerEngineProxy.emit(\"accountsChanged\", {\n        accounts: await this._providerEngineProxy.request<unknown, string[]>({ method: \"eth_accounts\" }),\n      });\n    }\n  }\n\n  public async switchChain(params: { chainId: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const chainConfig = this.getChainConfig(params.chainId);\n    this.update({\n      chainId: \"loading\",\n    });\n    this.configure({ chainConfig });\n    const privKey = await this._providerEngineProxy.request<unknown, string>({ method: \"eth_private_key\" });\n    await this.setupProvider(privKey);\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const { chainId } = this.config.chainConfig;\n    if (!chainId) throw ethErrors.rpc.invalidParams(\"chainId is required while lookupNetwork\");\n    const network = await this._providerEngineProxy.request<string[], string>({\n      method: \"net_version\",\n      params: [],\n    });\n\n    if (parseInt(chainId, 16) !== parseInt(network, 10)) throw ethErrors.provider.chainDisconnected(`Invalid network, net_version is: ${network}`);\n    if (this.state.chainId !== chainId) {\n      this._providerEngineProxy.emit(\"chainChanged\", chainId);\n      this._providerEngineProxy.emit(\"connect\", { chainId });\n    }\n    this.update({ chainId });\n    return network;\n  }\n\n  private getChainSwitchMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const chainSwitchHandlers: IChainSwitchHandlers = {\n      addChain: async (params: AddEthereumChainParameter): Promise<void> => {\n        const { chainId, chainName, rpcUrls, blockExplorerUrls, nativeCurrency } = params;\n        this.addChain({\n          chainNamespace: \"eip155\",\n          chainId,\n          ticker: nativeCurrency?.symbol || \"ETH\",\n          tickerName: nativeCurrency?.name || \"Ether\",\n          displayName: chainName,\n          rpcTarget: rpcUrls[0],\n          blockExplorer: blockExplorerUrls?.[0] || \"\",\n          decimals: nativeCurrency?.decimals || 18,\n        });\n      },\n      switchChain: async (params: { chainId: string }): Promise<void> => {\n        const { chainId } = params;\n        await this.switchChain({ chainId });\n      },\n    };\n    const chainSwitchMiddleware = createChainSwitchMiddleware(chainSwitchHandlers);\n    return chainSwitchMiddleware;\n  }\n\n  private getAccountMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const accountHandlers: IAccountHandlers = {\n      updatePrivatekey: async (params: { privateKey: string }): Promise<void> => {\n        const { privateKey } = params;\n        await this.updateAccount({ privateKey });\n      },\n    };\n    return createAccountMiddleware(accountHandlers);\n  }\n}\n","/*! crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*exported CRC32 */\nvar CRC32;\n(function (factory) {\n\t/*jshint ignore:start */\n\t/*eslint-disable */\n\tif(typeof DO_NOT_EXPORT_CRC === 'undefined') {\n\t\tif('object' === typeof exports) {\n\t\t\tfactory(exports);\n\t\t} else if ('function' === typeof define && define.amd) {\n\t\t\tdefine(function () {\n\t\t\t\tvar module = {};\n\t\t\t\tfactory(module);\n\t\t\t\treturn module;\n\t\t\t});\n\t\t} else {\n\t\t\tfactory(CRC32 = {});\n\t\t}\n\t} else {\n\t\tfactory(CRC32 = {});\n\t}\n\t/*eslint-enable */\n\t/*jshint ignore:end */\n}(function(CRC32) {\nCRC32.version = '1.2.2';\n/*global Int32Array */\nfunction signed_crc_table() {\n\tvar c = 0, table = new Array(256);\n\n\tfor(var n =0; n != 256; ++n){\n\t\tc = n;\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\ttable[n] = c;\n\t}\n\n\treturn typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;\n}\n\nvar T0 = signed_crc_table();\nfunction slice_by_16_tables(T) {\n\tvar c = 0, v = 0, n = 0, table = typeof Int32Array !== 'undefined' ? new Int32Array(4096) : new Array(4096) ;\n\n\tfor(n = 0; n != 256; ++n) table[n] = T[n];\n\tfor(n = 0; n != 256; ++n) {\n\t\tv = T[n];\n\t\tfor(c = 256 + n; c < 4096; c += 256) v = table[c] = (v >>> 8) ^ T[v & 0xFF];\n\t}\n\tvar out = [];\n\tfor(n = 1; n != 16; ++n) out[n - 1] = typeof Int32Array !== 'undefined' ? table.subarray(n * 256, n * 256 + 256) : table.slice(n * 256, n * 256 + 256);\n\treturn out;\n}\nvar TT = slice_by_16_tables(T0);\nvar T1 = TT[0],  T2 = TT[1],  T3 = TT[2],  T4 = TT[3],  T5 = TT[4];\nvar T6 = TT[5],  T7 = TT[6],  T8 = TT[7],  T9 = TT[8],  Ta = TT[9];\nvar Tb = TT[10], Tc = TT[11], Td = TT[12], Te = TT[13], Tf = TT[14];\nfunction crc32_bstr(bstr, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = bstr.length; i < L;) C = (C>>>8) ^ T0[(C^bstr.charCodeAt(i++))&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_buf(B, seed) {\n\tvar C = seed ^ -1, L = B.length - 15, i = 0;\n\tfor(; i < L;) C =\n\t\tTf[B[i++] ^ (C & 255)] ^\n\t\tTe[B[i++] ^ ((C >> 8) & 255)] ^\n\t\tTd[B[i++] ^ ((C >> 16) & 255)] ^\n\t\tTc[B[i++] ^ (C >>> 24)] ^\n\t\tTb[B[i++]] ^ Ta[B[i++]] ^ T9[B[i++]] ^ T8[B[i++]] ^\n\t\tT7[B[i++]] ^ T6[B[i++]] ^ T5[B[i++]] ^ T4[B[i++]] ^\n\t\tT3[B[i++]] ^ T2[B[i++]] ^ T1[B[i++]] ^ T0[B[i++]];\n\tL += 15;\n\twhile(i < L) C = (C>>>8) ^ T0[(C^B[i++])&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_str(str, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = str.length, c = 0, d = 0; i < L;) {\n\t\tc = str.charCodeAt(i++);\n\t\tif(c < 0x80) {\n\t\t\tC = (C>>>8) ^ T0[(C^c)&0xFF];\n\t\t} else if(c < 0x800) {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (192|((c>>6)&31)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t} else if(c >= 0xD800 && c < 0xE000) {\n\t\t\tc = (c&1023)+64; d = str.charCodeAt(i++)&1023;\n\t\t\tC = (C>>>8) ^ T0[(C ^ (240|((c>>8)&7)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>2)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((d>>6)&15)|((c&3)<<4)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(d&63)))&0xFF];\n\t\t} else {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (224|((c>>12)&15)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>6)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t}\n\t}\n\treturn ~C;\n}\nCRC32.table = T0;\n// $FlowIgnore\nCRC32.bstr = crc32_bstr;\n// $FlowIgnore\nCRC32.buf = crc32_buf;\n// $FlowIgnore\nCRC32.str = crc32_str;\n}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha256 = void 0;\nconst sha256_1 = require(\"@noble/hashes/sha256\");\nconst utils_1 = require(\"./utils\");\nexports.sha256 = (0, utils_1.wrapHash)(sha256_1.sha256);\n","'use strict';\n\nvar isHexPrefixed = require('is-hex-prefixed');\nvar stripHexPrefix = require('strip-hex-prefix');\n\n/**\n * Pads a `String` to have an even length\n * @param {String} value\n * @return {String} output\n */\nfunction padToEven(value) {\n  var a = value; // eslint-disable-line\n\n  if (typeof a !== 'string') {\n    throw new Error('[ethjs-util] while padding to even, value must be string, is currently ' + typeof a + ', while padToEven.');\n  }\n\n  if (a.length % 2) {\n    a = '0' + a;\n  }\n\n  return a;\n}\n\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\nfunction intToHex(i) {\n  var hex = i.toString(16); // eslint-disable-line\n\n  return '0x' + hex;\n}\n\n/**\n * Converts an `Number` to a `Buffer`\n * @param {Number} i\n * @return {Buffer}\n */\nfunction intToBuffer(i) {\n  var hex = intToHex(i);\n\n  return new Buffer(padToEven(hex.slice(2)), 'hex');\n}\n\n/**\n * Get the binary size of a string\n * @param {String} str\n * @return {Number}\n */\nfunction getBinarySize(str) {\n  if (typeof str !== 'string') {\n    throw new Error('[ethjs-util] while getting binary size, method getBinarySize requires input \\'str\\' to be type String, got \\'' + typeof str + '\\'.');\n  }\n\n  return Buffer.byteLength(str, 'utf8');\n}\n\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param {array} superset\n * @param {array} subset\n *\n * @returns {boolean}\n */\nfunction arrayContainsArray(superset, subset, some) {\n  if (Array.isArray(superset) !== true) {\n    throw new Error('[ethjs-util] method arrayContainsArray requires input \\'superset\\' to be an array got type \\'' + typeof superset + '\\'');\n  }\n  if (Array.isArray(subset) !== true) {\n    throw new Error('[ethjs-util] method arrayContainsArray requires input \\'subset\\' to be an array got type \\'' + typeof subset + '\\'');\n  }\n\n  return subset[Boolean(some) && 'some' || 'every'](function (value) {\n    return superset.indexOf(value) >= 0;\n  });\n}\n\n/**\n * Should be called to get utf8 from it's hex representation\n *\n * @method toUtf8\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\nfunction toUtf8(hex) {\n  var bufferValue = new Buffer(padToEven(stripHexPrefix(hex).replace(/^0+|0+$/g, '')), 'hex');\n\n  return bufferValue.toString('utf8');\n}\n\n/**\n * Should be called to get ascii from it's hex representation\n *\n * @method toAscii\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\nfunction toAscii(hex) {\n  var str = ''; // eslint-disable-line\n  var i = 0,\n      l = hex.length; // eslint-disable-line\n\n  if (hex.substring(0, 2) === '0x') {\n    i = 2;\n  }\n\n  for (; i < l; i += 2) {\n    var code = parseInt(hex.substr(i, 2), 16);\n    str += String.fromCharCode(code);\n  }\n\n  return str;\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @method fromUtf8\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\nfunction fromUtf8(stringValue) {\n  var str = new Buffer(stringValue, 'utf8');\n\n  return '0x' + padToEven(str.toString('hex')).replace(/^0+|0+$/g, '');\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @method fromAscii\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\nfunction fromAscii(stringValue) {\n  var hex = ''; // eslint-disable-line\n  for (var i = 0; i < stringValue.length; i++) {\n    // eslint-disable-line\n    var code = stringValue.charCodeAt(i);\n    var n = code.toString(16);\n    hex += n.length < 2 ? '0' + n : n;\n  }\n\n  return '0x' + hex;\n}\n\n/**\n * getKeys([{a: 1, b: 2}, {a: 3, b: 4}], 'a') => [1, 3]\n *\n * @method getKeys get specific key from inner object array of objects\n * @param {String} params\n * @param {String} key\n * @param {Boolean} allowEmpty\n * @returns {Array} output just a simple array of output keys\n */\nfunction getKeys(params, key, allowEmpty) {\n  if (!Array.isArray(params)) {\n    throw new Error('[ethjs-util] method getKeys expecting type Array as \\'params\\' input, got \\'' + typeof params + '\\'');\n  }\n  if (typeof key !== 'string') {\n    throw new Error('[ethjs-util] method getKeys expecting type String for input \\'key\\' got \\'' + typeof key + '\\'.');\n  }\n\n  var result = []; // eslint-disable-line\n\n  for (var i = 0; i < params.length; i++) {\n    // eslint-disable-line\n    var value = params[i][key]; // eslint-disable-line\n    if (allowEmpty && !value) {\n      value = '';\n    } else if (typeof value !== 'string') {\n      throw new Error('invalid abi');\n    }\n    result.push(value);\n  }\n\n  return result;\n}\n\n/**\n * Is the string a hex string.\n *\n * @method check if string is hex string of specific length\n * @param {String} value\n * @param {Number} length\n * @returns {Boolean} output the string is a hex string\n */\nfunction isHexString(value, length) {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n    return false;\n  }\n\n  if (length && value.length !== 2 + 2 * length) {\n    return false;\n  }\n\n  return true;\n}\n\nmodule.exports = {\n  arrayContainsArray: arrayContainsArray,\n  intToBuffer: intToBuffer,\n  getBinarySize: getBinarySize,\n  isHexPrefixed: isHexPrefixed,\n  stripHexPrefix: stripHexPrefix,\n  padToEven: padToEven,\n  intToHex: intToHex,\n  fromAscii: fromAscii,\n  fromUtf8: fromUtf8,\n  toAscii: toAscii,\n  toUtf8: toUtf8,\n  getKeys: getKeys,\n  isHexString: isHexString\n};","/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param {String} str the string input value\n * @return {Boolean} a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nmodule.exports = function isHexPrefixed(str) {\n  if (typeof str !== 'string') {\n    throw new Error(\"[is-hex-prefixed] value must be type 'string', is currently type \" + (typeof str) + \", while checking isHexPrefixed.\");\n  }\n\n  return str.slice(0, 2) === '0x';\n}\n","'use strict';\n\nvar helpers = require('./helpers');\n\n/** @type ValidatorResult */\nvar ValidatorResult = helpers.ValidatorResult;\n/** @type SchemaError */\nvar SchemaError = helpers.SchemaError;\n\nvar attribute = {};\n\nattribute.ignoreProperties = {\n  // informative properties\n  'id': true,\n  'default': true,\n  'description': true,\n  'title': true,\n  // arguments to other properties\n  'additionalItems': true,\n  'then': true,\n  'else': true,\n  // special-handled properties\n  '$schema': true,\n  '$ref': true,\n  'extends': true,\n};\n\n/**\n * @name validators\n */\nvar validators = attribute.validators = {};\n\n/**\n * Validates whether the instance if of a certain type\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {ValidatorResult|null}\n */\nvalidators.type = function validateType (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var types = Array.isArray(schema.type) ? schema.type : [schema.type];\n  if (!types.some(this.testType.bind(this, instance, schema, options, ctx))) {\n    var list = types.map(function (v) {\n      if(!v) return;\n      var id = v.$id || v.id;\n      return id ? ('<' + id + '>') : (v+'');\n    });\n    result.addError({\n      name: 'type',\n      argument: list,\n      message: \"is not of a type(s) \" + list,\n    });\n  }\n  return result;\n};\n\nfunction testSchemaNoThrow(instance, options, ctx, callback, schema){\n  var throwError = options.throwError;\n  var throwAll = options.throwAll;\n  options.throwError = false;\n  options.throwAll = false;\n  var res = this.validateSchema(instance, schema, options, ctx);\n  options.throwError = throwError;\n  options.throwAll = throwAll;\n\n  if (!res.valid && callback instanceof Function) {\n    callback(res);\n  }\n  return res.valid;\n}\n\n/**\n * Validates whether the instance matches some of the given schemas\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {ValidatorResult|null}\n */\nvalidators.anyOf = function validateAnyOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var inner = new ValidatorResult(instance, schema, options, ctx);\n  if (!Array.isArray(schema.anyOf)){\n    throw new SchemaError(\"anyOf must be an array\");\n  }\n  if (!schema.anyOf.some(\n    testSchemaNoThrow.bind(\n      this, instance, options, ctx, function(res){inner.importErrors(res);}\n    ))) {\n    var list = schema.anyOf.map(function (v, i) {\n      var id = v.$id || v.id;\n      if(id) return '<' + id + '>';\n      return(v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n    });\n    if (options.nestedErrors) {\n      result.importErrors(inner);\n    }\n    result.addError({\n      name: 'anyOf',\n      argument: list,\n      message: \"is not any of \" + list.join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance matches every given schema\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.allOf = function validateAllOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema.allOf)){\n    throw new SchemaError(\"allOf must be an array\");\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var self = this;\n  schema.allOf.forEach(function(v, i){\n    var valid = self.validateSchema(instance, v, options, ctx);\n    if(!valid.valid){\n      var id = v.$id || v.id;\n      var msg = id || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n      result.addError({\n        name: 'allOf',\n        argument: { id: msg, length: valid.errors.length, valid: valid },\n        message: 'does not match allOf schema ' + msg + ' with ' + valid.errors.length + ' error[s]:',\n      });\n      result.importErrors(valid);\n    }\n  });\n  return result;\n};\n\n/**\n * Validates whether the instance matches exactly one of the given schemas\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.oneOf = function validateOneOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema.oneOf)){\n    throw new SchemaError(\"oneOf must be an array\");\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var inner = new ValidatorResult(instance, schema, options, ctx);\n  var count = schema.oneOf.filter(\n    testSchemaNoThrow.bind(\n      this, instance, options, ctx, function(res) {inner.importErrors(res);}\n    ) ).length;\n  var list = schema.oneOf.map(function (v, i) {\n    var id = v.$id || v.id;\n    return id || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n  });\n  if (count!==1) {\n    if (options.nestedErrors) {\n      result.importErrors(inner);\n    }\n    result.addError({\n      name: 'oneOf',\n      argument: list,\n      message: \"is not exactly one from \" + list.join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates \"then\" or \"else\" depending on the result of validating \"if\"\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.if = function validateIf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) return null;\n  if (!helpers.isSchema(schema.if)) throw new Error('Expected \"if\" keyword to be a schema');\n  var ifValid = testSchemaNoThrow.call(this, instance, options, ctx, null, schema.if);\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var res;\n  if(ifValid){\n    if (schema.then === undefined) return;\n    if (!helpers.isSchema(schema.then)) throw new Error('Expected \"then\" keyword to be a schema');\n    res = this.validateSchema(instance, schema.then, options, ctx.makeChild(schema.then));\n    result.importErrors(res);\n  }else{\n    if (schema.else === undefined) return;\n    if (!helpers.isSchema(schema.else)) throw new Error('Expected \"else\" keyword to be a schema');\n    res = this.validateSchema(instance, schema.else, options, ctx.makeChild(schema.else));\n    result.importErrors(res);\n  }\n  return result;\n};\n\nfunction getEnumerableProperty(object, key){\n  // Determine if `key` shows up in `for(var key in object)`\n  // First test Object.hasOwnProperty.call as an optimization: that guarantees it does\n  if(Object.hasOwnProperty.call(object, key)) return object[key];\n  // Test `key in object` as an optimization; false means it won't\n  if(!(key in object)) return;\n  while( (object = Object.getPrototypeOf(object)) ){\n    if(Object.propertyIsEnumerable.call(object, key)) return object[key];\n  }\n}\n\n/**\n * Validates propertyNames\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.propertyNames = function validatePropertyNames (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var subschema = schema.propertyNames!==undefined ? schema.propertyNames : {};\n  if(!helpers.isSchema(subschema)) throw new SchemaError('Expected \"propertyNames\" to be a schema (object or boolean)');\n\n  for (var property in instance) {\n    if(getEnumerableProperty(instance, property) !== undefined){\n      var res = this.validateSchema(property, subschema, options, ctx.makeChild(subschema));\n      result.importErrors(res);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Validates properties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.properties = function validateProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var properties = schema.properties || {};\n  for (var property in properties) {\n    var subschema = properties[property];\n    if(subschema===undefined){\n      continue;\n    }else if(subschema===null){\n      throw new SchemaError('Unexpected null, expected schema in \"properties\"');\n    }\n    if (typeof options.preValidateProperty == 'function') {\n      options.preValidateProperty(instance, property, subschema, options, ctx);\n    }\n    var prop = getEnumerableProperty(instance, property);\n    var res = this.validateSchema(prop, subschema, options, ctx.makeChild(subschema, property));\n    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n    result.importErrors(res);\n  }\n  return result;\n};\n\n/**\n * Test a specific property within in instance against the additionalProperties schema attribute\n * This ignores properties with definitions in the properties schema attribute, but no other attributes.\n * If too many more types of property-existence tests pop up they may need their own class of tests (like `type` has)\n * @private\n * @return {boolean}\n */\nfunction testAdditionalProperty (instance, schema, options, ctx, property, result) {\n  if(!this.types.object(instance)) return;\n  if (schema.properties && schema.properties[property] !== undefined) {\n    return;\n  }\n  if (schema.additionalProperties === false) {\n    result.addError({\n      name: 'additionalProperties',\n      argument: property,\n      message: \"is not allowed to have the additional property \" + JSON.stringify(property),\n    });\n  } else {\n    var additionalProperties = schema.additionalProperties || {};\n\n    if (typeof options.preValidateProperty == 'function') {\n      options.preValidateProperty(instance, property, additionalProperties, options, ctx);\n    }\n\n    var res = this.validateSchema(instance[property], additionalProperties, options, ctx.makeChild(additionalProperties, property));\n    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n    result.importErrors(res);\n  }\n}\n\n/**\n * Validates patternProperties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.patternProperties = function validatePatternProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var patternProperties = schema.patternProperties || {};\n\n  for (var property in instance) {\n    var test = true;\n    for (var pattern in patternProperties) {\n      var subschema = patternProperties[pattern];\n      if(subschema===undefined){\n        continue;\n      }else if(subschema===null){\n        throw new SchemaError('Unexpected null, expected schema in \"patternProperties\"');\n      }\n      try {\n        var regexp = new RegExp(pattern, 'u');\n      } catch(_e) {\n        // In the event the stricter handling causes an error, fall back on the forgiving handling\n        // DEPRECATED\n        regexp = new RegExp(pattern);\n      }\n      if (!regexp.test(property)) {\n        continue;\n      }\n      test = false;\n\n      if (typeof options.preValidateProperty == 'function') {\n        options.preValidateProperty(instance, property, subschema, options, ctx);\n      }\n\n      var res = this.validateSchema(instance[property], subschema, options, ctx.makeChild(subschema, property));\n      if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n      result.importErrors(res);\n    }\n    if (test) {\n      testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Validates additionalProperties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.additionalProperties = function validateAdditionalProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  // if patternProperties is defined then we'll test when that one is called instead\n  if (schema.patternProperties) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  for (var property in instance) {\n    testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at least of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minProperties = function validateMinProperties (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var keys = Object.keys(instance);\n  if (!(keys.length >= schema.minProperties)) {\n    result.addError({\n      name: 'minProperties',\n      argument: schema.minProperties,\n      message: \"does not meet minimum property length of \" + schema.minProperties,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at most of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxProperties = function validateMaxProperties (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var keys = Object.keys(instance);\n  if (!(keys.length <= schema.maxProperties)) {\n    result.addError({\n      name: 'maxProperties',\n      argument: schema.maxProperties,\n      message: \"does not meet maximum property length of \" + schema.maxProperties,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates items when instance is an array\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.items = function validateItems (instance, schema, options, ctx) {\n  var self = this;\n  if (!this.types.array(instance)) return;\n  if (schema.items===undefined) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  instance.every(function (value, i) {\n    if(Array.isArray(schema.items)){\n      var items =  schema.items[i]===undefined ? schema.additionalItems : schema.items[i];\n    }else{\n      var items = schema.items;\n    }\n    if (items === undefined) {\n      return true;\n    }\n    if (items === false) {\n      result.addError({\n        name: 'items',\n        message: \"additionalItems not permitted\",\n      });\n      return false;\n    }\n    var res = self.validateSchema(value, items, options, ctx.makeChild(items, i));\n    if(res.instance !== result.instance[i]) result.instance[i] = res.instance;\n    result.importErrors(res);\n    return true;\n  });\n  return result;\n};\n\n/**\n * Validates the \"contains\" keyword\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.contains = function validateContains (instance, schema, options, ctx) {\n  var self = this;\n  if (!this.types.array(instance)) return;\n  if (schema.contains===undefined) return;\n  if (!helpers.isSchema(schema.contains)) throw new Error('Expected \"contains\" keyword to be a schema');\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var count = instance.some(function (value, i) {\n    var res = self.validateSchema(value, schema.contains, options, ctx.makeChild(schema.contains, i));\n    return res.errors.length===0;\n  });\n  if(count===false){\n    result.addError({\n      name: 'contains',\n      argument: schema.contains,\n      message: \"must contain an item matching given schema\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validates minimum and exclusiveMinimum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minimum = function validateMinimum (instance, schema, options, ctx) {\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (schema.exclusiveMinimum && schema.exclusiveMinimum === true) {\n    if(!(instance > schema.minimum)){\n      result.addError({\n        name: 'minimum',\n        argument: schema.minimum,\n        message: \"must be greater than \" + schema.minimum,\n      });\n    }\n  } else {\n    if(!(instance >= schema.minimum)){\n      result.addError({\n        name: 'minimum',\n        argument: schema.minimum,\n        message: \"must be greater than or equal to \" + schema.minimum,\n      });\n    }\n  }\n  return result;\n};\n\n/**\n * Validates maximum and exclusiveMaximum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maximum = function validateMaximum (instance, schema, options, ctx) {\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (schema.exclusiveMaximum && schema.exclusiveMaximum === true) {\n    if(!(instance < schema.maximum)){\n      result.addError({\n        name: 'maximum',\n        argument: schema.maximum,\n        message: \"must be less than \" + schema.maximum,\n      });\n    }\n  } else {\n    if(!(instance <= schema.maximum)){\n      result.addError({\n        name: 'maximum',\n        argument: schema.maximum,\n        message: \"must be less than or equal to \" + schema.maximum,\n      });\n    }\n  }\n  return result;\n};\n\n/**\n * Validates the number form of exclusiveMinimum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.exclusiveMinimum = function validateExclusiveMinimum (instance, schema, options, ctx) {\n  // Support the boolean form of exclusiveMinimum, which is handled by the \"minimum\" keyword.\n  if(typeof schema.exclusiveMinimum === 'boolean') return;\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var valid = instance > schema.exclusiveMinimum;\n  if (!valid) {\n    result.addError({\n      name: 'exclusiveMinimum',\n      argument: schema.exclusiveMinimum,\n      message: \"must be strictly greater than \" + schema.exclusiveMinimum,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates the number form of exclusiveMaximum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.exclusiveMaximum = function validateExclusiveMaximum (instance, schema, options, ctx) {\n  // Support the boolean form of exclusiveMaximum, which is handled by the \"maximum\" keyword.\n  if(typeof schema.exclusiveMaximum === 'boolean') return;\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var valid = instance < schema.exclusiveMaximum;\n  if (!valid) {\n    result.addError({\n      name: 'exclusiveMaximum',\n      argument: schema.exclusiveMaximum,\n      message: \"must be strictly less than \" + schema.exclusiveMaximum,\n    });\n  }\n  return result;\n};\n\n/**\n * Perform validation for multipleOf and divisibleBy, which are essentially the same.\n * @param instance\n * @param schema\n * @param validationType\n * @param errorMessage\n * @returns {String|null}\n */\nvar validateMultipleOfOrDivisbleBy = function validateMultipleOfOrDivisbleBy (instance, schema, options, ctx, validationType, errorMessage) {\n  if (!this.types.number(instance)) return;\n\n  var validationArgument = schema[validationType];\n  if (validationArgument == 0) {\n    throw new SchemaError(validationType + \" cannot be zero\");\n  }\n\n  var result = new ValidatorResult(instance, schema, options, ctx);\n\n  var instanceDecimals = helpers.getDecimalPlaces(instance);\n  var divisorDecimals = helpers.getDecimalPlaces(validationArgument);\n\n  var maxDecimals = Math.max(instanceDecimals , divisorDecimals);\n  var multiplier = Math.pow(10, maxDecimals);\n\n  if (Math.round(instance * multiplier) % Math.round(validationArgument * multiplier) !== 0) {\n    result.addError({\n      name: validationType,\n      argument:  validationArgument,\n      message: errorMessage + JSON.stringify(validationArgument),\n    });\n  }\n\n  return result;\n};\n\n/**\n * Validates divisibleBy when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.multipleOf = function validateMultipleOf (instance, schema, options, ctx) {\n  return validateMultipleOfOrDivisbleBy.call(this, instance, schema, options, ctx, \"multipleOf\", \"is not a multiple of (divisible by) \");\n};\n\n/**\n * Validates multipleOf when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.divisibleBy = function validateDivisibleBy (instance, schema, options, ctx) {\n  return validateMultipleOfOrDivisbleBy.call(this, instance, schema, options, ctx, \"divisibleBy\", \"is not divisible by (multiple of) \");\n};\n\n/**\n * Validates whether the instance value is present.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.required = function validateRequired (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (instance === undefined && schema.required === true) {\n    // A boolean form is implemented for reverse-compatibility with schemas written against older drafts\n    result.addError({\n      name: 'required',\n      message: \"is required\",\n    });\n  } else if (this.types.object(instance) && Array.isArray(schema.required)) {\n    schema.required.forEach(function(n){\n      if(getEnumerableProperty(instance, n)===undefined){\n        result.addError({\n          name: 'required',\n          argument: n,\n          message: \"requires property \" + JSON.stringify(n),\n        });\n      }\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value matches the regular expression, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.pattern = function validatePattern (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var pattern = schema.pattern;\n  try {\n    var regexp = new RegExp(pattern, 'u');\n  } catch(_e) {\n    // In the event the stricter handling causes an error, fall back on the forgiving handling\n    // DEPRECATED\n    regexp = new RegExp(pattern);\n  }\n  if (!instance.match(regexp)) {\n    result.addError({\n      name: 'pattern',\n      argument: schema.pattern,\n      message: \"does not match pattern \" + JSON.stringify(schema.pattern.toString()),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is of a certain defined format or a custom\n * format.\n * The following formats are supported for string types:\n *   - date-time\n *   - date\n *   - time\n *   - ip-address\n *   - ipv6\n *   - uri\n *   - color\n *   - host-name\n *   - alpha\n *   - alpha-numeric\n *   - utc-millisec\n * @param instance\n * @param schema\n * @param [options]\n * @param [ctx]\n * @return {String|null}\n */\nvalidators.format = function validateFormat (instance, schema, options, ctx) {\n  if (instance===undefined) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!result.disableFormat && !helpers.isFormat(instance, schema.format, this)) {\n    result.addError({\n      name: 'format',\n      argument: schema.format,\n      message: \"does not conform to the \" + JSON.stringify(schema.format) + \" format\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at least of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minLength = function validateMinLength (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var hsp = instance.match(/[\\uDC00-\\uDFFF]/g);\n  var length = instance.length - (hsp ? hsp.length : 0);\n  if (!(length >= schema.minLength)) {\n    result.addError({\n      name: 'minLength',\n      argument: schema.minLength,\n      message: \"does not meet minimum length of \" + schema.minLength,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at most of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxLength = function validateMaxLength (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  // TODO if this was already computed in \"minLength\", use that value instead of re-computing\n  var hsp = instance.match(/[\\uDC00-\\uDFFF]/g);\n  var length = instance.length - (hsp ? hsp.length : 0);\n  if (!(length <= schema.maxLength)) {\n    result.addError({\n      name: 'maxLength',\n      argument: schema.maxLength,\n      message: \"does not meet maximum length of \" + schema.maxLength,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether instance contains at least a minimum number of items, when the instance is an Array.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minItems = function validateMinItems (instance, schema, options, ctx) {\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length >= schema.minItems)) {\n    result.addError({\n      name: 'minItems',\n      argument: schema.minItems,\n      message: \"does not meet minimum length of \" + schema.minItems,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether instance contains no more than a maximum number of items, when the instance is an Array.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxItems = function validateMaxItems (instance, schema, options, ctx) {\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length <= schema.maxItems)) {\n    result.addError({\n      name: 'maxItems',\n      argument: schema.maxItems,\n      message: \"does not meet maximum length of \" + schema.maxItems,\n    });\n  }\n  return result;\n};\n\n/**\n * Deep compares arrays for duplicates\n * @param v\n * @param i\n * @param a\n * @private\n * @return {boolean}\n */\nfunction testArrays (v, i, a) {\n  var j, len = a.length;\n  for (j = i + 1, len; j < len; j++) {\n    if (helpers.deepCompareStrict(v, a[j])) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Validates whether there are no duplicates, when the instance is an Array.\n * @param instance\n * @return {String|null}\n */\nvalidators.uniqueItems = function validateUniqueItems (instance, schema, options, ctx) {\n  if (schema.uniqueItems!==true) return;\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!instance.every(testArrays)) {\n    result.addError({\n      name: 'uniqueItems',\n      message: \"contains duplicate item\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validate for the presence of dependency properties, if the instance is an object.\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {null|ValidatorResult}\n */\nvalidators.dependencies = function validateDependencies (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  for (var property in schema.dependencies) {\n    if (instance[property] === undefined) {\n      continue;\n    }\n    var dep = schema.dependencies[property];\n    var childContext = ctx.makeChild(dep, property);\n    if (typeof dep == 'string') {\n      dep = [dep];\n    }\n    if (Array.isArray(dep)) {\n      dep.forEach(function (prop) {\n        if (instance[prop] === undefined) {\n          result.addError({\n            // FIXME there's two different \"dependencies\" errors here with slightly different outputs\n            // Can we make these the same? Or should we create different error types?\n            name: 'dependencies',\n            argument: childContext.propertyPath,\n            message: \"property \" + prop + \" not found, required by \" + childContext.propertyPath,\n          });\n        }\n      });\n    } else {\n      var res = this.validateSchema(instance, dep, options, childContext);\n      if(result.instance !== res.instance) result.instance = res.instance;\n      if (res && res.errors.length) {\n        result.addError({\n          name: 'dependencies',\n          argument: childContext.propertyPath,\n          message: \"does not meet dependency required by \" + childContext.propertyPath,\n        });\n        result.importErrors(res);\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is one of the enumerated values.\n *\n * @param instance\n * @param schema\n * @return {ValidatorResult|null}\n */\nvalidators['enum'] = function validateEnum (instance, schema, options, ctx) {\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema['enum'])) {\n    throw new SchemaError(\"enum expects an array\", schema);\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!schema['enum'].some(helpers.deepCompareStrict.bind(null, instance))) {\n    result.addError({\n      name: 'enum',\n      argument: schema['enum'],\n      message: \"is not one of enum values: \" + schema['enum'].map(String).join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance exactly matches a given value\n *\n * @param instance\n * @param schema\n * @return {ValidatorResult|null}\n */\nvalidators['const'] = function validateEnum (instance, schema, options, ctx) {\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!helpers.deepCompareStrict(schema['const'], instance)) {\n    result.addError({\n      name: 'const',\n      argument: schema['const'],\n      message: \"does not exactly match expected constant: \" + schema['const'],\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance if of a prohibited type.\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {null|ValidatorResult}\n */\nvalidators.not = validators.disallow = function validateNot (instance, schema, options, ctx) {\n  var self = this;\n  if(instance===undefined) return null;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var notTypes = schema.not || schema.disallow;\n  if(!notTypes) return null;\n  if(!Array.isArray(notTypes)) notTypes=[notTypes];\n  notTypes.forEach(function (type) {\n    if (self.testType(instance, schema, options, ctx, type)) {\n      var id = type && (type.$id || type.id);\n      var schemaId = id || type;\n      result.addError({\n        name: 'not',\n        argument: schemaId,\n        message: \"is of prohibited type \" + schemaId,\n      });\n    }\n  });\n  return result;\n};\n\nmodule.exports = attribute;\n","'use strict';\n\nvar uri = require('url');\n\nvar ValidationError = exports.ValidationError = function ValidationError (message, instance, schema, path, name, argument) {\n  if(Array.isArray(path)){\n    this.path = path;\n    this.property = path.reduce(function(sum, item){\n      return sum + makeSuffix(item);\n    }, 'instance');\n  }else if(path !== undefined){\n    this.property = path;\n  }\n  if (message) {\n    this.message = message;\n  }\n  if (schema) {\n    var id = schema.$id || schema.id;\n    this.schema = id || schema;\n  }\n  if (instance !== undefined) {\n    this.instance = instance;\n  }\n  this.name = name;\n  this.argument = argument;\n  this.stack = this.toString();\n};\n\nValidationError.prototype.toString = function toString() {\n  return this.property + ' ' + this.message;\n};\n\nvar ValidatorResult = exports.ValidatorResult = function ValidatorResult(instance, schema, options, ctx) {\n  this.instance = instance;\n  this.schema = schema;\n  this.options = options;\n  this.path = ctx.path;\n  this.propertyPath = ctx.propertyPath;\n  this.errors = [];\n  this.throwError = options && options.throwError;\n  this.throwFirst = options && options.throwFirst;\n  this.throwAll = options && options.throwAll;\n  this.disableFormat = options && options.disableFormat === true;\n};\n\nValidatorResult.prototype.addError = function addError(detail) {\n  var err;\n  if (typeof detail == 'string') {\n    err = new ValidationError(detail, this.instance, this.schema, this.path);\n  } else {\n    if (!detail) throw new Error('Missing error detail');\n    if (!detail.message) throw new Error('Missing error message');\n    if (!detail.name) throw new Error('Missing validator type');\n    err = new ValidationError(detail.message, this.instance, this.schema, this.path, detail.name, detail.argument);\n  }\n\n  this.errors.push(err);\n  if (this.throwFirst) {\n    throw new ValidatorResultError(this);\n  }else if(this.throwError){\n    throw err;\n  }\n  return err;\n};\n\nValidatorResult.prototype.importErrors = function importErrors(res) {\n  if (typeof res == 'string' || (res && res.validatorType)) {\n    this.addError(res);\n  } else if (res && res.errors) {\n    this.errors = this.errors.concat(res.errors);\n  }\n};\n\nfunction stringizer (v,i){\n  return i+': '+v.toString()+'\\n';\n}\nValidatorResult.prototype.toString = function toString(res) {\n  return this.errors.map(stringizer).join('');\n};\n\nObject.defineProperty(ValidatorResult.prototype, \"valid\", { get: function() {\n  return !this.errors.length;\n} });\n\nmodule.exports.ValidatorResultError = ValidatorResultError;\nfunction ValidatorResultError(result) {\n  if(Error.captureStackTrace){\n    Error.captureStackTrace(this, ValidatorResultError);\n  }\n  this.instance = result.instance;\n  this.schema = result.schema;\n  this.options = result.options;\n  this.errors = result.errors;\n}\nValidatorResultError.prototype = new Error();\nValidatorResultError.prototype.constructor = ValidatorResultError;\nValidatorResultError.prototype.name = \"Validation Error\";\n\n/**\n * Describes a problem with a Schema which prevents validation of an instance\n * @name SchemaError\n * @constructor\n */\nvar SchemaError = exports.SchemaError = function SchemaError (msg, schema) {\n  this.message = msg;\n  this.schema = schema;\n  Error.call(this, msg);\n  Error.captureStackTrace(this, SchemaError);\n};\nSchemaError.prototype = Object.create(Error.prototype,\n  {\n    constructor: {value: SchemaError, enumerable: false},\n    name: {value: 'SchemaError', enumerable: false},\n  });\n\nvar SchemaContext = exports.SchemaContext = function SchemaContext (schema, options, path, base, schemas) {\n  this.schema = schema;\n  this.options = options;\n  if(Array.isArray(path)){\n    this.path = path;\n    this.propertyPath = path.reduce(function(sum, item){\n      return sum + makeSuffix(item);\n    }, 'instance');\n  }else{\n    this.propertyPath = path;\n  }\n  this.base = base;\n  this.schemas = schemas;\n};\n\nSchemaContext.prototype.resolve = function resolve (target) {\n  return uri.resolve(this.base, target);\n};\n\nSchemaContext.prototype.makeChild = function makeChild(schema, propertyName){\n  var path = (propertyName===undefined) ? this.path : this.path.concat([propertyName]);\n  var id = schema.$id || schema.id;\n  var base = uri.resolve(this.base, id||'');\n  var ctx = new SchemaContext(schema, this.options, path, base, Object.create(this.schemas));\n  if(id && !ctx.schemas[base]){\n    ctx.schemas[base] = schema;\n  }\n  return ctx;\n};\n\nvar FORMAT_REGEXPS = exports.FORMAT_REGEXPS = {\n  // 7.3.1. Dates, Times, and Duration\n  'date-time': /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])[tT ](2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])(\\.\\d+)?([zZ]|[+-]([0-5][0-9]):(60|[0-5][0-9]))$/,\n  'date': /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])$/,\n  'time': /^(2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])$/,\n  'duration': /P(T\\d+(H(\\d+M(\\d+S)?)?|M(\\d+S)?|S)|\\d+(D|M(\\d+D)?|Y(\\d+M(\\d+D)?)?)(T\\d+(H(\\d+M(\\d+S)?)?|M(\\d+S)?|S))?|\\d+W)/i,\n\n  // 7.3.2. Email Addresses\n  // TODO: fix the email production\n  'email': /^(?:[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+\\.)*[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+@(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!\\.)){0,61}[a-zA-Z0-9]?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!$)){0,61}[a-zA-Z0-9]?)|(?:\\[(?:(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\]))$/,\n  'idn-email': /^(\"(?:[!#-\\[\\]-\\u{10FFFF}]|\\\\[\\t -\\u{10FFFF}])*\"|[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}](?:\\.?[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}])*)@([!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}](?:\\.?[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}])*|\\[[!-Z\\^-\\u{10FFFF}]*\\])$/u,\n\n  // 7.3.3. Hostnames\n\n  // 7.3.4. IP Addresses\n  'ip-address': /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/,\n  // FIXME whitespace is invalid\n  'ipv6': /^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/,\n\n  // 7.3.5. Resource Identifiers\n  // TODO: A more accurate regular expression for \"uri\" goes:\n  // [A-Za-z][+\\-.0-9A-Za-z]*:((/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?)?#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])|/?%[0-9A-Fa-f]{2}|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*(#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?|/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)?)?\n  'uri': /^[a-zA-Z][a-zA-Z0-9+.-]*:[^\\s]*$/,\n  'uri-reference': /^(((([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|([A-Za-z][+\\-.0-9A-Za-z]*:?)?)|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?))#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(([A-Za-z][+\\-.0-9A-Za-z]*)?%[0-9A-Fa-f]{2}|[!$&-.0-9;=@_~]|[A-Za-z][+\\-.0-9A-Za-z]*[!$&-*,;=@_~])(%[0-9A-Fa-f]{2}|[!$&-.0-9;=@-Z_a-z~])*((([/?](%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?#|[/?])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?|([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)?|[A-Za-z][+\\-.0-9A-Za-z]*:?)?$/,\n  'iri': /^[a-zA-Z][a-zA-Z0-9+.-]*:[^\\s]*$/,\n  'iri-reference': /^(((([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|([A-Za-z][+\\-.0-9A-Za-z]*:?)?)|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|(\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?))#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|(([A-Za-z][+\\-.0-9A-Za-z]*)?%[0-9A-Fa-f]{2}|[!$&-.0-9;=@_~-\\u{10FFFF}]|[A-Za-z][+\\-.0-9A-Za-z]*[!$&-*,;=@_~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-.0-9;=@-Z_a-z~-\\u{10FFFF}])*((([/?](%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*)?#|[/?])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*)?|([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)?|[A-Za-z][+\\-.0-9A-Za-z]*:?)?$/u,\n  'uuid': /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n\n  // 7.3.6. uri-template\n  'uri-template': /(%[0-9a-f]{2}|[!#$&(-;=?@\\[\\]_a-z~]|\\{[!#&+,./;=?@|]?(%[0-9a-f]{2}|[0-9_a-z])(\\.?(%[0-9a-f]{2}|[0-9_a-z]))*(:[1-9]\\d{0,3}|\\*)?(,(%[0-9a-f]{2}|[0-9_a-z])(\\.?(%[0-9a-f]{2}|[0-9_a-z]))*(:[1-9]\\d{0,3}|\\*)?)*\\})*/iu,\n\n  // 7.3.7. JSON Pointers\n  'json-pointer': /^(\\/([\\x00-\\x2e0-@\\[-}\\x7f]|~[01])*)*$/iu,\n  'relative-json-pointer': /^\\d+(#|(\\/([\\x00-\\x2e0-@\\[-}\\x7f]|~[01])*)*)$/iu,\n\n  // hostname regex from: http://stackoverflow.com/a/1420225/5628\n  'hostname': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,\n  'host-name': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,\n\n  'utc-millisec': function (input) {\n    return (typeof input === 'string') && parseFloat(input) === parseInt(input, 10) && !isNaN(input);\n  },\n\n  // 7.3.8. regex\n  'regex': function (input) {\n    var result = true;\n    try {\n      new RegExp(input);\n    } catch (e) {\n      result = false;\n    }\n    return result;\n  },\n\n  // Other definitions\n  // \"style\" was removed from JSON Schema in draft-4 and is deprecated\n  'style': /[\\r\\n\\t ]*[^\\r\\n\\t ][^:]*:[\\r\\n\\t ]*[^\\r\\n\\t ;]*[\\r\\n\\t ]*;?/,\n  // \"color\" was removed from JSON Schema in draft-4 and is deprecated\n  'color': /^(#?([0-9A-Fa-f]{3}){1,2}\\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\\(\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(rgb\\(\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*\\)))$/,\n  'phone': /^\\+(?:[0-9] ?){6,14}[0-9]$/,\n  'alpha': /^[a-zA-Z]+$/,\n  'alphanumeric': /^[a-zA-Z0-9]+$/,\n};\n\nFORMAT_REGEXPS.regexp = FORMAT_REGEXPS.regex;\nFORMAT_REGEXPS.pattern = FORMAT_REGEXPS.regex;\nFORMAT_REGEXPS.ipv4 = FORMAT_REGEXPS['ip-address'];\n\nexports.isFormat = function isFormat (input, format, validator) {\n  if (typeof input === 'string' && FORMAT_REGEXPS[format] !== undefined) {\n    if (FORMAT_REGEXPS[format] instanceof RegExp) {\n      return FORMAT_REGEXPS[format].test(input);\n    }\n    if (typeof FORMAT_REGEXPS[format] === 'function') {\n      return FORMAT_REGEXPS[format](input);\n    }\n  } else if (validator && validator.customFormats &&\n      typeof validator.customFormats[format] === 'function') {\n    return validator.customFormats[format](input);\n  }\n  return true;\n};\n\nvar makeSuffix = exports.makeSuffix = function makeSuffix (key) {\n  key = key.toString();\n  // This function could be capable of outputting valid a ECMAScript string, but the\n  // resulting code for testing which form to use would be tens of thousands of characters long\n  // That means this will use the name form for some illegal forms\n  if (!key.match(/[.\\s\\[\\]]/) && !key.match(/^[\\d]/)) {\n    return '.' + key;\n  }\n  if (key.match(/^\\d+$/)) {\n    return '[' + key + ']';\n  }\n  return '[' + JSON.stringify(key) + ']';\n};\n\nexports.deepCompareStrict = function deepCompareStrict (a, b) {\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (Array.isArray(a)) {\n    if (!Array.isArray(b)) {\n      return false;\n    }\n    if (a.length !== b.length) {\n      return false;\n    }\n    return a.every(function (v, i) {\n      return deepCompareStrict(a[i], b[i]);\n    });\n  }\n  if (typeof a === 'object') {\n    if (!a || !b) {\n      return a === b;\n    }\n    var aKeys = Object.keys(a);\n    var bKeys = Object.keys(b);\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n    return aKeys.every(function (v) {\n      return deepCompareStrict(a[v], b[v]);\n    });\n  }\n  return a === b;\n};\n\nfunction deepMerger (target, dst, e, i) {\n  if (typeof e === 'object') {\n    dst[i] = deepMerge(target[i], e);\n  } else {\n    if (target.indexOf(e) === -1) {\n      dst.push(e);\n    }\n  }\n}\n\nfunction copyist (src, dst, key) {\n  dst[key] = src[key];\n}\n\nfunction copyistWithDeepMerge (target, src, dst, key) {\n  if (typeof src[key] !== 'object' || !src[key]) {\n    dst[key] = src[key];\n  }\n  else {\n    if (!target[key]) {\n      dst[key] = src[key];\n    } else {\n      dst[key] = deepMerge(target[key], src[key]);\n    }\n  }\n}\n\nfunction deepMerge (target, src) {\n  var array = Array.isArray(src);\n  var dst = array && [] || {};\n\n  if (array) {\n    target = target || [];\n    dst = dst.concat(target);\n    src.forEach(deepMerger.bind(null, target, dst));\n  } else {\n    if (target && typeof target === 'object') {\n      Object.keys(target).forEach(copyist.bind(null, target, dst));\n    }\n    Object.keys(src).forEach(copyistWithDeepMerge.bind(null, target, src, dst));\n  }\n\n  return dst;\n}\n\nmodule.exports.deepMerge = deepMerge;\n\n/**\n * Validates instance against the provided schema\n * Implements URI+JSON Pointer encoding, e.g. \"%7e\"=\"~0\"=>\"~\", \"~1\"=\"%2f\"=>\"/\"\n * @param o\n * @param s The path to walk o along\n * @return any\n */\nexports.objectGetPath = function objectGetPath(o, s) {\n  var parts = s.split('/').slice(1);\n  var k;\n  while (typeof (k=parts.shift()) == 'string') {\n    var n = decodeURIComponent(k.replace(/~0/,'~').replace(/~1/g,'/'));\n    if (!(n in o)) return;\n    o = o[n];\n  }\n  return o;\n};\n\nfunction pathEncoder (v) {\n  return '/'+encodeURIComponent(v).replace(/~/g,'%7E');\n}\n/**\n * Accept an Array of property names and return a JSON Pointer URI fragment\n * @param Array a\n * @return {String}\n */\nexports.encodePath = function encodePointer(a){\n  // ~ must be encoded explicitly because hacks\n  // the slash is encoded by encodeURIComponent\n  return a.map(pathEncoder).join('');\n};\n\n\n/**\n * Calculate the number of decimal places a number uses\n * We need this to get correct results out of multipleOf and divisibleBy\n * when either figure is has decimal places, due to IEEE-754 float issues.\n * @param number\n * @returns {number}\n */\nexports.getDecimalPlaces = function getDecimalPlaces(number) {\n\n  var decimalPlaces = 0;\n  if (isNaN(number)) return decimalPlaces;\n\n  if (typeof number !== 'number') {\n    number = Number(number);\n  }\n\n  var parts = number.toString().split('e');\n  if (parts.length === 2) {\n    if (parts[1][0] !== '-') {\n      return decimalPlaces;\n    } else {\n      decimalPlaces = Number(parts[1].slice(1));\n    }\n  }\n\n  var decimalParts = parts[0].split('.');\n  if (decimalParts.length === 2) {\n    decimalPlaces += decimalParts[1].length;\n  }\n\n  return decimalPlaces;\n};\n\nexports.isSchema = function isSchema(val){\n  return (typeof val === 'object' && val) || (typeof val === 'boolean');\n};\n\n","'use strict';\n\nvar Validator = module.exports.Validator = require('./validator');\n\nmodule.exports.ValidatorResult = require('./helpers').ValidatorResult;\nmodule.exports.ValidatorResultError = require('./helpers').ValidatorResultError;\nmodule.exports.ValidationError = require('./helpers').ValidationError;\nmodule.exports.SchemaError = require('./helpers').SchemaError;\nmodule.exports.SchemaScanResult = require('./scan').SchemaScanResult;\nmodule.exports.scan = require('./scan').scan;\n\nmodule.exports.validate = function (instance, schema, options) {\n  var v = new Validator();\n  return v.validate(instance, schema, options);\n};\n","\"use strict\";\n\nvar urilib = require('url');\nvar helpers = require('./helpers');\n\nmodule.exports.SchemaScanResult = SchemaScanResult;\nfunction SchemaScanResult(found, ref){\n  this.id = found;\n  this.ref = ref;\n}\n\n/**\n * Adds a schema with a certain urn to the Validator instance.\n * @param string uri\n * @param object schema\n * @return {Object}\n */\nmodule.exports.scan = function scan(base, schema){\n  function scanSchema(baseuri, schema){\n    if(!schema || typeof schema!='object') return;\n    // Mark all referenced schemas so we can tell later which schemas are referred to, but never defined\n    if(schema.$ref){\n      var resolvedUri = urilib.resolve(baseuri, schema.$ref);\n      ref[resolvedUri] = ref[resolvedUri] ? ref[resolvedUri]+1 : 0;\n      return;\n    }\n    var id = schema.$id || schema.id;\n    var ourBase = id ? urilib.resolve(baseuri, id) : baseuri;\n    if (ourBase) {\n      // If there's no fragment, append an empty one\n      if(ourBase.indexOf('#')<0) ourBase += '#';\n      if(found[ourBase]){\n        if(!helpers.deepCompareStrict(found[ourBase], schema)){\n          throw new Error('Schema <'+ourBase+'> already exists with different definition');\n        }\n        return found[ourBase];\n      }\n      found[ourBase] = schema;\n      // strip trailing fragment\n      if(ourBase[ourBase.length-1]=='#'){\n        found[ourBase.substring(0, ourBase.length-1)] = schema;\n      }\n    }\n    scanArray(ourBase+'/items', (Array.isArray(schema.items)?schema.items:[schema.items]));\n    scanArray(ourBase+'/extends', (Array.isArray(schema.extends)?schema.extends:[schema.extends]));\n    scanSchema(ourBase+'/additionalItems', schema.additionalItems);\n    scanObject(ourBase+'/properties', schema.properties);\n    scanSchema(ourBase+'/additionalProperties', schema.additionalProperties);\n    scanObject(ourBase+'/definitions', schema.definitions);\n    scanObject(ourBase+'/patternProperties', schema.patternProperties);\n    scanObject(ourBase+'/dependencies', schema.dependencies);\n    scanArray(ourBase+'/disallow', schema.disallow);\n    scanArray(ourBase+'/allOf', schema.allOf);\n    scanArray(ourBase+'/anyOf', schema.anyOf);\n    scanArray(ourBase+'/oneOf', schema.oneOf);\n    scanSchema(ourBase+'/not', schema.not);\n  }\n  function scanArray(baseuri, schemas){\n    if(!Array.isArray(schemas)) return;\n    for(var i=0; i<schemas.length; i++){\n      scanSchema(baseuri+'/'+i, schemas[i]);\n    }\n  }\n  function scanObject(baseuri, schemas){\n    if(!schemas || typeof schemas!='object') return;\n    for(var p in schemas){\n      scanSchema(baseuri+'/'+p, schemas[p]);\n    }\n  }\n\n  var found = {};\n  var ref = {};\n  scanSchema(base, schema);\n  return new SchemaScanResult(found, ref);\n};\n","'use strict';\n\nvar urilib = require('url');\n\nvar attribute = require('./attribute');\nvar helpers = require('./helpers');\nvar scanSchema = require('./scan').scan;\nvar ValidatorResult = helpers.ValidatorResult;\nvar ValidatorResultError = helpers.ValidatorResultError;\nvar SchemaError = helpers.SchemaError;\nvar SchemaContext = helpers.SchemaContext;\n//var anonymousBase = 'vnd.jsonschema:///';\nvar anonymousBase = '/';\n\n/**\n * Creates a new Validator object\n * @name Validator\n * @constructor\n */\nvar Validator = function Validator () {\n  // Allow a validator instance to override global custom formats or to have their\n  // own custom formats.\n  this.customFormats = Object.create(Validator.prototype.customFormats);\n  this.schemas = {};\n  this.unresolvedRefs = [];\n\n  // Use Object.create to make this extensible without Validator instances stepping on each other's toes.\n  this.types = Object.create(types);\n  this.attributes = Object.create(attribute.validators);\n};\n\n// Allow formats to be registered globally.\nValidator.prototype.customFormats = {};\n\n// Hint at the presence of a property\nValidator.prototype.schemas = null;\nValidator.prototype.types = null;\nValidator.prototype.attributes = null;\nValidator.prototype.unresolvedRefs = null;\n\n/**\n * Adds a schema with a certain urn to the Validator instance.\n * @param schema\n * @param urn\n * @return {Object}\n */\nValidator.prototype.addSchema = function addSchema (schema, base) {\n  var self = this;\n  if (!schema) {\n    return null;\n  }\n  var scan = scanSchema(base||anonymousBase, schema);\n  var ourUri = base || schema.$id || schema.id;\n  for(var uri in scan.id){\n    this.schemas[uri] = scan.id[uri];\n  }\n  for(var uri in scan.ref){\n    // If this schema is already defined, it will be filtered out by the next step\n    this.unresolvedRefs.push(uri);\n  }\n  // Remove newly defined schemas from unresolvedRefs\n  this.unresolvedRefs = this.unresolvedRefs.filter(function(uri){\n    return typeof self.schemas[uri]==='undefined';\n  });\n  return this.schemas[ourUri];\n};\n\nValidator.prototype.addSubSchemaArray = function addSubSchemaArray(baseuri, schemas) {\n  if(!Array.isArray(schemas)) return;\n  for(var i=0; i<schemas.length; i++){\n    this.addSubSchema(baseuri, schemas[i]);\n  }\n};\n\nValidator.prototype.addSubSchemaObject = function addSubSchemaArray(baseuri, schemas) {\n  if(!schemas || typeof schemas!='object') return;\n  for(var p in schemas){\n    this.addSubSchema(baseuri, schemas[p]);\n  }\n};\n\n\n\n/**\n * Sets all the schemas of the Validator instance.\n * @param schemas\n */\nValidator.prototype.setSchemas = function setSchemas (schemas) {\n  this.schemas = schemas;\n};\n\n/**\n * Returns the schema of a certain urn\n * @param urn\n */\nValidator.prototype.getSchema = function getSchema (urn) {\n  return this.schemas[urn];\n};\n\n/**\n * Validates instance against the provided schema\n * @param instance\n * @param schema\n * @param [options]\n * @param [ctx]\n * @return {Array}\n */\nValidator.prototype.validate = function validate (instance, schema, options, ctx) {\n  if((typeof schema !== 'boolean' && typeof schema !== 'object') || schema === null){\n    throw new SchemaError('Expected `schema` to be an object or boolean');\n  }\n  if (!options) {\n    options = {};\n  }\n  // This section indexes subschemas in the provided schema, so they don't need to be added with Validator#addSchema\n  // This will work so long as the function at uri.resolve() will resolve a relative URI to a relative URI\n  var id = schema.$id || schema.id;\n  var base = urilib.resolve(options.base||anonymousBase, id||'');\n  if(!ctx){\n    ctx = new SchemaContext(schema, options, [], base, Object.create(this.schemas));\n    if (!ctx.schemas[base]) {\n      ctx.schemas[base] = schema;\n    }\n    var found = scanSchema(base, schema);\n    for(var n in found.id){\n      var sch = found.id[n];\n      ctx.schemas[n] = sch;\n    }\n  }\n  if(options.required && instance===undefined){\n    var result = new ValidatorResult(instance, schema, options, ctx);\n    result.addError('is required, but is undefined');\n    return result;\n  }\n  var result = this.validateSchema(instance, schema, options, ctx);\n  if (!result) {\n    throw new Error('Result undefined');\n  }else if(options.throwAll && result.errors.length){\n    throw new ValidatorResultError(result);\n  }\n  return result;\n};\n\n/**\n* @param Object schema\n* @return mixed schema uri or false\n*/\nfunction shouldResolve(schema) {\n  var ref = (typeof schema === 'string') ? schema : schema.$ref;\n  if (typeof ref=='string') return ref;\n  return false;\n}\n\n/**\n * Validates an instance against the schema (the actual work horse)\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @private\n * @return {ValidatorResult}\n */\nValidator.prototype.validateSchema = function validateSchema (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n\n  // Support for the true/false schemas\n  if(typeof schema==='boolean') {\n    if(schema===true){\n      // `true` is always valid\n      schema = {};\n    }else if(schema===false){\n      // `false` is always invalid\n      schema = {type: []};\n    }\n  }else if(!schema){\n    // This might be a string\n    throw new Error(\"schema is undefined\");\n  }\n\n  if (schema['extends']) {\n    if (Array.isArray(schema['extends'])) {\n      var schemaobj = {schema: schema, ctx: ctx};\n      schema['extends'].forEach(this.schemaTraverser.bind(this, schemaobj));\n      schema = schemaobj.schema;\n      schemaobj.schema = null;\n      schemaobj.ctx = null;\n      schemaobj = null;\n    } else {\n      schema = helpers.deepMerge(schema, this.superResolve(schema['extends'], ctx));\n    }\n  }\n\n  // If passed a string argument, load that schema URI\n  var switchSchema = shouldResolve(schema);\n  if (switchSchema) {\n    var resolved = this.resolve(schema, switchSchema, ctx);\n    var subctx = new SchemaContext(resolved.subschema, options, ctx.path, resolved.switchSchema, ctx.schemas);\n    return this.validateSchema(instance, resolved.subschema, options, subctx);\n  }\n\n  var skipAttributes = options && options.skipAttributes || [];\n  // Validate each schema attribute against the instance\n  for (var key in schema) {\n    if (!attribute.ignoreProperties[key] && skipAttributes.indexOf(key) < 0) {\n      var validatorErr = null;\n      var validator = this.attributes[key];\n      if (validator) {\n        validatorErr = validator.call(this, instance, schema, options, ctx);\n      } else if (options.allowUnknownAttributes === false) {\n        // This represents an error with the schema itself, not an invalid instance\n        throw new SchemaError(\"Unsupported attribute: \" + key, schema);\n      }\n      if (validatorErr) {\n        result.importErrors(validatorErr);\n      }\n    }\n  }\n\n  if (typeof options.rewrite == 'function') {\n    var value = options.rewrite.call(this, instance, schema, options, ctx);\n    result.instance = value;\n  }\n  return result;\n};\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.schemaTraverser = function schemaTraverser (schemaobj, s) {\n  schemaobj.schema = helpers.deepMerge(schemaobj.schema, this.superResolve(s, schemaobj.ctx));\n};\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.superResolve = function superResolve (schema, ctx) {\n  var ref = shouldResolve(schema);\n  if(ref) {\n    return this.resolve(schema, ref, ctx).subschema;\n  }\n  return schema;\n};\n\n/**\n* @private\n* @param Object schema\n* @param Object switchSchema\n* @param SchemaContext ctx\n* @return Object resolved schemas {subschema:String, switchSchema: String}\n* @throws SchemaError\n*/\nValidator.prototype.resolve = function resolve (schema, switchSchema, ctx) {\n  switchSchema = ctx.resolve(switchSchema);\n  // First see if the schema exists under the provided URI\n  if (ctx.schemas[switchSchema]) {\n    return {subschema: ctx.schemas[switchSchema], switchSchema: switchSchema};\n  }\n  // Else try walking the property pointer\n  var parsed = urilib.parse(switchSchema);\n  var fragment = parsed && parsed.hash;\n  var document = fragment && fragment.length && switchSchema.substr(0, switchSchema.length - fragment.length);\n  if (!document || !ctx.schemas[document]) {\n    throw new SchemaError(\"no such schema <\" + switchSchema + \">\", schema);\n  }\n  var subschema = helpers.objectGetPath(ctx.schemas[document], fragment.substr(1));\n  if(subschema===undefined){\n    throw new SchemaError(\"no such schema \" + fragment + \" located in <\" + document + \">\", schema);\n  }\n  return {subschema: subschema, switchSchema: switchSchema};\n};\n\n/**\n * Tests whether the instance if of a certain type.\n * @private\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @param type\n * @return {boolean}\n */\nValidator.prototype.testType = function validateType (instance, schema, options, ctx, type) {\n  if(type===undefined){\n    return;\n  }else if(type===null){\n    throw new SchemaError('Unexpected null in \"type\" keyword');\n  }\n  if (typeof this.types[type] == 'function') {\n    return this.types[type].call(this, instance);\n  }\n  if (type && typeof type == 'object') {\n    var res = this.validateSchema(instance, type, options, ctx);\n    return res === undefined || !(res && res.errors.length);\n  }\n  // Undefined or properties not on the list are acceptable, same as not being defined\n  return true;\n};\n\nvar types = Validator.prototype.types = {};\ntypes.string = function testString (instance) {\n  return typeof instance == 'string';\n};\ntypes.number = function testNumber (instance) {\n  // isFinite returns false for NaN, Infinity, and -Infinity\n  return typeof instance == 'number' && isFinite(instance);\n};\ntypes.integer = function testInteger (instance) {\n  return (typeof instance == 'number') && instance % 1 === 0;\n};\ntypes.boolean = function testBoolean (instance) {\n  return typeof instance == 'boolean';\n};\ntypes.array = function testArray (instance) {\n  return Array.isArray(instance);\n};\ntypes['null'] = function testNull (instance) {\n  return instance === null;\n};\ntypes.date = function testDate (instance) {\n  return instance instanceof Date;\n};\ntypes.any = function testAny (instance) {\n  return true;\n};\ntypes.object = function testObject (instance) {\n  // TODO: fix this - see #15\n  return instance && (typeof instance === 'object') && !(Array.isArray(instance)) && !(instance instanceof Date);\n};\n\nmodule.exports = Validator;\n","var isHexPrefixed = require('is-hex-prefixed');\n\n/**\n * Removes '0x' from a given `String` is present\n * @param {String} str the string value\n * @return {String|Optional} a string by pass if necessary\n */\nmodule.exports = function stripHexPrefix(str) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n\n  return isHexPrefixed(str) ? str.slice(2) : str;\n}\n","// Written in 2014-2016 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n(function(root, f) {\n  'use strict';\n  if (typeof module !== 'undefined' && module.exports) module.exports = f();\n  else if (root.nacl) root.nacl.util = f();\n  else {\n    root.nacl = {};\n    root.nacl.util = f();\n  }\n}(this, function() {\n  'use strict';\n\n  var util = {};\n\n  function validateBase64(s) {\n    if (!(/^(?:[A-Za-z0-9+\\/]{2}[A-Za-z0-9+\\/]{2})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$/.test(s))) {\n      throw new TypeError('invalid encoding');\n    }\n  }\n\n  util.decodeUTF8 = function(s) {\n    if (typeof s !== 'string') throw new TypeError('expected string');\n    var i, d = unescape(encodeURIComponent(s)), b = new Uint8Array(d.length);\n    for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n    return b;\n  };\n\n  util.encodeUTF8 = function(arr) {\n    var i, s = [];\n    for (i = 0; i < arr.length; i++) s.push(String.fromCharCode(arr[i]));\n    return decodeURIComponent(escape(s.join('')));\n  };\n\n  if (typeof atob === 'undefined') {\n    // Node.js\n\n    if (typeof Buffer.from !== 'undefined') {\n       // Node v6 and later\n      util.encodeBase64 = function (arr) { // v6 and later\n          return Buffer.from(arr).toString('base64');\n      };\n\n      util.decodeBase64 = function (s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(Buffer.from(s, 'base64'), 0));\n      };\n\n    } else {\n      // Node earlier than v6\n      util.encodeBase64 = function (arr) { // v6 and later\n        return (new Buffer(arr)).toString('base64');\n      };\n\n      util.decodeBase64 = function(s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(new Buffer(s, 'base64'), 0));\n      };\n    }\n\n  } else {\n    // Browsers\n\n    util.encodeBase64 = function(arr) {\n      var i, s = [], len = arr.length;\n      for (i = 0; i < len; i++) s.push(String.fromCharCode(arr[i]));\n      return btoa(s.join(''));\n    };\n\n    util.decodeBase64 = function(s) {\n      validateBase64(s);\n      var i, d = atob(s), b = new Uint8Array(d.length);\n      for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n      return b;\n    };\n\n  }\n\n  return util;\n\n}));\n","(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES,\n\n  gf: gf,\n  D: D,\n  L: L,\n  pack25519: pack25519,\n  unpack25519: unpack25519,\n  M: M,\n  A: A,\n  S: S,\n  Z: Z,\n  pow2523: pow2523,\n  add: add,\n  set25519: set25519,\n  modL: modL,\n  scalarmult: scalarmult,\n  scalarbase: scalarbase,\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto');\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n"],"names":["util_1","require","crc_32_1","events_1","goerli","mainnet","rinkeby","ropsten","sepolia","eips_1","enums_1","hardforks_1","utils_1","Common","EventEmitter","constructor","opts","_opts$customChains","_this$_chainParams$de","super","_eips","this","_customChains","customChains","_chainParams","setChain","chain","DEFAULT_HARDFORK","defaultHardfork","Hardfork","Merge","HARDFORK_CHANGES","hardforks","map","hf","name","_hardfork","undefined","hardfork","setHardfork","eips","setEIPs","static","chainParamsOrName","_opts$baseChain","arguments","length","baseChain","standardChainParams","_getChainParams","CustomChain","PolygonMainnet","custom","chainId","networkId","PolygonMumbai","ArbitrumRinkebyTestnet","ArbitrumOne","xDaiChain","OptimisticKovan","Berlin","OptimisticEthereum","Error","genesisJson","_ref","_genesisParams$name","genesisHash","mergeForkIdPostMerge","genesisParams","parseGethGenesis","common","setForkHashes","initializedChains","_getInitializedChains","Boolean","toString","required","param","block","existing","hfChanges","emit","getHardforkByBlockNumber","blockNumber","td","timestamp","toType","TypeOutput","BigInt","Number","hfs","filter","ttd","mergeIndex","findIndex","slice","hfIndex","reverse","hfStartIndex","reduce","acc","_hf$timestamp","Math","max","_hf$timestamp2","min","setHardforkByBlockNumber","_getHardfork","eip","EIPs","minHF","gteHardfork","requiredEIPs","elem","includes","isActivatedEIP","topic","value","paramByEIP","paramByHardfork","_value","hfEIPs","valueEIP","v","eipParams","paramByBlock","hardforkIsActiveOnBlock","hfBlock","hardforkBlock","activeOnBlock","hardforkGteHardfork","hardfork1","hardfork2","_hardfork2","posHf1","posHf2","index","_hardfork3","_this$_getHardfork","hardforkTimestamp","_hardfork4","_this$_getHardfork2","eipBlock","hardforkTTD","_hardfork5","_this$_getHardfork3","isHardforkBlock","_hardfork6","nextHardforkBlockOrTimestamp","_hardfork7","_hfs$hfIndex$timestam","_nextHf$timestamp","currHfTimeOrBlock","nextHf","find","_hf$timestamp3","hfTimeOrBlock","nextHfBlock","nextHardforkBlock","_hardfork8","isNextHardforkBlock","_hardfork9","_calcForkHash","hfBuffer","Buffer","alloc","prevBlockOrTime","blockOrTime","hfBlockBuffer","from","padStart","concat","inputBuffer","intToBuffer","buf","forkHash","_hardfork10","data","hardforkForForkHash","resArray","_hf$timestamp4","genesis","bootstrapNodes","dnsNetworks","chainName","consensusType","_value2","consensusAlgorithm","_value3","consensusConfig","_ref2","_value4","copy","Object","assign","create","getPrototypeOf","removeAllListeners","names","id","entries","Chain","toLowerCase","chains","exports","ConsensusType","ConsensusAlgorithm","chainstart","homestead","dao","tangerineWhistle","spuriousDragon","byzantium","constantinople","petersburg","istanbul","muirGlacier","berlin","london","shanghai","arrowGlacier","grayGlacier","mergeForkIdTransition","merge","shardingFork","__exportStar","parseGethParams","json","_config$clique$period","_config$clique$epoch","config","difficulty","mixHash","gasLimit","coinbase","baseFeePerGas","extraData","nonce","genesisTimestamp","isHexPrefixed","intToHex","parseInt","stripHexPrefix","formatNonce","eip155Block","eip158Block","params","consensus","clique","type","algorithm","period","blockperiodseconds","epoch","epochlength","ethash","forkMap","Homestead","Dao","TangerineWhistle","SpuriousDragon","Byzantium","Constantinople","Petersburg","Istanbul","MuirGlacier","London","MergeForkIdTransition","postMerge","Shanghai","isTimestamp","ShardingForkDev","forkMapRev","keys","configHardforkNames","key","nameBlock","fork","sort","a","b","_a$block","_b$block","Infinity","_a$timestamp","_b$timestamp","terminalTotalDifficulty","mergeConfig","postMergeIndex","_forkMap$hf$name","splice","push","latestHardfork","unshift","Chainstart","some","field","e","message","common_1","types_1","util_2","txData","_opts$allowUnlimitedI","_opts$common","cache","hash","dataFee","activeCapabilities","DEFAULT_CHAIN","Mainnet","to","r","s","_type","bufferToBigInt","toBuffer","txOptions","toB","vB","rB","sB","Address","_validateCannotExceedMaxInteger","createContract","allowUnlimitedInitCodeSize","_getCommon","checkMaxInitCodeSize","supports","capability","validate","stringError","errors","getBaseFee","isSigned","verifySignature","_validateYParity","msg","_errorMsg","_validateHighS","SECP256K1_ORDER_DIV_2","txFee","fee","getDataFee","toCreationAddress","txCreationFee","txDataZero","txDataNonZero","cost","i","dataLength","ceil","publicKey","getSenderPublicKey","unpadBuffer","getSenderAddress","publicToAddress","sign","privateKey","hackApplied","Capability","EIP155ReplayProtection","msgHash","getMessageToSign","ecsign","tx","_processSignature","indexOf","chainIdBigInt","isSupportedChainId","_common$copy","values","bits","cannotEqual","MAX_UINT64","MAX_INTEGER","txDataKeys","Array","isArray","_getSharedErrorPostfix","bufferToHex","postfix","rlp_1","keccak_1","baseTransaction_1","TRANSACTION_TYPE_BUFFER","FeeMarketEIP1559Transaction","BaseTransaction","_opts$freeze","accessList","maxFeePerGas","maxPriorityFeePerGas","accessListData","AccessLists","getAccessListData","AccessListJSON","verifyAccessList","_validateNotArray","freeze","serialized","equals","arrToBufArr","RLP","decode","fromValuesArray","validateNoLeadingZeroes","getDataFeeEIP2930","isFrozen","getUpfrontCost","baseFee","prio","maxBase","gasPrice","raw","bigIntToUnpaddedBuffer","serialize","base","encode","bufArrToArr","hashMessage","keccak256","getMessageToVerifySignature","ecrecover","fromTxData","toJSON","accessListJSON","getAccessListJSON","bigIntToHex","errorStr","AccessListEIP2930Transaction","Uint8Array","_this$accessList$leng","_this$accessList","ssz_1","constants_1","kzg_1","blobHelpers_1","BlobEIP4844Transaction","_txData$versionedHash","_txData$blobs","_txData$kzgCommitment","maxFeePerDataGas","versionedHashes","vh","LIMIT_BLOBS_PER_TX","blobs","blob","kzgCommitments","commitment","aggregateKzgProof","kzgProof","wrapper","BlobNetworkTransactionWrapper","deserialize","decodedTx","version","validateBlobTransactionNetworkWrapper","commitments","kzg","verifyAggregateKzgProof","x","computedVersionedHash","computeVersionedHash","byteArrayEquals","blobVersionedHashes","blobKzgs","kzgAggregatedProof","listItem","accessListItem","address","storageKeys","fromString","el","signature","yParity","gas","decoded","SignedBlobTransactionType","toValue","_this$to$toBuffer","_this$to","_this$r","_this$s","selector","sszEncodedTx","serializeNetworkWrapper","_this$to$toBuffer2","_this$to2","_this$blobs$map","_this$blobs","_this$kzgCommitments$","_this$kzgCommitments","_this$aggregateKzgPro","blobArrays","serializedTxWrapper","blobTxToNetworkWrapperDataFormat","_hashMessage","unsignedHash","serializedTx","BlobTransactionType","numBlobs","_txParams","_txParams$gasLimit","txParams","input","setLengthLeft","eip1559Transaction_1","enumerable","get","eip2930Transaction_1","eip4844Transaction_1","initKZG","legacyTransaction_1","Transaction","transactionFactory_1","TransactionFactory","kzgNotLoaded","freeTrustedSetup","loadTrustedSetup","blobToKzgCommitment","computeAggregateKzgProof","verifyKzgProof","kzgLib","trustedSetupPath","meetsEIP155","_v","chainIdDoubled","_validateTxV","_getMessageToSign","numSub","fromRpc_1","txType","fromSerializedTx","isBuffer","fromSerializedData","provider","txHash","prov","getProvider","fetchFromProvider","method","fromRPCTx","normalizeTxParams","Bytes20","ByteVectorType","Bytes32","Bytes48","Uint64","UintBigintType","Uint256","isAccessListBuffer","firstItem","ContainerType","AddressType","ListCompositeType","MAX_VERSIONED_HASHES_LIST_SIZE","UnionType","NoneType","ByteListType","MAX_CALLDATA_SIZE","AccessTupleType","MAX_ACCESS_LIST_SIZE","BooleanType","ECDSASignatureType","KZGCommitmentType","MAX_TX_WRAP_KZG_COMMITMENTS","FIELD_ELEMENTS_PER_BLOB","BYTES_PER_FIELD_ELEMENT","KZGProofType","maxInitCodeSize","bufferAccessList","isAccessList","newAccessList","item","addressBuffer","storageItems","jsonItem","storageSlots","storageSlot","JSONItem","slot","accessListStorageKeyCost","accessListAddressCost","slots","_tx$to$toBuffer","_tx$to","_tx$r","_tx$s","sha256_1","USEFUL_BYTES_PER_BLOB","get_blob","chunk","fill","subarray","len","byteLength","blobs_len","pdata","datalen","get_padded","blobCommitmentVersion","set","sha256","hashes","output","outputLength","encoded","concatBytes","encodeLength","inputBuf","toBytes","safeSlice","start","end","decodeLength","parseHexByte","bytesToHex","offset","hexLength","numberToHex","firstByte","hexToBytes","stream","_decode","remainder","llength","innerRemainder","d","totalLength","cachedHexes","uint8a","hex","hexByte","byte","isNaN","TypeError","array","j","_len","arrays","_key","arr","result","pad","utf8ToBytes","utf","TextEncoder","integer","str","nacl","__importStar","naclUtil","encrypt","isNullish","ephemeralKeyPair","box","keyPair","pubKeyUInt8Array","decodeBase64","err","msgParamsUInt8Array","decodeUTF8","randomBytes","nonceLength","encryptedMessage","secretKey","encodeBase64","ephemPublicKey","ciphertext","decrypt","_ref3","encryptedData","receiverPrivateKeyUint8Array","naclDecodeHex","receiverEncryptionPrivateKey","fromSecretKey","decryptedMessage","open","encodeUTF8","msgHex","msgBase64","dataWithPadding","padding","modVal","JSON","stringify","padLength","repeat","_ref4","parse","privateKeyUint8Array","encryptionPublicKey","bn_js_1","__importDefault","ethjs_util_1","endsWith","parseTypeArray","tmp","match","parseTypeN","exec","parseNumber","arg","default","prototype","hasOwnProperty","call","isBN","solidityHexValue","bitsize","subType","replace","arraySize","arrayValues","join","bytesize","startsWith","size","normalize","setLengthRight","num","bitLength","toArrayLike","toTwos","elementaryName","encodeSingle","ret","lastIndexOf","zeros","nArg","isNeg","parseTypeNxM","mul","pow","isDynamic","types","headLength","forEach","cur","concatSig","getPublicKeyFor","messageHash","hashPersonalMessage","legacyToBuffer","recoverPublicKey","sig","sender","ethereumjs_abi_utils_1","SignTypedDataVersion","validateVersion","allowedVersions","encodeField","V3","V4","encodeData","numberToBuffer","isHexString","prepend","parsedType","typeValuePairs","rawEncode","t","primaryType","encodedTypes","encodedValues","hashType","encodeType","unsortedDeps","findTypeDependencies","delete","deps","results","Set","has","add","hashStruct","hashed","encodedHashType","sanitizeData","sanitizedData","TYPED_MESSAGE_SCHEMA","properties","EIP712Domain","eip712DomainHash","typedData","domain","_typedSignatureHash","error","schema","solidityPack","additionalProperties","items","eip712Hash","parts","hashBuffer","V1","TypedDataUtils","_ref5","padWithZeroes","hexString","targetLength","test","String","rSig","fromSigned","sSig","vSig","bufferToInt","rStr","toUnsigned","sStr","vStr","addHexPrefix","sigParams","fromRpcSig","buffer","hexVal","module","assert","val","inherits","ctor","superCtor","super_","TempCtor","BN","number","endian","negative","words","red","_init","wordSize","window","parseHex4Bits","string","c","charCodeAt","lowerBound","parseBase","left","right","cmp","_initNumber","_initArray","_parseHex","_parseBase","toArray","w","off","strip","limbLen","limbPow","total","mod","word","imuln","_iaddn","dest","clone","_expand","_normSign","inspect","groupSizes","groupBases","smallMulTo","self","out","lo","carry","k","ncarry","rword","maxJ","groupSize","groupBase","isZero","modn","idivn","toNumber","ArrayType","reqLength","littleEndian","res","q","andln","iushrn","clz32","_countBits","_zeroBits","hi","zeroBits","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","sub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","jumboMulTo","FFTM","mulp","y","mulTo","hncarry","bigMulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","toBitArray","iushln","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","shift","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","_strip","outLen","prev","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u","resemblesAddress","createWalletMiddleware","getAccounts","getPrivateKey","processDecryptMessage","processEncryptionPublicKey","processEthSignMessage","processPersonalMessage","processTransaction","processSignTransaction","processTypedMessage","processTypedMessageV3","processTypedMessageV4","async","validateAndNormalizeKeyholder","req","normalizedAccounts","_address","normalizedAddress","ethErrors","rpc","invalidParams","fetchPrivateKey","methodNotSupported","createScaffoldMiddleware","eth_accounts","createAsyncMiddleware","eth_private_key","private_key","eth_coinbase","accounts","eth_sendTransaction","eth_signTransaction","eth_sign","msgParams","_objectSpread$5","eth_signTypedData","eth_signTypedData_v3","eth_signTypedData_v4","personal_sign","firstParam","secondParam","extraParams","warning","eth_getEncryptionPublicKey","eth_decrypt","createEthMiddleware","providerHandlers","mergeMiddleware","eth_syncing","createChainIdMiddleware","createProviderConfigMiddleware","providerConfig","createJsonRpcClient","rpcTarget","fetchMiddleware","createFetchMiddleware","networkMiddleware","WalletConnectProvider","BaseProvider","state","connector","chainConfig","_objectSpread$4","chainNamespace","CHAIN_NAMESPACES","EIP155","skipLookupNetwork","_defineProperty","code","setupProvider","_providerEngineProxy","request","onConnectorStateUpdate","setupEngine","addChain","lookup","currentChainConfig","getChainConfig","update","displayName","sendCustomRequest","rpcUrls","blockExplorerUrls","blockExplorer","nativeCurrency","tickerName","symbol","ticker","decimals","log","configure","lookupNetwork","WalletInitializationError","notReady","connected","WalletLoginError","notConnectedError","connectedHexChainId","isHexStrict","rpcConnectionError","sendTransaction","signTransaction","signMessage","signPersonalMessage","signTypedData","getProviderHandlers$1","ethMiddleware","engine","JRPCEngine","providerFromEngine","updateProviderEngineProxy","on","payload","connectedChainId","rpcUrl","maybeConfig","providerFactory","BIG_NUMBER_WEI_MULTIPLIER","BigNumber","BIG_NUMBER_GWEI_MULTIPLIER","BIG_NUMBER_ETH_MULTIPLIER","toBigNumber","dec","toNormalizedDenomination","WEI","bigNumber","GWEI","ETH","toSpecifiedDenomination","times","dp","ROUND_HALF_UP","baseChange","conversionUtil","fromNumericBase","toNumericBase","fromDenomination","toDenomination","numberOfDecimals","convertedValue","ROUND_HALF_DOWN","converter","decGWEIToHexWEI","decGWEI","hexWEIToDecGWEI","normalizeGWEIDecimalNumbers","validateTypedMessageParams","parameters","activeChainId","_data$domain","isValidAddress","typedSignatureHash","validation","jsonschema","invalidInput","signTx","privKey","txFormatter","finalTxParams","formatTransaction","getCommonConfiguration","bnToHex","inputBn","hexToBn","inputHex","TRANSACTION_ENVELOPE_TYPES","TRANSACTION_TYPES","GAS_ESTIMATE_TYPES","TransactionFormatter","getProviderEngineProxy","providerProxy","isEIP1559Compatible","getEIP1559Compatibility","customChainParams","clonedTxParams","_objectSpread$1","defaultGasLimit","getDefaultGasLimit","defaultGasPrice","defaultMaxFeePerGas","defaultMaxPriorityFeePerGas","getDefaultGasFees","BigNumber$1","latestBlock","isLegacyGasAPICompatible","gasData","gasFeeEstimates","url","estimates","_objectSpread$3","estimatedBaseFee","low","suggestedMaxPriorityFeePerGas","suggestedMaxFeePerGas","medium","high","fetchEip1159GasEstimates","gasEstimateType","referrer","referrerPolicy","SafeGasPrice","ProposeGasPrice","FastGasPrice","fetchLegacyGasPriceEstimates","fetchEthGasPriceEstimate","fetchGasFeeEstimateData","txMeta","estimatedGasHex","targetBN","numerator","denominator","numberBN","denomBN","BnMultiplyByFraction","estimateTxGas","warn","blockGasLimit","addGasBuffer","initialGasLimitHex","blockGasLimitHex","multiplier","initialGasLimitBn","upperGasLimitBn","bufferedGasLimitBn","txParameters","txCategory","transactionCategory","determineTransactionCategory","TWENTY_ONE_THOUSAND","analyzeGasUsage","EthereumPrivateKeyProvider","_objectSpread","bind","privateToAddress","providerEngineProxy","signedTx","privKeyBuffer","personalSign","debug","finalChainId","_objectSpread$2","info","getEncryptionPublicKey","stripped","buff","getProviderHandlers","chainSwitchMiddleware","getChainSwitchMiddleware","getAccountMiddleware","init","network","chainDisconnected","switchChain","wallet_addEthereumChain","_req$params","chainParams","wallet_switchEthereumChain","_req$params2","createChainSwitchMiddleware","updatePrivatekey","wallet_updateAccount","_req$params3","accountParams","createAccountMiddleware","updateAccount","factory","CRC32","T0","table","Int32Array","signed_crc_table","TT","T","slice_by_16_tables","T1","T2","T3","T4","T5","T6","T7","T8","T9","Ta","Tb","Tc","Td","Te","Tf","bstr","seed","L","DO_NOT_EXPORT_CRC","defineProperty","wrapHash","padToEven","arrayContainsArray","superset","subset","getBinarySize","fromAscii","stringValue","fromUtf8","toAscii","substring","substr","fromCharCode","toUtf8","getKeys","allowEmpty","helpers","ValidatorResult","SchemaError","attribute","validators","testSchemaNoThrow","instance","options","callback","throwError","throwAll","validateSchema","valid","Function","getEnumerableProperty","object","propertyIsEnumerable","testAdditionalProperty","property","addError","argument","preValidateProperty","makeChild","importErrors","testType","list","$id","anyOf","inner","title","nestedErrors","allOf","oneOf","count","if","isSchema","ifValid","then","else","propertyNames","subschema","prop","patternProperties","pattern","regexp","RegExp","_e","minProperties","maxProperties","every","additionalItems","contains","minimum","exclusiveMinimum","maximum","exclusiveMaximum","validateMultipleOfOrDivisbleBy","validationType","errorMessage","validationArgument","instanceDecimals","getDecimalPlaces","divisorDecimals","maxDecimals","testArrays","deepCompareStrict","multipleOf","divisibleBy","format","disableFormat","isFormat","minLength","hsp","maxLength","minItems","maxItems","uniqueItems","dependencies","dep","childContext","propertyPath","not","disallow","notTypes","schemaId","uri","ValidationError","path","sum","makeSuffix","stack","throwFirst","stringizer","ValidatorResultError","captureStackTrace","detail","validatorType","SchemaContext","schemas","resolve","target","propertyName","FORMAT_REGEXPS","parseFloat","regex","ipv4","validator","customFormats","deepMerger","dst","deepMerge","copyist","src","copyistWithDeepMerge","pathEncoder","encodeURIComponent","aKeys","bKeys","objectGetPath","decodeURIComponent","encodePath","decimalPlaces","decimalParts","Validator","SchemaScanResult","scan","urilib","found","ref","scanSchema","baseuri","$ref","resolvedUri","ourBase","scanArray","extends","scanObject","definitions","unresolvedRefs","attributes","shouldResolve","addSchema","ourUri","addSubSchemaArray","addSubSchema","addSubSchemaObject","setSchemas","getSchema","urn","sch","schemaobj","schemaTraverser","superResolve","switchSchema","resolved","subctx","skipAttributes","ignoreProperties","validatorErr","allowUnknownAttributes","rewrite","parsed","fragment","document","isFinite","boolean","date","Date","any","root","f","util","validateBase64","unescape","escape","atob","btoa","gf","Float64Array","randombytes","_0","_9","gf0","gf1","_121665","D2","X","Y","I","ts64","vn","xi","yi","crypto_verify_16","crypto_verify_32","crypto_core_salsa20","inp","j0","j1","j2","j3","j4","j5","j6","j7","j8","j9","j10","j11","j12","j13","j14","j15","x0","x3","x4","x5","x6","x7","x8","x9","x10","x11","x12","x13","x14","x15","core_salsa20","crypto_core_hsalsa20","core_hsalsa20","sigma","crypto_stream_salsa20_xor","cpos","mpos","crypto_stream_salsa20","crypto_stream","sn","crypto_stream_xor","poly1305","t0","t1","t2","t3","t4","t5","t6","t7","Uint16Array","leftover","fin","crypto_onetimeauth","outpos","finish","crypto_onetimeauth_verify","hpos","crypto_secretbox","crypto_secretbox_open","set25519","car25519","floor","sel25519","pack25519","neq25519","par25519","unpack25519","Z","M","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","b10","b11","b12","b13","b14","b15","S","inv25519","pow2523","crypto_scalarmult","x32","x16","crypto_scalarmult_base","crypto_box_keypair","crypto_box_beforenm","blocks","bytes","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","hibit","h0","h1","h2","h3","h4","h5","h6","h7","h8","h9","r0","r1","r3","r4","r5","r6","r7","r8","r9","mac","macpos","want","crypto_box_afternm","crypto_box_open_afternm","K","crypto_hashblocks_hl","hh","hl","th","tl","wh","wl","pos","crypto_hash","cswap","pack","ty","zi","scalarmult","scalarbase","crypto_sign_keypair","pk","sk","seeded","modL","crypto_sign","sm","smlen","crypto_sign_open","chk","den","den2","den4","den6","unpackneg","crypto_secretbox_BOXZEROBYTES","crypto_sign_BYTES","crypto_sign_PUBLICKEYBYTES","crypto_sign_SECRETKEYBYTES","checkLengths","checkArrayTypes","cleanup","lowlevel","crypto_box","crypto_box_open","crypto_secretbox_KEYBYTES","crypto_secretbox_NONCEBYTES","crypto_secretbox_ZEROBYTES","crypto_scalarmult_BYTES","crypto_scalarmult_SCALARBYTES","crypto_box_PUBLICKEYBYTES","crypto_box_SECRETKEYBYTES","crypto_box_BEFORENMBYTES","crypto_box_NONCEBYTES","crypto_box_ZEROBYTES","crypto_box_BOXZEROBYTES","crypto_sign_SEEDBYTES","crypto_hash_BYTES","secretbox","keyLength","overheadLength","scalarMult","scalarLength","groupElementLength","before","checkBoxLengths","after","publicKeyLength","secretKeyLength","sharedKeyLength","signedMsg","mlen","detached","verify","fromSeed","seedLength","signatureLength","hashLength","setPRNG","fn","crypto","msCrypto","getRandomValues"],"sourceRoot":""}